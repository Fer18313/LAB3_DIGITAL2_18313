

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 04 11:50:20 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  000E                     	;# 
   467  000F                     	;# 
   468  0010                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0013                     	;# 
   472  0014                     	;# 
   473  0015                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  001D                     	;# 
   484  001E                     	;# 
   485  001F                     	;# 
   486  0081                     	;# 
   487  0085                     	;# 
   488  0086                     	;# 
   489  0087                     	;# 
   490  0088                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529                           
   530                           	psect	idataBANK0
   531  049E                     __pidataBANK0:
   532                           
   533                           ;initializer for _J0
   534  049E  3401               	retlw	1
   535                           
   536                           ;initializer for _var
   537  049F  3401               	retlw	1
   538  0001                     _TMR0	set	1
   539  0018                     _RCSTAbits	set	24
   540  0009                     _PORTE	set	9
   541  0007                     _PORTC	set	7
   542  0005                     _PORTA	set	5
   543  0019                     _TXREG	set	25
   544  0006                     _PORTB	set	6
   545  001A                     _RCREG	set	26
   546  000C                     _PIR1bits	set	12
   547  000B                     _INTCONbits	set	11
   548  0008                     _PORTDbits	set	8
   549  0005                     _PORTAbits	set	5
   550  0013                     _SSPBUF	set	19
   551  0014                     _SSPCON	set	20
   552  0008                     _PORTD	set	8
   553  001F                     _ADCON0bits	set	31
   554  0064                     _TXIF	set	100
   555  0049                     _RE1	set	73
   556  0048                     _RE0	set	72
   557  0081                     _OPTION_REGbits	set	129
   558  009A                     _SPBRGH	set	154
   559  0099                     _SPBRG	set	153
   560  0098                     _TXSTAbits	set	152
   561  0089                     _TRISE	set	137
   562  0088                     _TRISD	set	136
   563  0087                     _TRISC	set	135
   564  0086                     _TRISB	set	134
   565  0085                     _TRISA	set	133
   566  008F                     _OSCCONbits	set	143
   567  0094                     _SSPSTATbits	set	148
   568  0094                     _SSPSTAT	set	148
   569  009F                     _ADCON1bits	set	159
   570  0428                     _TRISA0	set	1064
   571  0464                     _TXIE	set	1124
   572  043B                     _TRISC3	set	1083
   573  043D                     _TRISC5	set	1085
   574  0187                     _BAUDCTLbits	set	391
   575  0188                     _ANSEL	set	392
   576  0189                     _ANSELH	set	393
   577                           
   578                           	psect	cinit
   579  0011                     start_initialization:	
   580                           ; #config settings
   581                           
   582  0011                     __initialization:
   583                           
   584                           ; Initialize objects allocated to BANK0
   585  0011  120A  118A  249E  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   586  0016  00C7               	movwf	__pdataBANK0& (0+127)
   587  0017  120A  118A  249F  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   588  001C  00C8               	movwf	(__pdataBANK0+1)& (0+127)
   589                           
   590                           ; Clear objects allocated to BANK0
   591  001D  01B9               	clrf	__pbssBANK0& (0+127)
   592  001E  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   593  001F  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   594  0020  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   595  0021  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   596  0022  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   597  0023  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   598  0024  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   599  0025  01C1               	clrf	(__pbssBANK0+8)& (0+127)
   600  0026  01C2               	clrf	(__pbssBANK0+9)& (0+127)
   601  0027  01C3               	clrf	(__pbssBANK0+10)& (0+127)
   602  0028  01C4               	clrf	(__pbssBANK0+11)& (0+127)
   603  0029  01C5               	clrf	(__pbssBANK0+12)& (0+127)
   604  002A  01C6               	clrf	(__pbssBANK0+13)& (0+127)
   605                           
   606                           ; Clear objects allocated to COMMON
   607  002B  01FB               	clrf	__pbssCOMMON& (0+127)
   608  002C  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   609  002D  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   610  002E                     end_of_initialization:	
   611                           ;End of C runtime variable initialization code
   612                           
   613  002E                     __end_of__initialization:
   614  002E  0183               	clrf	3
   615  002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
   616                           
   617                           	psect	bssCOMMON
   618  007B                     __pbssCOMMON:
   619  007B                     _HUGO:
   620  007B                     	ds	1
   621  007C                     _temp_read:
   622  007C                     	ds	1
   623  007D                     _unidad:
   624  007D                     	ds	1
   625                           
   626                           	psect	bssBANK0
   627  0039                     __pbssBANK0:
   628  0039                     _FZERO:
   629  0039                     	ds	1
   630  003A                     _dozen_1:
   631  003A                     	ds	1
   632  003B                     _dozen:
   633  003B                     	ds	1
   634  003C                     _k1:
   635  003C                     	ds	1
   636  003D                     _k0:
   637  003D                     	ds	1
   638  003E                     _unit_1_change:
   639  003E                     	ds	1
   640  003F                     _unit:
   641  003F                     	ds	1
   642  0040                     _var0:
   643  0040                     	ds	1
   644  0041                     _var1:
   645  0041                     	ds	1
   646  0042                     _c:
   647  0042                     	ds	1
   648  0043                     _counter:
   649  0043                     	ds	1
   650  0044                     _decathlon:
   651  0044                     	ds	1
   652  0045                     _J_2_dontpayenough:
   653  0045                     	ds	1
   654  0046                     _J_1:
   655  0046                     	ds	1
   656                           
   657                           	psect	dataBANK0
   658  0047                     __pdataBANK0:
   659  0047                     _J0:
   660  0047                     	ds	1
   661  0048                     _var:
   662  0048                     	ds	1
   663                           
   664                           	psect	cstackCOMMON
   665  0070                     __pcstackCOMMON:
   666  0070                     ?_initCONFIG:
   667  0070                     ?_initTMR0:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_spiReceiveWait:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_spiWrite:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_spiRead:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_main:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_isr:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?i1___bmul:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     i1___bmul@multiplicand:	
   689                           ; 1 bytes @ 0x0
   690                           
   691                           
   692                           ; 1 bytes @ 0x0
   693  0070                     	ds	1
   694  0071                     ??i1___bmul:
   695                           
   696                           ; 1 bytes @ 0x1
   697  0071                     	ds	1
   698  0072                     i1___bmul@product:
   699                           
   700                           ; 1 bytes @ 0x2
   701  0072                     	ds	1
   702  0073                     i1___bmul@multiplier:
   703                           
   704                           ; 1 bytes @ 0x3
   705  0073                     	ds	1
   706  0074                     ??_isr:
   707                           
   708                           ; 1 bytes @ 0x4
   709  0074                     	ds	7
   710                           
   711                           	psect	cstackBANK0
   712  0020                     __pcstackBANK0:
   713  0020                     ??_initTMR0:
   714  0020                     ?_spiInit:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0020                     ??_spiReceiveWait:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0020                     ??_spiWrite:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0020                     ??_spiRead:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0020                     ?___bmul:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0020                     ?___wmul:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0020                     spiInit@sDataSample:	
   733                           ; 2 bytes @ 0x0
   734                           
   735  0020                     spiWrite@dat:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     ___bmul@multiplicand:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     ___wmul@multiplier:	
   742                           ; 1 bytes @ 0x0
   743                           
   744                           
   745                           ; 2 bytes @ 0x0
   746  0020                     	ds	1
   747  0021                     ??___bmul:
   748  0021                     spiInit@sClockIdle:	
   749                           ; 1 bytes @ 0x1
   750                           
   751                           
   752                           ; 1 bytes @ 0x1
   753  0021                     	ds	1
   754  0022                     spiInit@sTransmitEdge:
   755  0022                     ___bmul@product:	
   756                           ; 1 bytes @ 0x2
   757                           
   758  0022                     ___wmul@multiplicand:	
   759                           ; 1 bytes @ 0x2
   760                           
   761                           
   762                           ; 2 bytes @ 0x2
   763  0022                     	ds	1
   764  0023                     ??_spiInit:
   765  0023                     spiInit@sType:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0023                     ___bmul@multiplier:	
   769                           ; 1 bytes @ 0x3
   770                           
   771                           
   772                           ; 1 bytes @ 0x3
   773  0023                     	ds	1
   774  0024                     ??_initCONFIG:
   775  0024                     ??___wmul:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0024                     ___wmul@product:	
   779                           ; 1 bytes @ 0x4
   780                           
   781                           
   782                           ; 2 bytes @ 0x4
   783  0024                     	ds	2
   784  0026                     ?___awdiv:
   785  0026                     ___awdiv@divisor:	
   786                           ; 2 bytes @ 0x6
   787                           
   788                           
   789                           ; 2 bytes @ 0x6
   790  0026                     	ds	2
   791  0028                     ___awdiv@dividend:
   792                           
   793                           ; 2 bytes @ 0x8
   794  0028                     	ds	2
   795  002A                     ??___awdiv:
   796                           
   797                           ; 1 bytes @ 0xA
   798  002A                     	ds	1
   799  002B                     ___awdiv@counter:
   800                           
   801                           ; 1 bytes @ 0xB
   802  002B                     	ds	1
   803  002C                     ___awdiv@sign:
   804                           
   805                           ; 1 bytes @ 0xC
   806  002C                     	ds	1
   807  002D                     ___awdiv@quotient:
   808                           
   809                           ; 2 bytes @ 0xD
   810  002D                     	ds	2
   811  002F                     ??_main:
   812                           
   813                           ; 1 bytes @ 0xF
   814  002F                     	ds	8
   815  0037                     _main$1341:
   816                           
   817                           ; 2 bytes @ 0x17
   818  0037                     	ds	2
   819                           
   820                           	psect	maintext
   821  0032                     __pmaintext:	
   822 ;;
   823 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   824 ;;
   825 ;; *************** function _main *****************
   826 ;; Defined at:
   827 ;;		line 62 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : B00/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         0       2       0       0       0
   843 ;;      Temps:          0       8       0       0       0
   844 ;;      Totals:         0      10       0       0       0
   845 ;;Total ram usage:       10 bytes
   846 ;; Hardware stack levels required when called: 4
   847 ;; This function calls:
   848 ;;		___awdiv
   849 ;;		___bmul
   850 ;;		___wmul
   851 ;;		_initCONFIG
   852 ;;		_initTMR0
   853 ;;		_spiRead
   854 ;;		_spiWrite
   855 ;; This function is called by:
   856 ;;		Startup code after reset
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _main
   862  0032                     _main:
   863  0032                     l1473:	
   864                           ;incstack = 0
   865                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   866                           
   867                           
   868                           ;main.c: 63:     initCONFIG();
   869  0032  120A  118A  23CD  120A  118A  	fcall	_initCONFIG
   870                           
   871                           ;main.c: 64:     initTMR0();
   872  0037  120A  118A  247C  120A  118A  	fcall	_initTMR0
   873  003C                     l1475:
   874                           
   875                           ;main.c: 66:        PORTAbits.RA0 = 0;
   876  003C  1283               	bcf	3,5	;RP0=0, select bank0
   877  003D  1303               	bcf	3,6	;RP1=0, select bank0
   878  003E  1005               	bcf	5,0	;volatile
   879  003F                     l1477:
   880                           
   881                           ;main.c: 67:        _delay((unsigned long)((1)*(8000000/4000.0)));
   882  003F  3003               	movlw	3
   883  0040  1283               	bcf	3,5	;RP0=0, select bank0
   884  0041  1303               	bcf	3,6	;RP1=0, select bank0
   885  0042  00B0               	movwf	??_main+1
   886  0043  3097               	movlw	151
   887  0044  00AF               	movwf	??_main
   888  0045                     u887:
   889  0045  0BAF               	decfsz	??_main,f
   890  0046  2845               	goto	u887
   891  0047  0BB0               	decfsz	??_main+1,f
   892  0048  2845               	goto	u887
   893  0049                     l1479:
   894                           
   895                           ;main.c: 69:        spiWrite(var);
   896  0049  1283               	bcf	3,5	;RP0=0, select bank0
   897  004A  1303               	bcf	3,6	;RP1=0, select bank0
   898  004B  0848               	movf	_var,w
   899  004C  120A  118A  2498  120A  118A  	fcall	_spiWrite
   900  0051                     l1481:
   901                           
   902                           ;main.c: 70:        if (var == 1) {
   903  0051  1283               	bcf	3,5	;RP0=0, select bank0
   904  0052  1303               	bcf	3,6	;RP1=0, select bank0
   905  0053  0348               	decf	_var,w
   906  0054  1D03               	btfss	3,2
   907  0055  2857               	goto	u661
   908  0056  2858               	goto	u660
   909  0057                     u661:
   910  0057  2867               	goto	l1487
   911  0058                     u660:
   912  0058                     l1483:
   913                           
   914                           ;main.c: 71:        var0 = spiRead();
   915  0058  120A  118A  2488  120A  118A  	fcall	_spiRead
   916  005D  1283               	bcf	3,5	;RP0=0, select bank0
   917  005E  1303               	bcf	3,6	;RP1=0, select bank0
   918  005F  00AF               	movwf	??_main
   919  0060  082F               	movf	??_main,w
   920  0061  00C0               	movwf	_var0
   921  0062                     l1485:
   922                           
   923                           ;main.c: 72:        var = 2;
   924  0062  3002               	movlw	2
   925  0063  00AF               	movwf	??_main
   926  0064  082F               	movf	??_main,w
   927  0065  00C8               	movwf	_var
   928                           
   929                           ;main.c: 73:        }
   930  0066  2879               	goto	l1493
   931  0067                     l1487:
   932  0067  3002               	movlw	2
   933  0068  0648               	xorwf	_var,w
   934  0069  1D03               	btfss	3,2
   935  006A  286C               	goto	u671
   936  006B  286D               	goto	u670
   937  006C                     u671:
   938  006C  2879               	goto	l1493
   939  006D                     u670:
   940  006D                     l1489:
   941                           
   942                           ;main.c: 75:        var1 = spiRead();
   943  006D  120A  118A  2488  120A  118A  	fcall	_spiRead
   944  0072  1283               	bcf	3,5	;RP0=0, select bank0
   945  0073  1303               	bcf	3,6	;RP1=0, select bank0
   946  0074  00AF               	movwf	??_main
   947  0075  082F               	movf	??_main,w
   948  0076  00C1               	movwf	_var1
   949  0077                     l1491:
   950                           
   951                           ;main.c: 76:        var = 1;
   952  0077  01C8               	clrf	_var
   953  0078  0AC8               	incf	_var,f
   954  0079                     l1493:
   955                           
   956                           ;main.c: 78:        _delay((unsigned long)((1)*(8000000/4000.0)));
   957  0079  3003               	movlw	3
   958  007A  1283               	bcf	3,5	;RP0=0, select bank0
   959  007B  1303               	bcf	3,6	;RP1=0, select bank0
   960  007C  00B0               	movwf	??_main+1
   961  007D  3097               	movlw	151
   962  007E  00AF               	movwf	??_main
   963  007F                     u897:
   964  007F  0BAF               	decfsz	??_main,f
   965  0080  287F               	goto	u897
   966  0081  0BB0               	decfsz	??_main+1,f
   967  0082  287F               	goto	u897
   968  0083                     l1495:
   969                           
   970                           ;main.c: 79:        PORTAbits.RA0 = 1;
   971  0083  1283               	bcf	3,5	;RP0=0, select bank0
   972  0084  1303               	bcf	3,6	;RP1=0, select bank0
   973  0085  1405               	bsf	5,0	;volatile
   974  0086                     l1497:
   975                           
   976                           ;main.c: 80:        _delay((unsigned long)((250)*(8000000/4000.0)));
   977  0086  3003               	movlw	3
   978  0087  1283               	bcf	3,5	;RP0=0, select bank0
   979  0088  1303               	bcf	3,6	;RP1=0, select bank0
   980  0089  00B1               	movwf	??_main+2
   981  008A  308A               	movlw	138
   982  008B  00B0               	movwf	??_main+1
   983  008C  3055               	movlw	85
   984  008D  00AF               	movwf	??_main
   985  008E                     u907:
   986  008E  0BAF               	decfsz	??_main,f
   987  008F  288E               	goto	u907
   988  0090  0BB0               	decfsz	??_main+1,f
   989  0091  288E               	goto	u907
   990  0092  0BB1               	decfsz	??_main+2,f
   991  0093  288E               	goto	u907
   992  0094                     l1499:
   993                           
   994                           ;main.c: 82:     if(c > 20){
   995  0094  3015               	movlw	21
   996  0095  1283               	bcf	3,5	;RP0=0, select bank0
   997  0096  1303               	bcf	3,6	;RP1=0, select bank0
   998  0097  0242               	subwf	_c,w
   999  0098  1C03               	skipc
  1000  0099  289B               	goto	u681
  1001  009A  289C               	goto	u680
  1002  009B                     u681:
  1003  009B  28A0               	goto	l1505
  1004  009C                     u680:
  1005  009C                     l1501:
  1006                           
  1007                           ;main.c: 83:          c = 0;
  1008  009C  01C2               	clrf	_c
  1009  009D                     l1503:
  1010                           
  1011                           ;main.c: 84:          TXIE = 1;
  1012  009D  1683               	bsf	3,5	;RP0=1, select bank1
  1013  009E  1303               	bcf	3,6	;RP1=0, select bank1
  1014  009F  160C               	bsf	12,4	;volatile
  1015  00A0                     l1505:
  1016                           
  1017                           ;main.c: 86:     unit = var1 / 51;
  1018  00A0  3033               	movlw	51
  1019  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1020  00A2  00A6               	movwf	___awdiv@divisor
  1021  00A3  3000               	movlw	0
  1022  00A4  00A7               	movwf	___awdiv@divisor+1
  1023  00A5  0841               	movf	_var1,w
  1024  00A6  00AF               	movwf	??_main
  1025  00A7  01B0               	clrf	??_main+1
  1026  00A8  082F               	movf	??_main,w
  1027  00A9  00A8               	movwf	___awdiv@dividend
  1028  00AA  0830               	movf	??_main+1,w
  1029  00AB  00A9               	movwf	___awdiv@dividend+1
  1030  00AC  120A  118A  2364  120A  118A  	fcall	___awdiv
  1031  00B1  1283               	bcf	3,5	;RP0=0, select bank0
  1032  00B2  1303               	bcf	3,6	;RP1=0, select bank0
  1033  00B3  0826               	movf	?___awdiv,w
  1034  00B4  00B1               	movwf	??_main+2
  1035  00B5  0831               	movf	??_main+2,w
  1036  00B6  00BF               	movwf	_unit
  1037  00B7                     l1507:
  1038                           
  1039                           ;main.c: 87:     dozen = ((var1 * 100 / 51) - (unit*100))/10;
  1040  00B7  3033               	movlw	51
  1041  00B8  00A6               	movwf	___awdiv@divisor
  1042  00B9  3000               	movlw	0
  1043  00BA  00A7               	movwf	___awdiv@divisor+1
  1044  00BB  0841               	movf	_var1,w
  1045  00BC  00AF               	movwf	??_main
  1046  00BD  01B0               	clrf	??_main+1
  1047  00BE  082F               	movf	??_main,w
  1048  00BF  00A0               	movwf	___wmul@multiplier
  1049  00C0  0830               	movf	??_main+1,w
  1050  00C1  00A1               	movwf	___wmul@multiplier+1
  1051  00C2  3064               	movlw	100
  1052  00C3  00A2               	movwf	___wmul@multiplicand
  1053  00C4  3000               	movlw	0
  1054  00C5  00A3               	movwf	___wmul@multiplicand+1
  1055  00C6  120A  118A  240B  120A  118A  	fcall	___wmul
  1056  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00CD  0821               	movf	?___wmul+1,w
  1059  00CE  00A9               	movwf	___awdiv@dividend+1
  1060  00CF  0820               	movf	?___wmul,w
  1061  00D0  00A8               	movwf	___awdiv@dividend
  1062  00D1  120A  118A  2364  120A  118A  	fcall	___awdiv
  1063  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1064  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1065  00D8  0826               	movf	?___awdiv,w
  1066  00D9  00B1               	movwf	??_main+2
  1067  00DA  0827               	movf	?___awdiv+1,w
  1068  00DB  00B2               	movwf	??_main+3
  1069  00DC  083F               	movf	_unit,w
  1070  00DD  00B3               	movwf	??_main+4
  1071  00DE  01B4               	clrf	??_main+5
  1072  00DF  0833               	movf	??_main+4,w
  1073  00E0  00A0               	movwf	___wmul@multiplier
  1074  00E1  0834               	movf	??_main+5,w
  1075  00E2  00A1               	movwf	___wmul@multiplier+1
  1076  00E3  309C               	movlw	156
  1077  00E4  00A2               	movwf	___wmul@multiplicand
  1078  00E5  30FF               	movlw	255
  1079  00E6  00A3               	movwf	___wmul@multiplicand+1
  1080  00E7  120A  118A  240B  120A  118A  	fcall	___wmul
  1081  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1082  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1083  00EE  0820               	movf	?___wmul,w
  1084  00EF  0731               	addwf	??_main+2,w
  1085  00F0  00B7               	movwf	_main$1341
  1086  00F1  0821               	movf	?___wmul+1,w
  1087  00F2  1803               	skipnc
  1088  00F3  0A21               	incf	?___wmul+1,w
  1089  00F4  0732               	addwf	??_main+3,w
  1090  00F5  00B8               	movwf	_main$1341+1
  1091  00F6                     l1509:
  1092                           
  1093                           ;main.c: 87:     dozen = ((var1 * 100 / 51) - (unit*100))/10;
  1094  00F6  300A               	movlw	10
  1095  00F7  00A6               	movwf	___awdiv@divisor
  1096  00F8  3000               	movlw	0
  1097  00F9  00A7               	movwf	___awdiv@divisor+1
  1098  00FA  0838               	movf	_main$1341+1,w
  1099  00FB  00A9               	movwf	___awdiv@dividend+1
  1100  00FC  0837               	movf	_main$1341,w
  1101  00FD  00A8               	movwf	___awdiv@dividend
  1102  00FE  120A  118A  2364  120A  118A  	fcall	___awdiv
  1103  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1104  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1105  0105  0826               	movf	?___awdiv,w
  1106  0106  00AF               	movwf	??_main
  1107  0107  082F               	movf	??_main,w
  1108  0108  00BB               	movwf	_dozen
  1109  0109                     l1511:
  1110                           
  1111                           ;main.c: 88:     dozen_1 = ((var1 * 100 / 51) - (unit*100) - (dozen*10));
  1112  0109  3033               	movlw	51
  1113  010A  00A6               	movwf	___awdiv@divisor
  1114  010B  3000               	movlw	0
  1115  010C  00A7               	movwf	___awdiv@divisor+1
  1116  010D  0841               	movf	_var1,w
  1117  010E  00AF               	movwf	??_main
  1118  010F  01B0               	clrf	??_main+1
  1119  0110  082F               	movf	??_main,w
  1120  0111  00A0               	movwf	___wmul@multiplier
  1121  0112  0830               	movf	??_main+1,w
  1122  0113  00A1               	movwf	___wmul@multiplier+1
  1123  0114  3064               	movlw	100
  1124  0115  00A2               	movwf	___wmul@multiplicand
  1125  0116  3000               	movlw	0
  1126  0117  00A3               	movwf	___wmul@multiplicand+1
  1127  0118  120A  118A  240B  120A  118A  	fcall	___wmul
  1128  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1129  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1130  011F  0821               	movf	?___wmul+1,w
  1131  0120  00A9               	movwf	___awdiv@dividend+1
  1132  0121  0820               	movf	?___wmul,w
  1133  0122  00A8               	movwf	___awdiv@dividend
  1134  0123  120A  118A  2364  120A  118A  	fcall	___awdiv
  1135  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1137  012A  0826               	movf	?___awdiv,w
  1138  012B  00B1               	movwf	??_main+2
  1139  012C  0827               	movf	?___awdiv+1,w
  1140  012D  00B2               	movwf	??_main+3
  1141  012E  309C               	movlw	156
  1142  012F  00B3               	movwf	??_main+4
  1143  0130  0833               	movf	??_main+4,w
  1144  0131  00A0               	movwf	___bmul@multiplicand
  1145  0132  083F               	movf	_unit,w
  1146  0133  120A  118A  2450  120A  118A  	fcall	___bmul
  1147  0138  1283               	bcf	3,5	;RP0=0, select bank0
  1148  0139  1303               	bcf	3,6	;RP1=0, select bank0
  1149  013A  00B4               	movwf	??_main+5
  1150  013B  30F6               	movlw	246
  1151  013C  00B5               	movwf	??_main+6
  1152  013D  0835               	movf	??_main+6,w
  1153  013E  00A0               	movwf	___bmul@multiplicand
  1154  013F  083B               	movf	_dozen,w
  1155  0140  120A  118A  2450  120A  118A  	fcall	___bmul
  1156  0145  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0146  1303               	bcf	3,6	;RP1=0, select bank0
  1158  0147  0734               	addwf	??_main+5,w
  1159  0148  0731               	addwf	??_main+2,w
  1160  0149  00B6               	movwf	??_main+7
  1161  014A  0836               	movf	??_main+7,w
  1162  014B  00BA               	movwf	_dozen_1
  1163  014C                     l1513:
  1164                           
  1165                           ;main.c: 89:     unit_1_change = var0 / 51;
  1166  014C  3033               	movlw	51
  1167  014D  00A6               	movwf	___awdiv@divisor
  1168  014E  3000               	movlw	0
  1169  014F  00A7               	movwf	___awdiv@divisor+1
  1170  0150  0840               	movf	_var0,w
  1171  0151  00AF               	movwf	??_main
  1172  0152  01B0               	clrf	??_main+1
  1173  0153  082F               	movf	??_main,w
  1174  0154  00A8               	movwf	___awdiv@dividend
  1175  0155  0830               	movf	??_main+1,w
  1176  0156  00A9               	movwf	___awdiv@dividend+1
  1177  0157  120A  118A  2364  120A  118A  	fcall	___awdiv
  1178  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1179  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1180  015E  0826               	movf	?___awdiv,w
  1181  015F  00B1               	movwf	??_main+2
  1182  0160  0831               	movf	??_main+2,w
  1183  0161  00BE               	movwf	_unit_1_change
  1184  0162                     l1515:
  1185                           
  1186                           ;main.c: 90:     k0 = (((var0 * 100) / 51) - (unit_1_change*100))/10;
  1187  0162  3033               	movlw	51
  1188  0163  00A6               	movwf	___awdiv@divisor
  1189  0164  3000               	movlw	0
  1190  0165  00A7               	movwf	___awdiv@divisor+1
  1191  0166  0840               	movf	_var0,w
  1192  0167  00AF               	movwf	??_main
  1193  0168  01B0               	clrf	??_main+1
  1194  0169  082F               	movf	??_main,w
  1195  016A  00A0               	movwf	___wmul@multiplier
  1196  016B  0830               	movf	??_main+1,w
  1197  016C  00A1               	movwf	___wmul@multiplier+1
  1198  016D  3064               	movlw	100
  1199  016E  00A2               	movwf	___wmul@multiplicand
  1200  016F  3000               	movlw	0
  1201  0170  00A3               	movwf	___wmul@multiplicand+1
  1202  0171  120A  118A  240B  120A  118A  	fcall	___wmul
  1203  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1204  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1205  0178  0821               	movf	?___wmul+1,w
  1206  0179  00A9               	movwf	___awdiv@dividend+1
  1207  017A  0820               	movf	?___wmul,w
  1208  017B  00A8               	movwf	___awdiv@dividend
  1209  017C  120A  118A  2364  120A  118A  	fcall	___awdiv
  1210  0181  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0182  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0183  0826               	movf	?___awdiv,w
  1213  0184  00B1               	movwf	??_main+2
  1214  0185  0827               	movf	?___awdiv+1,w
  1215  0186  00B2               	movwf	??_main+3
  1216  0187  083E               	movf	_unit_1_change,w
  1217  0188  00B3               	movwf	??_main+4
  1218  0189  01B4               	clrf	??_main+5
  1219  018A  0833               	movf	??_main+4,w
  1220  018B  00A0               	movwf	___wmul@multiplier
  1221  018C  0834               	movf	??_main+5,w
  1222  018D  00A1               	movwf	___wmul@multiplier+1
  1223  018E  309C               	movlw	156
  1224  018F  00A2               	movwf	___wmul@multiplicand
  1225  0190  30FF               	movlw	255
  1226  0191  00A3               	movwf	___wmul@multiplicand+1
  1227  0192  120A  118A  240B  120A  118A  	fcall	___wmul
  1228  0197  1283               	bcf	3,5	;RP0=0, select bank0
  1229  0198  1303               	bcf	3,6	;RP1=0, select bank0
  1230  0199  0820               	movf	?___wmul,w
  1231  019A  0731               	addwf	??_main+2,w
  1232  019B  00B7               	movwf	_main$1341
  1233  019C  0821               	movf	?___wmul+1,w
  1234  019D  1803               	skipnc
  1235  019E  0A21               	incf	?___wmul+1,w
  1236  019F  0732               	addwf	??_main+3,w
  1237  01A0  00B8               	movwf	_main$1341+1
  1238  01A1                     l1517:
  1239                           
  1240                           ;main.c: 90:     k0 = (((var0 * 100) / 51) - (unit_1_change*100))/10;
  1241  01A1  300A               	movlw	10
  1242  01A2  00A6               	movwf	___awdiv@divisor
  1243  01A3  3000               	movlw	0
  1244  01A4  00A7               	movwf	___awdiv@divisor+1
  1245  01A5  0838               	movf	_main$1341+1,w
  1246  01A6  00A9               	movwf	___awdiv@dividend+1
  1247  01A7  0837               	movf	_main$1341,w
  1248  01A8  00A8               	movwf	___awdiv@dividend
  1249  01A9  120A  118A  2364  120A  118A  	fcall	___awdiv
  1250  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1251  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1252  01B0  0826               	movf	?___awdiv,w
  1253  01B1  00AF               	movwf	??_main
  1254  01B2  082F               	movf	??_main,w
  1255  01B3  00BD               	movwf	_k0
  1256  01B4                     l1519:
  1257                           
  1258                           ;main.c: 91:     k1 = (((var0 * 100) / 51) - (unit_1_change*100) - (k0*10));
  1259  01B4  3033               	movlw	51
  1260  01B5  00A6               	movwf	___awdiv@divisor
  1261  01B6  3000               	movlw	0
  1262  01B7  00A7               	movwf	___awdiv@divisor+1
  1263  01B8  0840               	movf	_var0,w
  1264  01B9  00AF               	movwf	??_main
  1265  01BA  01B0               	clrf	??_main+1
  1266  01BB  082F               	movf	??_main,w
  1267  01BC  00A0               	movwf	___wmul@multiplier
  1268  01BD  0830               	movf	??_main+1,w
  1269  01BE  00A1               	movwf	___wmul@multiplier+1
  1270  01BF  3064               	movlw	100
  1271  01C0  00A2               	movwf	___wmul@multiplicand
  1272  01C1  3000               	movlw	0
  1273  01C2  00A3               	movwf	___wmul@multiplicand+1
  1274  01C3  120A  118A  240B  120A  118A  	fcall	___wmul
  1275  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1276  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1277  01CA  0821               	movf	?___wmul+1,w
  1278  01CB  00A9               	movwf	___awdiv@dividend+1
  1279  01CC  0820               	movf	?___wmul,w
  1280  01CD  00A8               	movwf	___awdiv@dividend
  1281  01CE  120A  118A  2364  120A  118A  	fcall	___awdiv
  1282  01D3  1283               	bcf	3,5	;RP0=0, select bank0
  1283  01D4  1303               	bcf	3,6	;RP1=0, select bank0
  1284  01D5  0826               	movf	?___awdiv,w
  1285  01D6  00B1               	movwf	??_main+2
  1286  01D7  0827               	movf	?___awdiv+1,w
  1287  01D8  00B2               	movwf	??_main+3
  1288  01D9  309C               	movlw	156
  1289  01DA  00B3               	movwf	??_main+4
  1290  01DB  0833               	movf	??_main+4,w
  1291  01DC  00A0               	movwf	___bmul@multiplicand
  1292  01DD  083E               	movf	_unit_1_change,w
  1293  01DE  120A  118A  2450  120A  118A  	fcall	___bmul
  1294  01E3  1283               	bcf	3,5	;RP0=0, select bank0
  1295  01E4  1303               	bcf	3,6	;RP1=0, select bank0
  1296  01E5  00B4               	movwf	??_main+5
  1297  01E6  30F6               	movlw	246
  1298  01E7  00B5               	movwf	??_main+6
  1299  01E8  0835               	movf	??_main+6,w
  1300  01E9  00A0               	movwf	___bmul@multiplicand
  1301  01EA  083D               	movf	_k0,w
  1302  01EB  120A  118A  2450  120A  118A  	fcall	___bmul
  1303  01F0  1283               	bcf	3,5	;RP0=0, select bank0
  1304  01F1  1303               	bcf	3,6	;RP1=0, select bank0
  1305  01F2  0734               	addwf	??_main+5,w
  1306  01F3  0731               	addwf	??_main+2,w
  1307  01F4  00B6               	movwf	??_main+7
  1308  01F5  0836               	movf	??_main+7,w
  1309  01F6  00BC               	movwf	_k1
  1310  01F7                     l1521:
  1311                           
  1312                           ;main.c: 92:     if (PORTDbits.RD1 == 1){
  1313  01F7  1C88               	btfss	8,1	;volatile
  1314  01F8  29FA               	goto	u691
  1315  01F9  29FB               	goto	u690
  1316  01FA                     u691:
  1317  01FA  283C               	goto	l1475
  1318  01FB                     u690:
  1319  01FB                     l1523:
  1320                           
  1321                           ;main.c: 93:         HUGO = 0;
  1322  01FB  01FB               	clrf	_HUGO
  1323                           
  1324                           ;main.c: 94:         counter = 0;
  1325  01FC  01C3               	clrf	_counter
  1326                           
  1327                           ;main.c: 95:         PORTD = 0;
  1328  01FD  0188               	clrf	8	;volatile
  1329  01FE                     l1525:
  1330                           
  1331                           ;main.c: 96:         J0 = 1;
  1332  01FE  01C7               	clrf	_J0
  1333  01FF  0AC7               	incf	_J0,f
  1334                           
  1335                           ;main.c: 97:         J_1 = 0;
  1336  0200  01C6               	clrf	_J_1
  1337                           
  1338                           ;main.c: 98:         J_2_dontpayenough = 0;
  1339  0201  01C5               	clrf	_J_2_dontpayenough
  1340  0202  283C               	goto	l1475
  1341  0203  120A  118A  280E   	ljmp	start
  1342  0206                     __end_of_main:
  1343                           
  1344                           	psect	text1
  1345  0498                     __ptext1:	
  1346 ;; *************** function _spiWrite *****************
  1347 ;; Defined at:
  1348 ;;		line 31 in file "SPI.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;  dat             1    wreg     unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  dat             1    0[BANK0 ] unsigned char 
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       1       0       0       0
  1364 ;;      Temps:          0       0       0       0       0
  1365 ;;      Totals:         0       1       0       0       0
  1366 ;;Total ram usage:        1 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 2
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_main
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           
  1377                           ;psect for function _spiWrite
  1378  0498                     _spiWrite:
  1379                           
  1380                           ;incstack = 0
  1381                           ; Regs used in _spiWrite: [wreg]
  1382                           ;spiWrite@dat stored from wreg
  1383  0498  1283               	bcf	3,5	;RP0=0, select bank0
  1384  0499  1303               	bcf	3,6	;RP1=0, select bank0
  1385  049A  00A0               	movwf	spiWrite@dat
  1386  049B                     l1327:
  1387                           
  1388                           ;SPI.c: 31: void spiWrite(char dat);SPI.c: 32: {;SPI.c: 33:     SSPBUF = dat;
  1389  049B  0820               	movf	spiWrite@dat,w
  1390  049C  0093               	movwf	19	;volatile
  1391  049D                     l71:
  1392  049D  0008               	return
  1393  049E                     __end_of_spiWrite:
  1394                           
  1395                           	psect	text2
  1396  0488                     __ptext2:	
  1397 ;; *************** function _spiRead *****************
  1398 ;; Defined at:
  1399 ;;		line 44 in file "SPI.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;                  1    wreg      unsigned char 
  1406 ;; Registers used:
  1407 ;;		wreg, status,2, status,0, pclath, cstack
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0
  1416 ;;      Totals:         0       0       0       0       0
  1417 ;;Total ram usage:        0 bytes
  1418 ;; Hardware stack levels used: 1
  1419 ;; Hardware stack levels required when called: 3
  1420 ;; This function calls:
  1421 ;;		_spiReceiveWait
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           
  1428                           ;psect for function _spiRead
  1429  0488                     _spiRead:
  1430  0488                     l1329:	
  1431                           ;incstack = 0
  1432                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1433                           
  1434                           
  1435                           ;SPI.c: 46:     spiReceiveWait();
  1436  0488  120A  118A  2491  120A  118A  	fcall	_spiReceiveWait
  1437  048D                     l1331:
  1438                           
  1439                           ;SPI.c: 47:     return(SSPBUF);
  1440  048D  1283               	bcf	3,5	;RP0=0, select bank0
  1441  048E  1303               	bcf	3,6	;RP1=0, select bank0
  1442  048F  0813               	movf	19,w	;volatile
  1443  0490                     l79:
  1444  0490  0008               	return
  1445  0491                     __end_of_spiRead:
  1446                           
  1447                           	psect	text3
  1448  0491                     __ptext3:	
  1449 ;; *************** function _spiReceiveWait *****************
  1450 ;; Defined at:
  1451 ;;		line 26 in file "SPI.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;		None
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;		None
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		None
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       0       0       0       0
  1466 ;;      Locals:         0       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0
  1468 ;;      Totals:         0       0       0       0       0
  1469 ;;Total ram usage:        0 bytes
  1470 ;; Hardware stack levels used: 1
  1471 ;; Hardware stack levels required when called: 2
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_spiRead
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           
  1480                           ;psect for function _spiReceiveWait
  1481  0491                     _spiReceiveWait:
  1482  0491                     l1325:	
  1483                           ;incstack = 0
  1484                           ; Regs used in _spiReceiveWait: []
  1485                           
  1486  0491                     l65:	
  1487                           ;SPI.c: 28:     while ( !SSPSTATbits.BF );
  1488                           
  1489  0491  1683               	bsf	3,5	;RP0=1, select bank1
  1490  0492  1303               	bcf	3,6	;RP1=0, select bank1
  1491  0493  1C14               	btfss	20,0	;volatile
  1492  0494  2C96               	goto	u471
  1493  0495  2C97               	goto	u470
  1494  0496                     u471:
  1495  0496  2C91               	goto	l65
  1496  0497                     u470:
  1497  0497                     l68:
  1498  0497  0008               	return
  1499  0498                     __end_of_spiReceiveWait:
  1500                           
  1501                           	psect	text4
  1502  047C                     __ptext4:	
  1503 ;; *************** function _initTMR0 *****************
  1504 ;; Defined at:
  1505 ;;		line 239 in file "main.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used: 1
  1525 ;; Hardware stack levels required when called: 2
  1526 ;; This function calls:
  1527 ;;		Nothing
  1528 ;; This function is called by:
  1529 ;;		_main
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _initTMR0
  1535  047C                     _initTMR0:
  1536  047C                     l1383:	
  1537                           ;incstack = 0
  1538                           ; Regs used in _initTMR0: [wreg]
  1539                           
  1540                           
  1541                           ;main.c: 240:     OPTION_REGbits.T0CS = 0;
  1542  047C  1683               	bsf	3,5	;RP0=1, select bank1
  1543  047D  1303               	bcf	3,6	;RP1=0, select bank1
  1544  047E  1281               	bcf	1,5	;volatile
  1545                           
  1546                           ;main.c: 241:     OPTION_REGbits.PSA = 0;
  1547  047F  1181               	bcf	1,3	;volatile
  1548                           
  1549                           ;main.c: 242:     OPTION_REGbits.PS2 = 1;
  1550  0480  1501               	bsf	1,2	;volatile
  1551                           
  1552                           ;main.c: 243:     OPTION_REGbits.PS1 = 1;
  1553  0481  1481               	bsf	1,1	;volatile
  1554                           
  1555                           ;main.c: 244:     OPTION_REGbits.PS0 = 1;
  1556  0482  1401               	bsf	1,0	;volatile
  1557  0483                     l1385:
  1558                           
  1559                           ;main.c: 245:     TMR0 = 217;
  1560  0483  30D9               	movlw	217
  1561  0484  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0485  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0486  0081               	movwf	1	;volatile
  1564  0487                     l252:
  1565  0487  0008               	return
  1566  0488                     __end_of_initTMR0:
  1567                           
  1568                           	psect	text5
  1569  03CD                     __ptext5:	
  1570 ;; *************** function _initCONFIG *****************
  1571 ;; Defined at:
  1572 ;;		line 206 in file "main.c"
  1573 ;; Parameters:    Size  Location     Type
  1574 ;;		None
  1575 ;; Auto vars:     Size  Location     Type
  1576 ;;		None
  1577 ;; Return value:  Size  Location     Type
  1578 ;;                  1    wreg      void 
  1579 ;; Registers used:
  1580 ;;		wreg, status,2, status,0, pclath, cstack
  1581 ;; Tracked objects:
  1582 ;;		On entry : 0/0
  1583 ;;		On exit  : 0/0
  1584 ;;		Unchanged: 0/0
  1585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1586 ;;      Params:         0       0       0       0       0
  1587 ;;      Locals:         0       0       0       0       0
  1588 ;;      Temps:          0       0       0       0       0
  1589 ;;      Totals:         0       0       0       0       0
  1590 ;;Total ram usage:        0 bytes
  1591 ;; Hardware stack levels used: 1
  1592 ;; Hardware stack levels required when called: 3
  1593 ;; This function calls:
  1594 ;;		_spiInit
  1595 ;; This function is called by:
  1596 ;;		_main
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           
  1600                           
  1601                           ;psect for function _initCONFIG
  1602  03CD                     _initCONFIG:
  1603  03CD                     l1335:	
  1604                           ;incstack = 0
  1605                           ; Regs used in _initCONFIG: [wreg+status,2+status,0+pclath+cstack]
  1606                           
  1607                           
  1608                           ;main.c: 207:     OSCCONbits.IRCF2 = 1;
  1609  03CD  1683               	bsf	3,5	;RP0=1, select bank1
  1610  03CE  1303               	bcf	3,6	;RP1=0, select bank1
  1611  03CF  170F               	bsf	15,6	;volatile
  1612                           
  1613                           ;main.c: 208:     OSCCONbits.IRCF1 = 1;
  1614  03D0  168F               	bsf	15,5	;volatile
  1615                           
  1616                           ;main.c: 209:     OSCCONbits.IRCF0 = 1;
  1617  03D1  160F               	bsf	15,4	;volatile
  1618                           
  1619                           ;main.c: 210:     OSCCONbits.SCS = 1;
  1620  03D2  140F               	bsf	15,0	;volatile
  1621  03D3                     l1337:
  1622                           
  1623                           ;main.c: 211:     ANSELH = 0;
  1624  03D3  1683               	bsf	3,5	;RP0=1, select bank3
  1625  03D4  1703               	bsf	3,6	;RP1=1, select bank3
  1626  03D5  0189               	clrf	9	;volatile
  1627                           
  1628                           ;main.c: 212:     ANSEL = 0b00000000;
  1629  03D6  0188               	clrf	8	;volatile
  1630                           
  1631                           ;main.c: 213:     TRISA = 0b00000000;
  1632  03D7  1683               	bsf	3,5	;RP0=1, select bank1
  1633  03D8  1303               	bcf	3,6	;RP1=0, select bank1
  1634  03D9  0185               	clrf	5	;volatile
  1635                           
  1636                           ;main.c: 214:     TRISB = 0b00000000;
  1637  03DA  0186               	clrf	6	;volatile
  1638  03DB                     l1339:
  1639                           
  1640                           ;main.c: 215:     TRISC = 0b10010000;
  1641  03DB  3090               	movlw	144
  1642  03DC  0087               	movwf	7	;volatile
  1643  03DD                     l1341:
  1644                           
  1645                           ;main.c: 216:     TRISD = 0;
  1646  03DD  0188               	clrf	8	;volatile
  1647  03DE                     l1343:
  1648                           
  1649                           ;main.c: 217:     TRISE = 0;
  1650  03DE  0189               	clrf	9	;volatile
  1651  03DF                     l1345:
  1652                           
  1653                           ;main.c: 218:     PORTA = 0;
  1654  03DF  1283               	bcf	3,5	;RP0=0, select bank0
  1655  03E0  1303               	bcf	3,6	;RP1=0, select bank0
  1656  03E1  0185               	clrf	5	;volatile
  1657  03E2                     l1347:
  1658                           
  1659                           ;main.c: 219:     PORTB = 0;
  1660  03E2  0186               	clrf	6	;volatile
  1661  03E3                     l1349:
  1662                           
  1663                           ;main.c: 220:     PORTC = 0;
  1664  03E3  0187               	clrf	7	;volatile
  1665  03E4                     l1351:
  1666                           
  1667                           ;main.c: 221:     PORTD = 0;
  1668  03E4  0188               	clrf	8	;volatile
  1669  03E5                     l1353:
  1670                           
  1671                           ;main.c: 222:     PORTE = 0;
  1672  03E5  0189               	clrf	9	;volatile
  1673  03E6                     l1355:
  1674                           
  1675                           ;main.c: 223:     INTCONbits.GIE = 1;
  1676  03E6  178B               	bsf	11,7	;volatile
  1677  03E7                     l1357:
  1678                           
  1679                           ;main.c: 224:     INTCONbits.T0IE = 1;
  1680  03E7  168B               	bsf	11,5	;volatile
  1681  03E8                     l1359:
  1682                           
  1683                           ;main.c: 225:     INTCONbits.T0IF = 0;
  1684  03E8  110B               	bcf	11,2	;volatile
  1685  03E9                     l1361:
  1686                           
  1687                           ;main.c: 226:     TXSTAbits.SYNC = 0;
  1688  03E9  1683               	bsf	3,5	;RP0=1, select bank1
  1689  03EA  1303               	bcf	3,6	;RP1=0, select bank1
  1690  03EB  1218               	bcf	24,4	;volatile
  1691  03EC                     l1363:
  1692                           
  1693                           ;main.c: 227:     TXSTAbits.BRGH = 1;
  1694  03EC  1518               	bsf	24,2	;volatile
  1695  03ED                     l1365:
  1696                           
  1697                           ;main.c: 228:     BAUDCTLbits.BRG16 = 1;
  1698  03ED  1683               	bsf	3,5	;RP0=1, select bank3
  1699  03EE  1703               	bsf	3,6	;RP1=1, select bank3
  1700  03EF  1587               	bsf	7,3	;volatile
  1701                           
  1702                           ;main.c: 229:     SPBRG = 207;
  1703  03F0  30CF               	movlw	207
  1704  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  1705  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  1706  03F3  0099               	movwf	25	;volatile
  1707  03F4                     l1367:
  1708                           
  1709                           ;main.c: 230:     SPBRGH = 0;
  1710  03F4  019A               	clrf	26	;volatile
  1711  03F5                     l1369:
  1712                           
  1713                           ;main.c: 231:     RCSTAbits.SPEN = 1;
  1714  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  1715  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  1716  03F7  1798               	bsf	24,7	;volatile
  1717  03F8                     l1371:
  1718                           
  1719                           ;main.c: 232:     RCSTAbits.RX9 = 0;
  1720  03F8  1318               	bcf	24,6	;volatile
  1721  03F9                     l1373:
  1722                           
  1723                           ;main.c: 233:     RCSTAbits.CREN = 1;
  1724  03F9  1618               	bsf	24,4	;volatile
  1725  03FA                     l1375:
  1726                           
  1727                           ;main.c: 234:     TXSTAbits.TXEN = 1;
  1728  03FA  1683               	bsf	3,5	;RP0=1, select bank1
  1729  03FB  1303               	bcf	3,6	;RP1=0, select bank1
  1730  03FC  1698               	bsf	24,5	;volatile
  1731  03FD                     l1377:
  1732                           
  1733                           ;main.c: 235:     TRISA0 = 0;
  1734  03FD  1005               	bcf	5,0	;volatile
  1735  03FE                     l1379:
  1736                           
  1737                           ;main.c: 236:     PORTAbits.RA0 = 1;
  1738  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  1739  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  1740  0400  1405               	bsf	5,0	;volatile
  1741  0401                     l1381:
  1742                           
  1743                           ;main.c: 237:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1744  0401  01A0               	clrf	spiInit@sDataSample
  1745  0402  01A1               	clrf	spiInit@sClockIdle
  1746  0403  01A2               	clrf	spiInit@sTransmitEdge
  1747  0404  3020               	movlw	32
  1748  0405  120A  118A  2432  120A  118A  	fcall	_spiInit
  1749  040A                     l249:
  1750  040A  0008               	return
  1751  040B                     __end_of_initCONFIG:
  1752                           
  1753                           	psect	text6
  1754  0432                     __ptext6:	
  1755 ;; *************** function _spiInit *****************
  1756 ;; Defined at:
  1757 ;;		line 9 in file "SPI.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;  sType           1    wreg     enum E1264
  1760 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1761 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1762 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1763 ;; Auto vars:     Size  Location     Type
  1764 ;;  sType           1    3[BANK0 ] enum E1264
  1765 ;; Return value:  Size  Location     Type
  1766 ;;                  1    wreg      void 
  1767 ;; Registers used:
  1768 ;;		wreg, status,2, status,0
  1769 ;; Tracked objects:
  1770 ;;		On entry : 0/0
  1771 ;;		On exit  : 0/0
  1772 ;;		Unchanged: 0/0
  1773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1774 ;;      Params:         0       3       0       0       0
  1775 ;;      Locals:         0       1       0       0       0
  1776 ;;      Temps:          0       0       0       0       0
  1777 ;;      Totals:         0       4       0       0       0
  1778 ;;Total ram usage:        4 bytes
  1779 ;; Hardware stack levels used: 1
  1780 ;; Hardware stack levels required when called: 2
  1781 ;; This function calls:
  1782 ;;		Nothing
  1783 ;; This function is called by:
  1784 ;;		_initCONFIG
  1785 ;; This function uses a non-reentrant model
  1786 ;;
  1787                           
  1788                           
  1789                           ;psect for function _spiInit
  1790  0432                     _spiInit:
  1791                           
  1792                           ;incstack = 0
  1793                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1794                           ;spiInit@sType stored from wreg
  1795  0432  1283               	bcf	3,5	;RP0=0, select bank0
  1796  0433  1303               	bcf	3,6	;RP1=0, select bank0
  1797  0434  00A3               	movwf	spiInit@sType
  1798  0435                     l1315:
  1799                           
  1800                           ;SPI.c: 9: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 10: {;SPI.c: 11:     TRISC5 = 0;
  1801  0435  1683               	bsf	3,5	;RP0=1, select bank1
  1802  0436  1303               	bcf	3,6	;RP1=0, select bank1
  1803  0437  1287               	bcf	7,5	;volatile
  1804                           
  1805                           ;SPI.c: 12:     if(sType & 0b00000100)
  1806  0438  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0439  1303               	bcf	3,6	;RP1=0, select bank0
  1808  043A  1D23               	btfss	spiInit@sType,2
  1809  043B  2C3D               	goto	u461
  1810  043C  2C3E               	goto	u460
  1811  043D                     u461:
  1812  043D  2C44               	goto	l1321
  1813  043E                     u460:
  1814  043E                     l1317:
  1815                           
  1816                           ;SPI.c: 13:     {;SPI.c: 14:         SSPSTAT = sTransmitEdge;
  1817  043E  0822               	movf	spiInit@sTransmitEdge,w
  1818  043F  1683               	bsf	3,5	;RP0=1, select bank1
  1819  0440  1303               	bcf	3,6	;RP1=0, select bank1
  1820  0441  0094               	movwf	20	;volatile
  1821  0442                     l1319:
  1822                           
  1823                           ;SPI.c: 15:         TRISC3 = 1;
  1824  0442  1587               	bsf	7,3	;volatile
  1825                           
  1826                           ;SPI.c: 16:     }
  1827  0443  2C4A               	goto	l61
  1828  0444                     l1321:
  1829                           
  1830                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sDataSample | sTransmitEdge;
  1831  0444  0820               	movf	spiInit@sDataSample,w
  1832  0445  0422               	iorwf	spiInit@sTransmitEdge,w
  1833  0446  1683               	bsf	3,5	;RP0=1, select bank1
  1834  0447  1303               	bcf	3,6	;RP1=0, select bank1
  1835  0448  0094               	movwf	20	;volatile
  1836  0449                     l1323:
  1837                           
  1838                           ;SPI.c: 20:         TRISC3 = 0;
  1839  0449  1187               	bcf	7,3	;volatile
  1840  044A                     l61:	
  1841                           ;SPI.c: 21:     }
  1842                           
  1843                           
  1844                           ;SPI.c: 23:     SSPCON = sType | sClockIdle;
  1845  044A  1283               	bcf	3,5	;RP0=0, select bank0
  1846  044B  1303               	bcf	3,6	;RP1=0, select bank0
  1847  044C  0823               	movf	spiInit@sType,w
  1848  044D  0421               	iorwf	spiInit@sClockIdle,w
  1849  044E  0094               	movwf	20	;volatile
  1850  044F                     l62:
  1851  044F  0008               	return
  1852  0450                     __end_of_spiInit:
  1853                           
  1854                           	psect	text7
  1855  040B                     __ptext7:	
  1856 ;; *************** function ___wmul *****************
  1857 ;; Defined at:
  1858 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1859 ;; Parameters:    Size  Location     Type
  1860 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1861 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1862 ;; Auto vars:     Size  Location     Type
  1863 ;;  product         2    4[BANK0 ] unsigned int 
  1864 ;; Return value:  Size  Location     Type
  1865 ;;                  2    0[BANK0 ] unsigned int 
  1866 ;; Registers used:
  1867 ;;		wreg, status,2, status,0
  1868 ;; Tracked objects:
  1869 ;;		On entry : 0/0
  1870 ;;		On exit  : 0/0
  1871 ;;		Unchanged: 0/0
  1872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1873 ;;      Params:         0       4       0       0       0
  1874 ;;      Locals:         0       2       0       0       0
  1875 ;;      Temps:          0       0       0       0       0
  1876 ;;      Totals:         0       6       0       0       0
  1877 ;;Total ram usage:        6 bytes
  1878 ;; Hardware stack levels used: 1
  1879 ;; Hardware stack levels required when called: 2
  1880 ;; This function calls:
  1881 ;;		Nothing
  1882 ;; This function is called by:
  1883 ;;		_main
  1884 ;; This function uses a non-reentrant model
  1885 ;;
  1886                           
  1887                           
  1888                           ;psect for function ___wmul
  1889  040B                     ___wmul:
  1890  040B                     l1387:	
  1891                           ;incstack = 0
  1892                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1893                           
  1894  040B  1283               	bcf	3,5	;RP0=0, select bank0
  1895  040C  1303               	bcf	3,6	;RP1=0, select bank0
  1896  040D  01A4               	clrf	___wmul@product
  1897  040E  01A5               	clrf	___wmul@product+1
  1898  040F                     l1389:
  1899  040F  1C20               	btfss	___wmul@multiplier,0
  1900  0410  2C12               	goto	u481
  1901  0411  2C13               	goto	u480
  1902  0412                     u481:
  1903  0412  2C19               	goto	l351
  1904  0413                     u480:
  1905  0413                     l1391:
  1906  0413  0822               	movf	___wmul@multiplicand,w
  1907  0414  07A4               	addwf	___wmul@product,f
  1908  0415  1803               	skipnc
  1909  0416  0AA5               	incf	___wmul@product+1,f
  1910  0417  0823               	movf	___wmul@multiplicand+1,w
  1911  0418  07A5               	addwf	___wmul@product+1,f
  1912  0419                     l351:
  1913  0419  3001               	movlw	1
  1914  041A                     u495:
  1915  041A  1003               	clrc
  1916  041B  0DA2               	rlf	___wmul@multiplicand,f
  1917  041C  0DA3               	rlf	___wmul@multiplicand+1,f
  1918  041D  3EFF               	addlw	-1
  1919  041E  1D03               	skipz
  1920  041F  2C1A               	goto	u495
  1921  0420                     l1393:
  1922  0420  3001               	movlw	1
  1923  0421                     u505:
  1924  0421  1003               	clrc
  1925  0422  0CA1               	rrf	___wmul@multiplier+1,f
  1926  0423  0CA0               	rrf	___wmul@multiplier,f
  1927  0424  3EFF               	addlw	-1
  1928  0425  1D03               	skipz
  1929  0426  2C21               	goto	u505
  1930  0427                     l1395:
  1931  0427  0820               	movf	___wmul@multiplier,w
  1932  0428  0421               	iorwf	___wmul@multiplier+1,w
  1933  0429  1D03               	btfss	3,2
  1934  042A  2C2C               	goto	u511
  1935  042B  2C2D               	goto	u510
  1936  042C                     u511:
  1937  042C  2C0F               	goto	l1389
  1938  042D                     u510:
  1939  042D                     l1397:
  1940  042D  0825               	movf	___wmul@product+1,w
  1941  042E  00A1               	movwf	?___wmul+1
  1942  042F  0824               	movf	___wmul@product,w
  1943  0430  00A0               	movwf	?___wmul
  1944  0431                     l353:
  1945  0431  0008               	return
  1946  0432                     __end_of___wmul:
  1947                           
  1948                           	psect	text8
  1949  0450                     __ptext8:	
  1950 ;; *************** function ___bmul *****************
  1951 ;; Defined at:
  1952 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  multiplier      1    wreg     unsigned char 
  1955 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1956 ;; Auto vars:     Size  Location     Type
  1957 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1958 ;;  product         1    2[BANK0 ] unsigned char 
  1959 ;; Return value:  Size  Location     Type
  1960 ;;                  1    wreg      unsigned char 
  1961 ;; Registers used:
  1962 ;;		wreg, status,2, status,0
  1963 ;; Tracked objects:
  1964 ;;		On entry : 0/0
  1965 ;;		On exit  : 0/0
  1966 ;;		Unchanged: 0/0
  1967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1968 ;;      Params:         0       1       0       0       0
  1969 ;;      Locals:         0       2       0       0       0
  1970 ;;      Temps:          0       1       0       0       0
  1971 ;;      Totals:         0       4       0       0       0
  1972 ;;Total ram usage:        4 bytes
  1973 ;; Hardware stack levels used: 1
  1974 ;; Hardware stack levels required when called: 2
  1975 ;; This function calls:
  1976 ;;		Nothing
  1977 ;; This function is called by:
  1978 ;;		_main
  1979 ;; This function uses a non-reentrant model
  1980 ;;
  1981                           
  1982                           
  1983                           ;psect for function ___bmul
  1984  0450                     ___bmul:
  1985                           
  1986                           ;incstack = 0
  1987                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1988                           ;___bmul@multiplier stored from wreg
  1989  0450  1283               	bcf	3,5	;RP0=0, select bank0
  1990  0451  1303               	bcf	3,6	;RP1=0, select bank0
  1991  0452  00A3               	movwf	___bmul@multiplier
  1992  0453                     l1401:
  1993  0453  01A2               	clrf	___bmul@product
  1994  0454                     l1403:
  1995  0454  1C23               	btfss	___bmul@multiplier,0
  1996  0455  2C57               	goto	u521
  1997  0456  2C58               	goto	u520
  1998  0457                     u521:
  1999  0457  2C5C               	goto	l1407
  2000  0458                     u520:
  2001  0458                     l1405:
  2002  0458  0820               	movf	___bmul@multiplicand,w
  2003  0459  00A1               	movwf	??___bmul
  2004  045A  0821               	movf	??___bmul,w
  2005  045B  07A2               	addwf	___bmul@product,f
  2006  045C                     l1407:
  2007  045C  1003               	clrc
  2008  045D  0DA0               	rlf	___bmul@multiplicand,f
  2009  045E                     l1409:
  2010  045E  1003               	clrc
  2011  045F  0CA3               	rrf	___bmul@multiplier,f
  2012  0460  0823               	movf	___bmul@multiplier,w
  2013  0461  1D03               	btfss	3,2
  2014  0462  2C64               	goto	u531
  2015  0463  2C65               	goto	u530
  2016  0464                     u531:
  2017  0464  2C54               	goto	l1403
  2018  0465                     u530:
  2019  0465                     l1411:
  2020  0465  0822               	movf	___bmul@product,w
  2021  0466                     l377:
  2022  0466  0008               	return
  2023  0467                     __end_of___bmul:
  2024                           
  2025                           	psect	text9
  2026  0364                     __ptext9:	
  2027 ;; *************** function ___awdiv *****************
  2028 ;; Defined at:
  2029 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2030 ;; Parameters:    Size  Location     Type
  2031 ;;  divisor         2    6[BANK0 ] int 
  2032 ;;  dividend        2    8[BANK0 ] int 
  2033 ;; Auto vars:     Size  Location     Type
  2034 ;;  quotient        2   13[BANK0 ] int 
  2035 ;;  sign            1   12[BANK0 ] unsigned char 
  2036 ;;  counter         1   11[BANK0 ] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  2    6[BANK0 ] int 
  2039 ;; Registers used:
  2040 ;;		wreg, status,2, status,0
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       4       0       0       0
  2047 ;;      Locals:         0       4       0       0       0
  2048 ;;      Temps:          0       1       0       0       0
  2049 ;;      Totals:         0       9       0       0       0
  2050 ;;Total ram usage:        9 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 2
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_main
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060                           
  2061                           ;psect for function ___awdiv
  2062  0364                     ___awdiv:
  2063  0364                     l1415:	
  2064                           ;incstack = 0
  2065                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2066                           
  2067  0364  1283               	bcf	3,5	;RP0=0, select bank0
  2068  0365  1303               	bcf	3,6	;RP1=0, select bank0
  2069  0366  01AC               	clrf	___awdiv@sign
  2070  0367                     l1417:
  2071  0367  1FA7               	btfss	___awdiv@divisor+1,7
  2072  0368  2B6A               	goto	u541
  2073  0369  2B6B               	goto	u540
  2074  036A                     u541:
  2075  036A  2B72               	goto	l1423
  2076  036B                     u540:
  2077  036B                     l1419:
  2078  036B  09A6               	comf	___awdiv@divisor,f
  2079  036C  09A7               	comf	___awdiv@divisor+1,f
  2080  036D  0AA6               	incf	___awdiv@divisor,f
  2081  036E  1903               	skipnz
  2082  036F  0AA7               	incf	___awdiv@divisor+1,f
  2083  0370                     l1421:
  2084  0370  01AC               	clrf	___awdiv@sign
  2085  0371  0AAC               	incf	___awdiv@sign,f
  2086  0372                     l1423:
  2087  0372  1FA9               	btfss	___awdiv@dividend+1,7
  2088  0373  2B75               	goto	u551
  2089  0374  2B76               	goto	u550
  2090  0375                     u551:
  2091  0375  2B7F               	goto	l1429
  2092  0376                     u550:
  2093  0376                     l1425:
  2094  0376  09A8               	comf	___awdiv@dividend,f
  2095  0377  09A9               	comf	___awdiv@dividend+1,f
  2096  0378  0AA8               	incf	___awdiv@dividend,f
  2097  0379  1903               	skipnz
  2098  037A  0AA9               	incf	___awdiv@dividend+1,f
  2099  037B                     l1427:
  2100  037B  3001               	movlw	1
  2101  037C  00AA               	movwf	??___awdiv
  2102  037D  082A               	movf	??___awdiv,w
  2103  037E  06AC               	xorwf	___awdiv@sign,f
  2104  037F                     l1429:
  2105  037F  01AD               	clrf	___awdiv@quotient
  2106  0380  01AE               	clrf	___awdiv@quotient+1
  2107  0381                     l1431:
  2108  0381  0826               	movf	___awdiv@divisor,w
  2109  0382  0427               	iorwf	___awdiv@divisor+1,w
  2110  0383  1903               	btfsc	3,2
  2111  0384  2B86               	goto	u561
  2112  0385  2B87               	goto	u560
  2113  0386                     u561:
  2114  0386  2BBE               	goto	l1451
  2115  0387                     u560:
  2116  0387                     l1433:
  2117  0387  01AB               	clrf	___awdiv@counter
  2118  0388  0AAB               	incf	___awdiv@counter,f
  2119  0389  2B95               	goto	l1439
  2120  038A                     l1435:
  2121  038A  3001               	movlw	1
  2122  038B                     u575:
  2123  038B  1003               	clrc
  2124  038C  0DA6               	rlf	___awdiv@divisor,f
  2125  038D  0DA7               	rlf	___awdiv@divisor+1,f
  2126  038E  3EFF               	addlw	-1
  2127  038F  1D03               	skipz
  2128  0390  2B8B               	goto	u575
  2129  0391                     l1437:
  2130  0391  3001               	movlw	1
  2131  0392  00AA               	movwf	??___awdiv
  2132  0393  082A               	movf	??___awdiv,w
  2133  0394  07AB               	addwf	___awdiv@counter,f
  2134  0395                     l1439:
  2135  0395  1FA7               	btfss	___awdiv@divisor+1,7
  2136  0396  2B98               	goto	u581
  2137  0397  2B99               	goto	u580
  2138  0398                     u581:
  2139  0398  2B8A               	goto	l1435
  2140  0399                     u580:
  2141  0399                     l1441:
  2142  0399  3001               	movlw	1
  2143  039A                     u595:
  2144  039A  1003               	clrc
  2145  039B  0DAD               	rlf	___awdiv@quotient,f
  2146  039C  0DAE               	rlf	___awdiv@quotient+1,f
  2147  039D  3EFF               	addlw	-1
  2148  039E  1D03               	skipz
  2149  039F  2B9A               	goto	u595
  2150  03A0  0827               	movf	___awdiv@divisor+1,w
  2151  03A1  0229               	subwf	___awdiv@dividend+1,w
  2152  03A2  1D03               	skipz
  2153  03A3  2BA6               	goto	u605
  2154  03A4  0826               	movf	___awdiv@divisor,w
  2155  03A5  0228               	subwf	___awdiv@dividend,w
  2156  03A6                     u605:
  2157  03A6  1C03               	skipc
  2158  03A7  2BA9               	goto	u601
  2159  03A8  2BAA               	goto	u600
  2160  03A9                     u601:
  2161  03A9  2BB1               	goto	l1447
  2162  03AA                     u600:
  2163  03AA                     l1443:
  2164  03AA  0826               	movf	___awdiv@divisor,w
  2165  03AB  02A8               	subwf	___awdiv@dividend,f
  2166  03AC  0827               	movf	___awdiv@divisor+1,w
  2167  03AD  1C03               	skipc
  2168  03AE  03A9               	decf	___awdiv@dividend+1,f
  2169  03AF  02A9               	subwf	___awdiv@dividend+1,f
  2170  03B0                     l1445:
  2171  03B0  142D               	bsf	___awdiv@quotient,0
  2172  03B1                     l1447:
  2173  03B1  3001               	movlw	1
  2174  03B2                     u615:
  2175  03B2  1003               	clrc
  2176  03B3  0CA7               	rrf	___awdiv@divisor+1,f
  2177  03B4  0CA6               	rrf	___awdiv@divisor,f
  2178  03B5  3EFF               	addlw	-1
  2179  03B6  1D03               	skipz
  2180  03B7  2BB2               	goto	u615
  2181  03B8                     l1449:
  2182  03B8  3001               	movlw	1
  2183  03B9  02AB               	subwf	___awdiv@counter,f
  2184  03BA  1D03               	btfss	3,2
  2185  03BB  2BBD               	goto	u621
  2186  03BC  2BBE               	goto	u620
  2187  03BD                     u621:
  2188  03BD  2B99               	goto	l1441
  2189  03BE                     u620:
  2190  03BE                     l1451:
  2191  03BE  082C               	movf	___awdiv@sign,w
  2192  03BF  1903               	btfsc	3,2
  2193  03C0  2BC2               	goto	u631
  2194  03C1  2BC3               	goto	u630
  2195  03C2                     u631:
  2196  03C2  2BC8               	goto	l1455
  2197  03C3                     u630:
  2198  03C3                     l1453:
  2199  03C3  09AD               	comf	___awdiv@quotient,f
  2200  03C4  09AE               	comf	___awdiv@quotient+1,f
  2201  03C5  0AAD               	incf	___awdiv@quotient,f
  2202  03C6  1903               	skipnz
  2203  03C7  0AAE               	incf	___awdiv@quotient+1,f
  2204  03C8                     l1455:
  2205  03C8  082E               	movf	___awdiv@quotient+1,w
  2206  03C9  00A7               	movwf	?___awdiv+1
  2207  03CA  082D               	movf	___awdiv@quotient,w
  2208  03CB  00A6               	movwf	?___awdiv
  2209  03CC                     l504:
  2210  03CC  0008               	return
  2211  03CD                     __end_of___awdiv:
  2212                           
  2213                           	psect	text10
  2214  0206                     __ptext10:	
  2215 ;; *************** function _isr *****************
  2216 ;; Defined at:
  2217 ;;		line 106 in file "main.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;		None
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2231 ;;      Params:         0       0       0       0       0
  2232 ;;      Locals:         0       0       0       0       0
  2233 ;;      Temps:          7       0       0       0       0
  2234 ;;      Totals:         7       0       0       0       0
  2235 ;;Total ram usage:        7 bytes
  2236 ;; Hardware stack levels used: 1
  2237 ;; Hardware stack levels required when called: 1
  2238 ;; This function calls:
  2239 ;;		i1___bmul
  2240 ;; This function is called by:
  2241 ;;		Interrupt level 1
  2242 ;; This function uses a non-reentrant model
  2243 ;;
  2244                           
  2245                           
  2246                           ;psect for function _isr
  2247  0206                     _isr:
  2248  0206                     i1l1527:
  2249                           
  2250                           ;main.c: 107:     if (INTCONbits.T0IF){
  2251  0206  1D0B               	btfss	11,2	;volatile
  2252  0207  2A09               	goto	u70_21
  2253  0208  2A0A               	goto	u70_20
  2254  0209                     u70_21:
  2255  0209  2A11               	goto	i1l1533
  2256  020A                     u70_20:
  2257  020A                     i1l1529:
  2258                           
  2259                           ;main.c: 108:         c++;
  2260  020A  3001               	movlw	1
  2261  020B  00F4               	movwf	??_isr
  2262  020C  0874               	movf	??_isr,w
  2263  020D  1283               	bcf	3,5	;RP0=0, select bank0
  2264  020E  1303               	bcf	3,6	;RP1=0, select bank0
  2265  020F  07C2               	addwf	_c,f
  2266  0210                     i1l1531:
  2267                           
  2268                           ;main.c: 109:         INTCONbits.T0IF = 0;
  2269  0210  110B               	bcf	11,2	;volatile
  2270  0211                     i1l1533:
  2271                           
  2272                           ;main.c: 112:     if(PIR1bits.RCIF == 1){
  2273  0211  1283               	bcf	3,5	;RP0=0, select bank0
  2274  0212  1303               	bcf	3,6	;RP1=0, select bank0
  2275  0213  1E8C               	btfss	12,5	;volatile
  2276  0214  2A16               	goto	u71_21
  2277  0215  2A17               	goto	u71_20
  2278  0216                     u71_21:
  2279  0216  2AE4               	goto	i1l1609
  2280  0217                     u71_20:
  2281  0217                     i1l1535:
  2282                           
  2283                           ;main.c: 113:         if (RCREG == 0x0D){
  2284  0217  300D               	movlw	13
  2285  0218  061A               	xorwf	26,w	;volatile
  2286  0219  1D03               	btfss	3,2
  2287  021A  2A1C               	goto	u72_21
  2288  021B  2A1D               	goto	u72_20
  2289  021C                     u72_21:
  2290  021C  2A21               	goto	i1l1539
  2291  021D                     u72_20:
  2292  021D                     i1l1537:
  2293                           
  2294                           ;main.c: 114:         PORTB = counter;
  2295  021D  0843               	movf	_counter,w
  2296  021E  0086               	movwf	6	;volatile
  2297                           
  2298                           ;main.c: 115:         PORTD =2;
  2299  021F  3002               	movlw	2
  2300  0220  0088               	movwf	8	;volatile
  2301  0221                     i1l1539:
  2302                           
  2303                           ;main.c: 117:         if (RCREG != 0x0D){
  2304  0221  300D               	movlw	13
  2305  0222  061A               	xorwf	26,w	;volatile
  2306  0223  1903               	btfsc	3,2
  2307  0224  2A26               	goto	u73_21
  2308  0225  2A27               	goto	u73_20
  2309  0226                     u73_21:
  2310  0226  2AE4               	goto	i1l1609
  2311  0227                     u73_20:
  2312  0227                     i1l1541:
  2313                           
  2314                           ;main.c: 118:         temp_read = RCREG;
  2315  0227  081A               	movf	26,w	;volatile
  2316  0228  00F4               	movwf	??_isr
  2317  0229  0874               	movf	??_isr,w
  2318  022A  00FC               	movwf	_temp_read
  2319  022B                     i1l1543:
  2320                           
  2321                           ;main.c: 119:             if(temp_read==48){
  2322  022B  3030               	movlw	48
  2323  022C  067C               	xorwf	_temp_read,w
  2324  022D  1D03               	btfss	3,2
  2325  022E  2A30               	goto	u74_21
  2326  022F  2A31               	goto	u74_20
  2327  0230                     u74_21:
  2328  0230  2A33               	goto	i1l1547
  2329  0231                     u74_20:
  2330  0231                     i1l1545:
  2331                           
  2332                           ;main.c: 120:                 HUGO = 0;
  2333  0231  01FB               	clrf	_HUGO
  2334                           
  2335                           ;main.c: 121:             }else if(temp_read==49){
  2336  0232  2A94               	goto	i1l1583
  2337  0233                     i1l1547:
  2338  0233  3031               	movlw	49
  2339  0234  067C               	xorwf	_temp_read,w
  2340  0235  1D03               	btfss	3,2
  2341  0236  2A38               	goto	u75_21
  2342  0237  2A39               	goto	u75_20
  2343  0238                     u75_21:
  2344  0238  2A3C               	goto	i1l1551
  2345  0239                     u75_20:
  2346  0239                     i1l1549:
  2347                           
  2348                           ;main.c: 122:                 HUGO = 1;
  2349  0239  01FB               	clrf	_HUGO
  2350  023A  0AFB               	incf	_HUGO,f
  2351                           
  2352                           ;main.c: 123:             }else if(temp_read==50){
  2353  023B  2A94               	goto	i1l1583
  2354  023C                     i1l1551:
  2355  023C  3032               	movlw	50
  2356  023D  067C               	xorwf	_temp_read,w
  2357  023E  1D03               	btfss	3,2
  2358  023F  2A41               	goto	u76_21
  2359  0240  2A42               	goto	u76_20
  2360  0241                     u76_21:
  2361  0241  2A47               	goto	i1l1555
  2362  0242                     u76_20:
  2363  0242                     i1l1553:
  2364                           
  2365                           ;main.c: 124:                 HUGO = 2;
  2366  0242  3002               	movlw	2
  2367  0243  00F4               	movwf	??_isr
  2368  0244  0874               	movf	??_isr,w
  2369  0245  00FB               	movwf	_HUGO
  2370                           
  2371                           ;main.c: 125:             }else if(temp_read==51){
  2372  0246  2A94               	goto	i1l1583
  2373  0247                     i1l1555:
  2374  0247  3033               	movlw	51
  2375  0248  067C               	xorwf	_temp_read,w
  2376  0249  1D03               	btfss	3,2
  2377  024A  2A4C               	goto	u77_21
  2378  024B  2A4D               	goto	u77_20
  2379  024C                     u77_21:
  2380  024C  2A52               	goto	i1l1559
  2381  024D                     u77_20:
  2382  024D                     i1l1557:
  2383                           
  2384                           ;main.c: 126:                 HUGO = 3;
  2385  024D  3003               	movlw	3
  2386  024E  00F4               	movwf	??_isr
  2387  024F  0874               	movf	??_isr,w
  2388  0250  00FB               	movwf	_HUGO
  2389                           
  2390                           ;main.c: 127:             }else if(temp_read==52){
  2391  0251  2A94               	goto	i1l1583
  2392  0252                     i1l1559:
  2393  0252  3034               	movlw	52
  2394  0253  067C               	xorwf	_temp_read,w
  2395  0254  1D03               	btfss	3,2
  2396  0255  2A57               	goto	u78_21
  2397  0256  2A58               	goto	u78_20
  2398  0257                     u78_21:
  2399  0257  2A5D               	goto	i1l1563
  2400  0258                     u78_20:
  2401  0258                     i1l1561:
  2402                           
  2403                           ;main.c: 128:                 HUGO = 4;
  2404  0258  3004               	movlw	4
  2405  0259  00F4               	movwf	??_isr
  2406  025A  0874               	movf	??_isr,w
  2407  025B  00FB               	movwf	_HUGO
  2408                           
  2409                           ;main.c: 129:             }else if(temp_read==53){
  2410  025C  2A94               	goto	i1l1583
  2411  025D                     i1l1563:
  2412  025D  3035               	movlw	53
  2413  025E  067C               	xorwf	_temp_read,w
  2414  025F  1D03               	btfss	3,2
  2415  0260  2A62               	goto	u79_21
  2416  0261  2A63               	goto	u79_20
  2417  0262                     u79_21:
  2418  0262  2A68               	goto	i1l1567
  2419  0263                     u79_20:
  2420  0263                     i1l1565:
  2421                           
  2422                           ;main.c: 130:                 HUGO = 5;
  2423  0263  3005               	movlw	5
  2424  0264  00F4               	movwf	??_isr
  2425  0265  0874               	movf	??_isr,w
  2426  0266  00FB               	movwf	_HUGO
  2427                           
  2428                           ;main.c: 131:             }else if(temp_read==54){
  2429  0267  2A94               	goto	i1l1583
  2430  0268                     i1l1567:
  2431  0268  3036               	movlw	54
  2432  0269  067C               	xorwf	_temp_read,w
  2433  026A  1D03               	btfss	3,2
  2434  026B  2A6D               	goto	u80_21
  2435  026C  2A6E               	goto	u80_20
  2436  026D                     u80_21:
  2437  026D  2A73               	goto	i1l1571
  2438  026E                     u80_20:
  2439  026E                     i1l1569:
  2440                           
  2441                           ;main.c: 132:                 HUGO = 6;
  2442  026E  3006               	movlw	6
  2443  026F  00F4               	movwf	??_isr
  2444  0270  0874               	movf	??_isr,w
  2445  0271  00FB               	movwf	_HUGO
  2446                           
  2447                           ;main.c: 133:             }else if(temp_read==55){
  2448  0272  2A94               	goto	i1l1583
  2449  0273                     i1l1571:
  2450  0273  3037               	movlw	55
  2451  0274  067C               	xorwf	_temp_read,w
  2452  0275  1D03               	btfss	3,2
  2453  0276  2A78               	goto	u81_21
  2454  0277  2A79               	goto	u81_20
  2455  0278                     u81_21:
  2456  0278  2A7E               	goto	i1l1575
  2457  0279                     u81_20:
  2458  0279                     i1l1573:
  2459                           
  2460                           ;main.c: 134:                 HUGO = 7;
  2461  0279  3007               	movlw	7
  2462  027A  00F4               	movwf	??_isr
  2463  027B  0874               	movf	??_isr,w
  2464  027C  00FB               	movwf	_HUGO
  2465                           
  2466                           ;main.c: 135:             }else if(temp_read==56){
  2467  027D  2A94               	goto	i1l1583
  2468  027E                     i1l1575:
  2469  027E  3038               	movlw	56
  2470  027F  067C               	xorwf	_temp_read,w
  2471  0280  1D03               	btfss	3,2
  2472  0281  2A83               	goto	u82_21
  2473  0282  2A84               	goto	u82_20
  2474  0283                     u82_21:
  2475  0283  2A89               	goto	i1l1579
  2476  0284                     u82_20:
  2477  0284                     i1l1577:
  2478                           
  2479                           ;main.c: 136:                 HUGO = 8;
  2480  0284  3008               	movlw	8
  2481  0285  00F4               	movwf	??_isr
  2482  0286  0874               	movf	??_isr,w
  2483  0287  00FB               	movwf	_HUGO
  2484                           
  2485                           ;main.c: 137:             }else if(temp_read==57){
  2486  0288  2A94               	goto	i1l1583
  2487  0289                     i1l1579:
  2488  0289  3039               	movlw	57
  2489  028A  067C               	xorwf	_temp_read,w
  2490  028B  1D03               	btfss	3,2
  2491  028C  2A8E               	goto	u83_21
  2492  028D  2A8F               	goto	u83_20
  2493  028E                     u83_21:
  2494  028E  2A94               	goto	i1l222
  2495  028F                     u83_20:
  2496  028F                     i1l1581:
  2497                           
  2498                           ;main.c: 138:                 HUGO = 9;
  2499  028F  3009               	movlw	9
  2500  0290  00F4               	movwf	??_isr
  2501  0291  0874               	movf	??_isr,w
  2502  0292  00FB               	movwf	_HUGO
  2503  0293  2A94               	goto	i1l1583
  2504  0294                     i1l222:
  2505  0294                     i1l1583:
  2506                           
  2507                           ;main.c: 140:         if (J0 == 1){
  2508  0294  0347               	decf	_J0,w
  2509  0295  1D03               	btfss	3,2
  2510  0296  2A98               	goto	u84_21
  2511  0297  2A99               	goto	u84_20
  2512  0298                     u84_21:
  2513  0298  2AA5               	goto	i1l1591
  2514  0299                     u84_20:
  2515  0299                     i1l1585:
  2516                           
  2517                           ;main.c: 141:             counter = HUGO;
  2518  0299  087B               	movf	_HUGO,w
  2519  029A  00F4               	movwf	??_isr
  2520  029B  0874               	movf	??_isr,w
  2521  029C  00C3               	movwf	_counter
  2522                           
  2523                           ;main.c: 142:             unidad = HUGO;
  2524  029D  087B               	movf	_HUGO,w
  2525  029E  00F4               	movwf	??_isr
  2526  029F  0874               	movf	??_isr,w
  2527  02A0  00FD               	movwf	_unidad
  2528  02A1                     i1l1587:
  2529                           
  2530                           ;main.c: 143:             J0 = 0;
  2531  02A1  01C7               	clrf	_J0
  2532  02A2                     i1l1589:
  2533                           
  2534                           ;main.c: 144:             J_1 = 1;
  2535  02A2  01C6               	clrf	_J_1
  2536  02A3  0AC6               	incf	_J_1,f
  2537                           
  2538                           ;main.c: 145:         }
  2539  02A4  2AE4               	goto	i1l1609
  2540  02A5                     i1l1591:
  2541  02A5  0346               	decf	_J_1,w
  2542  02A6  1D03               	btfss	3,2
  2543  02A7  2AA9               	goto	u85_21
  2544  02A8  2AAA               	goto	u85_20
  2545  02A9                     u85_21:
  2546  02A9  2AC2               	goto	i1l1601
  2547  02AA                     u85_20:
  2548  02AA                     i1l1593:
  2549                           
  2550                           ;main.c: 147:             counter = (unidad*10)+HUGO;
  2551  02AA  300A               	movlw	10
  2552  02AB  00F4               	movwf	??_isr
  2553  02AC  0874               	movf	??_isr,w
  2554  02AD  00F0               	movwf	i1___bmul@multiplicand
  2555  02AE  087D               	movf	_unidad,w
  2556  02AF  120A  118A  2467  120A  118A  	fcall	i1___bmul
  2557  02B4  077B               	addwf	_HUGO,w
  2558  02B5  00F5               	movwf	??_isr+1
  2559  02B6  0875               	movf	??_isr+1,w
  2560  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  2561  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  2562  02B9  00C3               	movwf	_counter
  2563  02BA                     i1l1595:
  2564                           
  2565                           ;main.c: 148:             decathlon = HUGO;
  2566  02BA  087B               	movf	_HUGO,w
  2567  02BB  00F4               	movwf	??_isr
  2568  02BC  0874               	movf	??_isr,w
  2569  02BD  00C4               	movwf	_decathlon
  2570  02BE                     i1l1597:
  2571                           
  2572                           ;main.c: 149:             J_1 = 0;
  2573  02BE  01C6               	clrf	_J_1
  2574  02BF                     i1l1599:
  2575                           
  2576                           ;main.c: 150:             J_2_dontpayenough = 1;
  2577  02BF  01C5               	clrf	_J_2_dontpayenough
  2578  02C0  0AC5               	incf	_J_2_dontpayenough,f
  2579                           
  2580                           ;main.c: 151:         }
  2581  02C1  2AE4               	goto	i1l1609
  2582  02C2                     i1l1601:
  2583  02C2  0345               	decf	_J_2_dontpayenough,w
  2584  02C3  1D03               	btfss	3,2
  2585  02C4  2AC6               	goto	u86_21
  2586  02C5  2AC7               	goto	u86_20
  2587  02C6                     u86_21:
  2588  02C6  2AE4               	goto	i1l208
  2589  02C7                     u86_20:
  2590  02C7                     i1l1603:
  2591                           
  2592                           ;main.c: 153:             counter = (unidad*100)+(decathlon*10)+HUGO;
  2593  02C7  300A               	movlw	10
  2594  02C8  00F4               	movwf	??_isr
  2595  02C9  0874               	movf	??_isr,w
  2596  02CA  00F0               	movwf	i1___bmul@multiplicand
  2597  02CB  0844               	movf	_decathlon,w
  2598  02CC  120A  118A  2467  120A  118A  	fcall	i1___bmul
  2599  02D1  00F5               	movwf	??_isr+1
  2600  02D2  3064               	movlw	100
  2601  02D3  00F6               	movwf	??_isr+2
  2602  02D4  0876               	movf	??_isr+2,w
  2603  02D5  00F0               	movwf	i1___bmul@multiplicand
  2604  02D6  087D               	movf	_unidad,w
  2605  02D7  120A  118A  2467  120A  118A  	fcall	i1___bmul
  2606  02DC  0775               	addwf	??_isr+1,w
  2607  02DD  077B               	addwf	_HUGO,w
  2608  02DE  00F7               	movwf	??_isr+3
  2609  02DF  0877               	movf	??_isr+3,w
  2610  02E0  1283               	bcf	3,5	;RP0=0, select bank0
  2611  02E1  1303               	bcf	3,6	;RP1=0, select bank0
  2612  02E2  00C3               	movwf	_counter
  2613  02E3  2ABE               	goto	i1l1597
  2614  02E4                     i1l208:	
  2615                           ;main.c: 157:         }}
  2616                           
  2617  02E4                     i1l1609:
  2618                           
  2619                           ;main.c: 159:     if (TXIF == 1){
  2620  02E4  1E0C               	btfss	12,4	;volatile
  2621  02E5  2AE7               	goto	u87_21
  2622  02E6  2AE8               	goto	u87_20
  2623  02E7                     u87_21:
  2624  02E7  2B5B               	goto	i1l246
  2625  02E8                     u87_20:
  2626  02E8  2B30               	goto	i1l1649
  2627  02E9                     i1l1613:
  2628                           
  2629                           ;main.c: 162:                 TXREG = unit + 48;
  2630  02E9  083F               	movf	_unit,w
  2631  02EA  3E30               	addlw	48
  2632  02EB  0099               	movwf	25	;volatile
  2633  02EC                     i1l1615:
  2634                           
  2635                           ;main.c: 163:                 FZERO = 1;
  2636  02EC  01B9               	clrf	_FZERO
  2637  02ED  0AB9               	incf	_FZERO,f
  2638                           
  2639                           ;main.c: 164:                 break;
  2640  02EE  2B5A               	goto	i1l236
  2641  02EF                     i1l1617:
  2642                           
  2643                           ;main.c: 166:                 TXREG = 0b101110;
  2644  02EF  302E               	movlw	46
  2645  02F0  0099               	movwf	25	;volatile
  2646                           
  2647                           ;main.c: 167:                 FZERO = 2;
  2648  02F1  3002               	movlw	2
  2649  02F2  00F4               	movwf	??_isr
  2650  02F3  0874               	movf	??_isr,w
  2651  02F4  00B9               	movwf	_FZERO
  2652                           
  2653                           ;main.c: 168:                 break;
  2654  02F5  2B5A               	goto	i1l236
  2655  02F6                     i1l1619:
  2656                           
  2657                           ;main.c: 170:                 TXREG = dozen + 48;
  2658  02F6  083B               	movf	_dozen,w
  2659  02F7  3E30               	addlw	48
  2660  02F8  0099               	movwf	25	;volatile
  2661  02F9                     i1l1621:
  2662                           
  2663                           ;main.c: 171:                 FZERO = 3;
  2664  02F9  3003               	movlw	3
  2665  02FA  00F4               	movwf	??_isr
  2666  02FB  0874               	movf	??_isr,w
  2667  02FC  00B9               	movwf	_FZERO
  2668                           
  2669                           ;main.c: 172:                 break;
  2670  02FD  2B5A               	goto	i1l236
  2671  02FE                     i1l1623:
  2672                           
  2673                           ;main.c: 174:                 TXREG = dozen_1 + 48;
  2674  02FE  083A               	movf	_dozen_1,w
  2675  02FF  3E30               	addlw	48
  2676  0300  0099               	movwf	25	;volatile
  2677  0301                     i1l1625:
  2678                           
  2679                           ;main.c: 175:                 FZERO = 4;
  2680  0301  3004               	movlw	4
  2681  0302  00F4               	movwf	??_isr
  2682  0303  0874               	movf	??_isr,w
  2683  0304  00B9               	movwf	_FZERO
  2684                           
  2685                           ;main.c: 176:                 break;
  2686  0305  2B5A               	goto	i1l236
  2687  0306                     i1l1627:
  2688                           
  2689                           ;main.c: 178:                 TXREG = 0b101101;
  2690  0306  302D               	movlw	45
  2691  0307  0099               	movwf	25	;volatile
  2692                           
  2693                           ;main.c: 179:                 FZERO = 5;
  2694  0308  3005               	movlw	5
  2695  0309  00F4               	movwf	??_isr
  2696  030A  0874               	movf	??_isr,w
  2697  030B  00B9               	movwf	_FZERO
  2698                           
  2699                           ;main.c: 180:                 break;
  2700  030C  2B5A               	goto	i1l236
  2701  030D                     i1l1629:
  2702                           
  2703                           ;main.c: 182:                 TXREG = unit_1_change + 48;
  2704  030D  083E               	movf	_unit_1_change,w
  2705  030E  3E30               	addlw	48
  2706  030F  0099               	movwf	25	;volatile
  2707  0310                     i1l1631:
  2708                           
  2709                           ;main.c: 183:                 FZERO = 6;
  2710  0310  3006               	movlw	6
  2711  0311  00F4               	movwf	??_isr
  2712  0312  0874               	movf	??_isr,w
  2713  0313  00B9               	movwf	_FZERO
  2714                           
  2715                           ;main.c: 184:                 break;
  2716  0314  2B5A               	goto	i1l236
  2717  0315                     i1l1633:
  2718                           
  2719                           ;main.c: 186:                 TXREG = 0b101110;
  2720  0315  302E               	movlw	46
  2721  0316  0099               	movwf	25	;volatile
  2722                           
  2723                           ;main.c: 187:                 FZERO = 7;
  2724  0317  3007               	movlw	7
  2725  0318  00F4               	movwf	??_isr
  2726  0319  0874               	movf	??_isr,w
  2727  031A  00B9               	movwf	_FZERO
  2728                           
  2729                           ;main.c: 188:                 break;
  2730  031B  2B5A               	goto	i1l236
  2731  031C                     i1l1635:
  2732                           
  2733                           ;main.c: 190:                 TXREG = k0 + 48;
  2734  031C  083D               	movf	_k0,w
  2735  031D  3E30               	addlw	48
  2736  031E  0099               	movwf	25	;volatile
  2737  031F                     i1l1637:
  2738                           
  2739                           ;main.c: 191:                 FZERO = 8;
  2740  031F  3008               	movlw	8
  2741  0320  00F4               	movwf	??_isr
  2742  0321  0874               	movf	??_isr,w
  2743  0322  00B9               	movwf	_FZERO
  2744                           
  2745                           ;main.c: 192:                 break;
  2746  0323  2B5A               	goto	i1l236
  2747  0324                     i1l1639:
  2748                           
  2749                           ;main.c: 194:                 TXREG = k1 + 48;
  2750  0324  083C               	movf	_k1,w
  2751  0325  3E30               	addlw	48
  2752  0326  0099               	movwf	25	;volatile
  2753  0327                     i1l1641:
  2754                           
  2755                           ;main.c: 195:                 FZERO = 9;
  2756  0327  3009               	movlw	9
  2757  0328  00F4               	movwf	??_isr
  2758  0329  0874               	movf	??_isr,w
  2759  032A  00B9               	movwf	_FZERO
  2760                           
  2761                           ;main.c: 196:                 break;
  2762  032B  2B5A               	goto	i1l236
  2763  032C                     i1l1643:
  2764                           
  2765                           ;main.c: 198:                 TXREG = 0b1101;
  2766  032C  300D               	movlw	13
  2767  032D  0099               	movwf	25	;volatile
  2768  032E                     i1l1645:
  2769                           
  2770                           ;main.c: 199:                 FZERO = 0;
  2771  032E  01B9               	clrf	_FZERO
  2772                           
  2773                           ;main.c: 200:                 break;
  2774  032F  2B5A               	goto	i1l236
  2775  0330                     i1l1649:
  2776  0330  0839               	movf	_FZERO,w
  2777  0331  00F4               	movwf	??_isr
  2778  0332  01F5               	clrf	??_isr+1
  2779  0333  1BF4               	btfsc	??_isr,7
  2780  0334  03F5               	decf	??_isr+1,f
  2781                           
  2782                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2783                           ; Switch size 1, requested type "simple"
  2784                           ; Number of cases is 1, Range of values is 0 to 0
  2785                           ; switch strategies available:
  2786                           ; Name         Instructions Cycles
  2787                           ; simple_byte            4     3 (average)
  2788                           ; direct_byte           11     8 (fixed)
  2789                           ; jumptable            260     6 (fixed)
  2790                           ;	Chosen strategy is simple_byte
  2791  0335  0875               	movf	??_isr+1,w
  2792  0336  3A00               	xorlw	0	; case 0
  2793  0337  1903               	skipnz
  2794  0338  2B3A               	goto	i1l1675
  2795  0339  2B5A               	goto	i1l236
  2796  033A                     i1l1675:
  2797                           
  2798                           ; Switch size 1, requested type "simple"
  2799                           ; Number of cases is 10, Range of values is 0 to 9
  2800                           ; switch strategies available:
  2801                           ; Name         Instructions Cycles
  2802                           ; simple_byte           31    16 (average)
  2803                           ; direct_byte           38     8 (fixed)
  2804                           ; jumptable            260     6 (fixed)
  2805                           ;	Chosen strategy is simple_byte
  2806  033A  0874               	movf	??_isr,w
  2807  033B  3A00               	xorlw	0	; case 0
  2808  033C  1903               	skipnz
  2809  033D  2AE9               	goto	i1l1613
  2810  033E  3A01               	xorlw	1	; case 1
  2811  033F  1903               	skipnz
  2812  0340  2AEF               	goto	i1l1617
  2813  0341  3A03               	xorlw	3	; case 2
  2814  0342  1903               	skipnz
  2815  0343  2AF6               	goto	i1l1619
  2816  0344  3A01               	xorlw	1	; case 3
  2817  0345  1903               	skipnz
  2818  0346  2AFE               	goto	i1l1623
  2819  0347  3A07               	xorlw	7	; case 4
  2820  0348  1903               	skipnz
  2821  0349  2B06               	goto	i1l1627
  2822  034A  3A01               	xorlw	1	; case 5
  2823  034B  1903               	skipnz
  2824  034C  2B0D               	goto	i1l1629
  2825  034D  3A03               	xorlw	3	; case 6
  2826  034E  1903               	skipnz
  2827  034F  2B15               	goto	i1l1633
  2828  0350  3A01               	xorlw	1	; case 7
  2829  0351  1903               	skipnz
  2830  0352  2B1C               	goto	i1l1635
  2831  0353  3A0F               	xorlw	15	; case 8
  2832  0354  1903               	skipnz
  2833  0355  2B24               	goto	i1l1639
  2834  0356  3A01               	xorlw	1	; case 9
  2835  0357  1903               	skipnz
  2836  0358  2B2C               	goto	i1l1643
  2837  0359  2B5A               	goto	i1l236
  2838  035A                     i1l236:
  2839                           
  2840                           ;main.c: 202:     TXIF = 0;
  2841  035A  120C               	bcf	12,4	;volatile
  2842  035B                     i1l246:
  2843  035B  087A               	movf	??_isr+6,w
  2844  035C  008A               	movwf	10
  2845  035D  0879               	movf	??_isr+5,w
  2846  035E  0084               	movwf	4
  2847  035F  0E78               	swapf	??_isr+4,w
  2848  0360  0083               	movwf	3
  2849  0361  0EFE               	swapf	btemp,f
  2850  0362  0E7E               	swapf	btemp,w
  2851  0363  0009               	retfie
  2852  0364                     __end_of_isr:
  2853                           
  2854                           	psect	intentry
  2855  0004                     __pintentry:	
  2856                           ;incstack = 0
  2857                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2858                           
  2859  0004                     interrupt_function:
  2860  007E                     saved_w	set	btemp
  2861  0004  00FE               	movwf	btemp
  2862  0005  0E03               	swapf	3,w
  2863  0006  00F8               	movwf	??_isr+4
  2864  0007  0804               	movf	4,w
  2865  0008  00F9               	movwf	??_isr+5
  2866  0009  080A               	movf	10,w
  2867  000A  00FA               	movwf	??_isr+6
  2868  000B  120A  118A  2A06   	ljmp	_isr
  2869                           
  2870                           	psect	text11
  2871  0467                     __ptext11:	
  2872 ;; *************** function i1___bmul *****************
  2873 ;; Defined at:
  2874 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2875 ;; Parameters:    Size  Location     Type
  2876 ;;  multiplier      1    wreg     unsigned char 
  2877 ;;  multiplicand    1    0[COMMON] unsigned char 
  2878 ;; Auto vars:     Size  Location     Type
  2879 ;;  multiplier      1    3[COMMON] unsigned char 
  2880 ;;  product         1    2[COMMON] unsigned char 
  2881 ;; Return value:  Size  Location     Type
  2882 ;;                  1    wreg      unsigned char 
  2883 ;; Registers used:
  2884 ;;		wreg, status,2, status,0
  2885 ;; Tracked objects:
  2886 ;;		On entry : 0/0
  2887 ;;		On exit  : 0/0
  2888 ;;		Unchanged: 0/0
  2889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2890 ;;      Params:         1       0       0       0       0
  2891 ;;      Locals:         2       0       0       0       0
  2892 ;;      Temps:          1       0       0       0       0
  2893 ;;      Totals:         4       0       0       0       0
  2894 ;;Total ram usage:        4 bytes
  2895 ;; Hardware stack levels used: 1
  2896 ;; This function calls:
  2897 ;;		Nothing
  2898 ;; This function is called by:
  2899 ;;		_isr
  2900 ;; This function uses a non-reentrant model
  2901 ;;
  2902                           
  2903                           
  2904                           ;psect for function i1___bmul
  2905  0467                     i1___bmul:
  2906                           
  2907                           ;incstack = 0
  2908                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  2909                           ;i1___bmul@multiplier stored from wreg
  2910  0467  00F3               	movwf	i1___bmul@multiplier
  2911  0468                     i1l1459:
  2912  0468  01F2               	clrf	i1___bmul@product
  2913  0469                     i1l1461:
  2914  0469  1C73               	btfss	i1___bmul@multiplier,0
  2915  046A  2C6C               	goto	u64_21
  2916  046B  2C6D               	goto	u64_20
  2917  046C                     u64_21:
  2918  046C  2C71               	goto	i1l1465
  2919  046D                     u64_20:
  2920  046D                     i1l1463:
  2921  046D  0870               	movf	i1___bmul@multiplicand,w
  2922  046E  00F1               	movwf	??i1___bmul
  2923  046F  0871               	movf	??i1___bmul,w
  2924  0470  07F2               	addwf	i1___bmul@product,f
  2925  0471                     i1l1465:
  2926  0471  1003               	clrc
  2927  0472  0DF0               	rlf	i1___bmul@multiplicand,f
  2928  0473                     i1l1467:
  2929  0473  1003               	clrc
  2930  0474  0CF3               	rrf	i1___bmul@multiplier,f
  2931  0475  0873               	movf	i1___bmul@multiplier,w
  2932  0476  1D03               	btfss	3,2
  2933  0477  2C79               	goto	u65_21
  2934  0478  2C7A               	goto	u65_20
  2935  0479                     u65_21:
  2936  0479  2C69               	goto	i1l1461
  2937  047A                     u65_20:
  2938  047A                     i1l1469:
  2939  047A  0872               	movf	i1___bmul@product,w
  2940  047B                     i1l377:
  2941  047B  0008               	return
  2942  047C                     __end_ofi1___bmul:
  2943  007E                     btemp	set	126	;btemp
  2944  007E                     wtemp0	set	126
  2945                           
  2946                           	psect	config
  2947                           
  2948                           ;Config register CONFIG1 @ 0x2007
  2949                           ;	Oscillator Selection bits
  2950                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2951                           ;	Watchdog Timer Enable bit
  2952                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2953                           ;	Power-up Timer Enable bit
  2954                           ;	PWRTE = OFF, PWRT disabled
  2955                           ;	RE3/MCLR pin function select bit
  2956                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2957                           ;	Code Protection bit
  2958                           ;	CP = OFF, Program memory code protection is disabled
  2959                           ;	Data Code Protection bit
  2960                           ;	CPD = OFF, Data memory code protection is disabled
  2961                           ;	Brown Out Reset Selection bits
  2962                           ;	BOREN = OFF, BOR disabled
  2963                           ;	Internal External Switchover bit
  2964                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2965                           ;	Fail-Safe Clock Monitor Enabled bit
  2966                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2967                           ;	Low Voltage Programming Enable bit
  2968                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2969                           ;	In-Circuit Debugger Mode bit
  2970                           ;	DEBUG = 0x1, unprogrammed default
  2971  2007                     	org	8199
  2972  2007  20D4               	dw	8404
  2973                           
  2974                           ;Config register CONFIG2 @ 0x2008
  2975                           ;	Brown-out Reset Selection bit
  2976                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2977                           ;	Flash Program Memory Self Write Enable bits
  2978                           ;	WRT = OFF, Write protection off
  2979  2008                     	org	8200
  2980  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     25      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1___bmul

Critical Paths under _main in BANK0

    _main->___awdiv
    _initCONFIG->_spiInit
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    3494
                                             15 BANK0     10    10      0
                            ___awdiv
                             ___bmul
                             ___wmul
                         _initCONFIG
                           _initTMR0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCONFIG                                           0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1004
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     546
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1516
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  7     7      0     170
                                              4 COMMON     7     7      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (4) i1___bmul                                             4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _initCONFIG
     _spiInit
   _initTMR0
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)
   i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 04 11:50:20 2021

                      _c 0042           ___bmul@product 0022              _SSPSTATbits 0094  
                     _J0 0047                       l61 044A                       l62 044F  
                     l71 049D                       l65 0491                       l68 0497  
                     l79 0490                       _k0 003D                       _k1 003C  
           ___awdiv@sign 002C      ___wmul@multiplicand 0022                      l252 0487  
                    l351 0419                      l504 03CC                      l353 0431  
                    l249 040A                      l377 0466                      _RE0 0048  
                    _RE1 0049                      u510 042D                      u511 042C  
                    _J_1 0046                      u600 03AA                      u520 0458  
                    u601 03A9                      u521 0457                      u505 0421  
                    u530 0465                      u531 0464                      u620 03BE  
                    u540 036B                      u460 043E                      u621 03BD  
                    u605 03A6                      u541 036A                      u461 043D  
                    u630 03C3                      u550 0376                      u470 0497  
                    u631 03C2                      u615 03B2                      u551 0375  
                    u471 0496                      u560 0387                      u480 0413  
                    u561 0386                      u481 0412                      u580 0399  
                    u660 0058                      u581 0398                      u661 0057  
                    u670 006D                      u575 038B                      u495 041A  
                    u671 006C                      u680 009C                      u681 009B  
                    u690 01FB                      u595 039A                      u691 01FA  
                    u907 008E                      u887 0045                      u897 007F  
                    _isr 0206                      _var 0048                      fsr0 0004  
                   l1401 0453                     l1321 0444                     l1411 0465  
                   l1403 0454                     l1323 0449                     l1315 0435  
                   l1331 048D                     l1421 0370                     l1405 0458  
                   l1317 043E                     l1341 03DD                     l1325 0491  
                   l1501 009C                     l1431 0381                     l1423 0372  
                   l1415 0364                     l1407 045C                     l1319 0442  
                   l1351 03E4                     l1343 03DE                     l1335 03CD  
                   l1327 049B                     l1511 0109                     l1503 009D  
                   l1441 0399                     l1433 0387                     l1425 0376  
                   l1417 0367                     l1409 045E                     l1361 03E9  
                   l1353 03E5                     l1345 03DF                     l1337 03D3  
                   l1329 0488                     l1521 01F7                     l1513 014C  
                   l1505 00A0                     l1443 03AA                     l1435 038A  
                   l1451 03BE                     l1427 037B                     l1419 036B  
                   l1371 03F8                     l1363 03EC                     l1355 03E6  
                   l1347 03E2                     l1339 03DB                     l1523 01FB  
                   l1515 0162                     l1507 00B7                     l1453 03C3  
                   l1445 03B0                     l1437 0391                     l1429 037F  
                   l1381 0401                     l1373 03F9                     l1365 03ED  
                   l1357 03E7                     l1349 03E3                     l1525 01FE  
                   l1517 01A1                     l1509 00F6                     l1455 03C8  
                   l1447 03B1                     l1439 0395                     l1391 0413  
                   l1375 03FA                     l1367 03F4                     l1359 03E8  
                   l1383 047C                     l1519 01B4                     l1449 03B8  
                   l1393 0420                     l1377 03FD                     l1369 03F5  
                   l1385 0483                     l1481 0051                     l1473 0032  
                   l1395 0427                     l1387 040B                     l1379 03FE  
                   l1491 0077                     l1483 0058                     l1475 003C  
                   l1397 042D                     l1389 040F                     l1493 0079  
                   l1485 0062                     l1477 003F                     l1495 0083  
                   l1487 0067                     l1479 0049                     l1497 0086  
                   l1489 006D                     l1499 0094                     ?_isr 0070  
                   _HUGO 007B                     _TMR0 0001                     _TXIE 0464  
                   _TXIF 0064                     _main 0032                     _var0 0040  
                   _var1 0041                     _unit 003F                     btemp 007E  
                   start 000E        ___bmul@multiplier 0023                    ??_isr 0074  
                  ?_main 0070          __end_of___awdiv 03CD                    _ANSEL 0188  
        ___awdiv@divisor 0026                    i1l222 0294                    i1l208 02E4  
                  i1l236 035A                    i1l246 035B                    i1l377 047B  
                  _FZERO 0039          ___awdiv@counter 002B                    _RCREG 001A  
                  _SPBRG 0099                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u70_20 020A                    u70_21 0209                    u71_20 0217  
                  u71_21 0216                    u64_20 046D                    u80_20 026E  
                  u72_20 021D                    u64_21 046C                    u80_21 026D  
                  u72_21 021C                    u65_20 047A                    u81_20 0279  
                  u73_20 0227                    u65_21 0479                    u81_21 0278  
                  u73_21 0226                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  u82_20 0284                    u74_20 0231                    u82_21 0283  
                  u74_21 0230                    u83_20 028F                    u75_20 0239  
                  u83_21 028E                    u75_21 0238                    u84_20 0299  
                  u76_20 0242                    u84_21 0298                    u76_21 0241  
                  u85_20 02AA                    u77_20 024D                    u85_21 02A9  
                  u77_21 024C                    u86_20 02C7                    u78_20 0258  
                  u86_21 02C6                    u78_21 0257                    u87_20 02E8  
                  u79_20 0263                    u87_21 02E7                    u79_21 0262  
                  _TXREG 0019                    _dozen 003B         __end_ofi1___bmul 047C  
                  pclath 000A          __end_of_spiInit 0450          __end_of_spiRead 0491  
                  status 0003                    wtemp0 007E          __initialization 0011  
           __end_of_main 0206                   ??_main 002F        _J_2_dontpayenough 0045  
       ___awdiv@dividend 0028                   _ANSELH 0189                   i1l1601 02C2  
                 i1l1603 02C7                   i1l1531 0210                   i1l1461 0469  
                 i1l1621 02F9                   i1l1613 02E9                   i1l1541 0227  
                 i1l1533 0211                   i1l1463 046D                   i1l1631 0310  
                 i1l1623 02FE                   i1l1615 02EC                   i1l1551 023C  
                 i1l1543 022B                   i1l1535 0217                   i1l1527 0206  
                 i1l1465 0471                   i1l1641 0327                   i1l1633 0315  
                 i1l1625 0301                   i1l1617 02EF                   i1l1561 0258  
                 i1l1553 0242                   i1l1545 0231                   i1l1537 021D  
                 i1l1609 02E4                   i1l1529 020A                   i1l1467 0473  
                 i1l1459 0468                   i1l1643 032C                   i1l1635 031C  
                 i1l1627 0306                   i1l1619 02F6                   i1l1571 0273  
                 i1l1563 025D                   i1l1555 0247                   i1l1547 0233  
                 i1l1539 0221                   i1l1469 047A                   i1l1645 032E  
                 i1l1637 031F                   i1l1629 030D                   i1l1581 028F  
                 i1l1573 0279                   i1l1565 0263                   i1l1557 024D  
                 i1l1549 0239                   i1l1639 0324                   i1l1591 02A5  
                 i1l1575 027E                   i1l1567 0268                   i1l1559 0252  
                 i1l1583 0294                   i1l1649 0330                   i1l1593 02AA  
                 i1l1585 0299                   i1l1577 0284                   i1l1569 026E  
                 i1l1675 033A                   i1l1595 02BA                   i1l1587 02A1  
                 i1l1579 0289                   i1l1597 02BE                   i1l1589 02A2  
                 i1l1599 02BF                   _SPBRGH 009A                   _TRISA0 0428  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   ___bmul 0450                   ___wmul 040B  
              ??___awdiv 002A         __end_of_initTMR0 0488         ___awdiv@quotient 002D  
                 _unidad 007D                   saved_w 007E         __end_of_spiWrite 049E  
              ??_spiInit 0023                ??_spiRead 0020  __end_of__initialization 002E  
    ___bmul@multiplicand 0020           __pcstackCOMMON 0070             __pidataBANK0 049E  
              ?i1___bmul 0070           _OPTION_REGbits 0081         i1___bmul@product 0072  
             __pbssBANK0 0039               __pmaintext 0032                  ?___bmul 0020  
                ?___wmul 0020               __pintentry 0004  __size_of_spiReceiveWait 0007  
             ??i1___bmul 0071                  _SSPSTAT 0094                ?_initTMR0 0070  
             _initCONFIG 03CD                ?_spiWrite 0070          __size_of___bmul 0017  
                ___awdiv 0364          __size_of___wmul 0027                  __ptext1 0498  
                __ptext2 0488                  __ptext3 0491                  __ptext4 047C  
                __ptext5 03CD                  __ptext6 0432                  __ptext7 040B  
                __ptext8 0450                  __ptext9 0364                  _dozen_1 003A  
                _counter 0043             __size_of_isr 015E      i1___bmul@multiplier 0073  
                _spiInit 0432                  _spiRead 0488     end_of_initialization 002E  
             ??_initTMR0 0020                _RCSTAbits 0018               ??_spiWrite 0020  
              _PORTAbits 0005                _PORTDbits 0008              spiWrite@dat 0020  
            ?_initCONFIG 0070                _TXSTAbits 0098           _spiReceiveWait 0491  
         __end_of___bmul 0467           __end_of___wmul 0432              _BAUDCTLbits 0187  
      __size_ofi1___bmul 0015      start_initialization 0011              __end_of_isr 0364  
 __end_of_spiReceiveWait 0498                 ??___bmul 0021                 ??___wmul 0024  
            __pdataBANK0 0047      __size_of_initCONFIG 003E              __pbssCOMMON 007B  
              ___latbits 0002            __pcstackBANK0 0020                _decathlon 0044  
      __size_of_initTMR0 000C                _main$1341 0037          ?_spiReceiveWait 0070  
               ?___awdiv 0026        __size_of_spiWrite 0006                 ?_spiInit 0020  
               ?_spiRead 0070     spiInit@sTransmitEdge 0022        interrupt_function 0004  
         ___wmul@product 0024    i1___bmul@multiplicand 0070       spiInit@sDataSample 0020  
               _PIR1bits 000C                _temp_read 007C                 i1___bmul 0467  
             _ADCON0bits 001F               _ADCON1bits 009F        ___wmul@multiplier 0020  
           ??_initCONFIG 0024         __size_of___awdiv 0069       __end_of_initCONFIG 040B  
               __ptext10 0206                 __ptext11 0467         __size_of_spiInit 001E  
       __size_of_spiRead 0009                 _initTMR0 047C            __size_of_main 01D4  
               _spiWrite 0498             spiInit@sType 0023        spiInit@sClockIdle 0021  
             _INTCONbits 000B                 intlevel1 0000         ??_spiReceiveWait 0020  
             _OSCCONbits 008F            _unit_1_change 003E  
