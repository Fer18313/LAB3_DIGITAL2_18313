

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 04 11:58:24 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    25                           	dabs	1,0x7E,2
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC16F887 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     	;# 
    62  0001                     	;# 
    63  0002                     	;# 
    64  0003                     	;# 
    65  0004                     	;# 
    66  0005                     	;# 
    67  0006                     	;# 
    68  0007                     	;# 
    69  0008                     	;# 
    70  0009                     	;# 
    71  000A                     	;# 
    72  000B                     	;# 
    73  000C                     	;# 
    74  000D                     	;# 
    75  000E                     	;# 
    76  000E                     	;# 
    77  000F                     	;# 
    78  0010                     	;# 
    79  0011                     	;# 
    80  0012                     	;# 
    81  0013                     	;# 
    82  0014                     	;# 
    83  0015                     	;# 
    84  0015                     	;# 
    85  0016                     	;# 
    86  0017                     	;# 
    87  0018                     	;# 
    88  0019                     	;# 
    89  001A                     	;# 
    90  001B                     	;# 
    91  001B                     	;# 
    92  001C                     	;# 
    93  001D                     	;# 
    94  001E                     	;# 
    95  001F                     	;# 
    96  0081                     	;# 
    97  0085                     	;# 
    98  0086                     	;# 
    99  0087                     	;# 
   100  0088                     	;# 
   101  0089                     	;# 
   102  008C                     	;# 
   103  008D                     	;# 
   104  008E                     	;# 
   105  008F                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0097                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009A                     	;# 
   119  009B                     	;# 
   120  009C                     	;# 
   121  009D                     	;# 
   122  009E                     	;# 
   123  009F                     	;# 
   124  0105                     	;# 
   125  0107                     	;# 
   126  0108                     	;# 
   127  0109                     	;# 
   128  010C                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  0185                     	;# 
   134  0187                     	;# 
   135  0188                     	;# 
   136  0189                     	;# 
   137  018C                     	;# 
   138  018D                     	;# 
   139  0000                     	;# 
   140  0001                     	;# 
   141  0002                     	;# 
   142  0003                     	;# 
   143  0004                     	;# 
   144  0005                     	;# 
   145  0006                     	;# 
   146  0007                     	;# 
   147  0008                     	;# 
   148  0009                     	;# 
   149  000A                     	;# 
   150  000B                     	;# 
   151  000C                     	;# 
   152  000D                     	;# 
   153  000E                     	;# 
   154  000E                     	;# 
   155  000F                     	;# 
   156  0010                     	;# 
   157  0011                     	;# 
   158  0012                     	;# 
   159  0013                     	;# 
   160  0014                     	;# 
   161  0015                     	;# 
   162  0015                     	;# 
   163  0016                     	;# 
   164  0017                     	;# 
   165  0018                     	;# 
   166  0019                     	;# 
   167  001A                     	;# 
   168  001B                     	;# 
   169  001B                     	;# 
   170  001C                     	;# 
   171  001D                     	;# 
   172  001E                     	;# 
   173  001F                     	;# 
   174  0081                     	;# 
   175  0085                     	;# 
   176  0086                     	;# 
   177  0087                     	;# 
   178  0088                     	;# 
   179  0089                     	;# 
   180  008C                     	;# 
   181  008D                     	;# 
   182  008E                     	;# 
   183  008F                     	;# 
   184  0090                     	;# 
   185  0091                     	;# 
   186  0092                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0093                     	;# 
   190  0094                     	;# 
   191  0095                     	;# 
   192  0096                     	;# 
   193  0097                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009E                     	;# 
   201  009F                     	;# 
   202  0105                     	;# 
   203  0107                     	;# 
   204  0108                     	;# 
   205  0109                     	;# 
   206  010C                     	;# 
   207  010C                     	;# 
   208  010D                     	;# 
   209  010E                     	;# 
   210  010F                     	;# 
   211  0185                     	;# 
   212  0187                     	;# 
   213  0188                     	;# 
   214  0189                     	;# 
   215  018C                     	;# 
   216  018D                     	;# 
   217  0000                     	;# 
   218  0001                     	;# 
   219  0002                     	;# 
   220  0003                     	;# 
   221  0004                     	;# 
   222  0005                     	;# 
   223  0006                     	;# 
   224  0007                     	;# 
   225  0008                     	;# 
   226  0009                     	;# 
   227  000A                     	;# 
   228  000B                     	;# 
   229  000C                     	;# 
   230  000D                     	;# 
   231  000E                     	;# 
   232  000E                     	;# 
   233  000F                     	;# 
   234  0010                     	;# 
   235  0011                     	;# 
   236  0012                     	;# 
   237  0013                     	;# 
   238  0014                     	;# 
   239  0015                     	;# 
   240  0015                     	;# 
   241  0016                     	;# 
   242  0017                     	;# 
   243  0018                     	;# 
   244  0019                     	;# 
   245  001A                     	;# 
   246  001B                     	;# 
   247  001B                     	;# 
   248  001C                     	;# 
   249  001D                     	;# 
   250  001E                     	;# 
   251  001F                     	;# 
   252  0081                     	;# 
   253  0085                     	;# 
   254  0086                     	;# 
   255  0087                     	;# 
   256  0088                     	;# 
   257  0089                     	;# 
   258  008C                     	;# 
   259  008D                     	;# 
   260  008E                     	;# 
   261  008F                     	;# 
   262  0090                     	;# 
   263  0091                     	;# 
   264  0092                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0093                     	;# 
   268  0094                     	;# 
   269  0095                     	;# 
   270  0096                     	;# 
   271  0097                     	;# 
   272  0098                     	;# 
   273  0099                     	;# 
   274  009A                     	;# 
   275  009B                     	;# 
   276  009C                     	;# 
   277  009D                     	;# 
   278  009E                     	;# 
   279  009F                     	;# 
   280  0105                     	;# 
   281  0107                     	;# 
   282  0108                     	;# 
   283  0109                     	;# 
   284  010C                     	;# 
   285  010C                     	;# 
   286  010D                     	;# 
   287  010E                     	;# 
   288  010F                     	;# 
   289  0185                     	;# 
   290  0187                     	;# 
   291  0188                     	;# 
   292  0189                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  008F                     	;# 
   340  0090                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0095                     	;# 
   348  0096                     	;# 
   349  0097                     	;# 
   350  0098                     	;# 
   351  0099                     	;# 
   352  009A                     	;# 
   353  009B                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  0105                     	;# 
   359  0107                     	;# 
   360  0108                     	;# 
   361  0109                     	;# 
   362  010C                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  0185                     	;# 
   368  0187                     	;# 
   369  0188                     	;# 
   370  0189                     	;# 
   371  018C                     	;# 
   372  018D                     	;# 
   373  0000                     	;# 
   374  0001                     	;# 
   375  0002                     	;# 
   376  0003                     	;# 
   377  0004                     	;# 
   378  0005                     	;# 
   379  0006                     	;# 
   380  0007                     	;# 
   381  0008                     	;# 
   382  0009                     	;# 
   383  000A                     	;# 
   384  000B                     	;# 
   385  000C                     	;# 
   386  000D                     	;# 
   387  000E                     	;# 
   388  000E                     	;# 
   389  000F                     	;# 
   390  0010                     	;# 
   391  0011                     	;# 
   392  0012                     	;# 
   393  0013                     	;# 
   394  0014                     	;# 
   395  0015                     	;# 
   396  0015                     	;# 
   397  0016                     	;# 
   398  0017                     	;# 
   399  0018                     	;# 
   400  0019                     	;# 
   401  001A                     	;# 
   402  001B                     	;# 
   403  001B                     	;# 
   404  001C                     	;# 
   405  001D                     	;# 
   406  001E                     	;# 
   407  001F                     	;# 
   408  0081                     	;# 
   409  0085                     	;# 
   410  0086                     	;# 
   411  0087                     	;# 
   412  0088                     	;# 
   413  0089                     	;# 
   414  008C                     	;# 
   415  008D                     	;# 
   416  008E                     	;# 
   417  008F                     	;# 
   418  0090                     	;# 
   419  0091                     	;# 
   420  0092                     	;# 
   421  0093                     	;# 
   422  0093                     	;# 
   423  0093                     	;# 
   424  0094                     	;# 
   425  0095                     	;# 
   426  0096                     	;# 
   427  0097                     	;# 
   428  0098                     	;# 
   429  0099                     	;# 
   430  009A                     	;# 
   431  009B                     	;# 
   432  009C                     	;# 
   433  009D                     	;# 
   434  009E                     	;# 
   435  009F                     	;# 
   436  0105                     	;# 
   437  0107                     	;# 
   438  0108                     	;# 
   439  0109                     	;# 
   440  010C                     	;# 
   441  010C                     	;# 
   442  010D                     	;# 
   443  010E                     	;# 
   444  010F                     	;# 
   445  0185                     	;# 
   446  0187                     	;# 
   447  0188                     	;# 
   448  0189                     	;# 
   449  018C                     	;# 
   450  018D                     	;# 
   451  0000                     	;# 
   452  0001                     	;# 
   453  0002                     	;# 
   454  0003                     	;# 
   455  0004                     	;# 
   456  0005                     	;# 
   457  0006                     	;# 
   458  0007                     	;# 
   459  0008                     	;# 
   460  0009                     	;# 
   461  000A                     	;# 
   462  000B                     	;# 
   463  000C                     	;# 
   464  000D                     	;# 
   465  000E                     	;# 
   466  000E                     	;# 
   467  000F                     	;# 
   468  0010                     	;# 
   469  0011                     	;# 
   470  0012                     	;# 
   471  0013                     	;# 
   472  0014                     	;# 
   473  0015                     	;# 
   474  0015                     	;# 
   475  0016                     	;# 
   476  0017                     	;# 
   477  0018                     	;# 
   478  0019                     	;# 
   479  001A                     	;# 
   480  001B                     	;# 
   481  001B                     	;# 
   482  001C                     	;# 
   483  001D                     	;# 
   484  001E                     	;# 
   485  001F                     	;# 
   486  0081                     	;# 
   487  0085                     	;# 
   488  0086                     	;# 
   489  0087                     	;# 
   490  0088                     	;# 
   491  0089                     	;# 
   492  008C                     	;# 
   493  008D                     	;# 
   494  008E                     	;# 
   495  008F                     	;# 
   496  0090                     	;# 
   497  0091                     	;# 
   498  0092                     	;# 
   499  0093                     	;# 
   500  0093                     	;# 
   501  0093                     	;# 
   502  0094                     	;# 
   503  0095                     	;# 
   504  0096                     	;# 
   505  0097                     	;# 
   506  0098                     	;# 
   507  0099                     	;# 
   508  009A                     	;# 
   509  009B                     	;# 
   510  009C                     	;# 
   511  009D                     	;# 
   512  009E                     	;# 
   513  009F                     	;# 
   514  0105                     	;# 
   515  0107                     	;# 
   516  0108                     	;# 
   517  0109                     	;# 
   518  010C                     	;# 
   519  010C                     	;# 
   520  010D                     	;# 
   521  010E                     	;# 
   522  010F                     	;# 
   523  0185                     	;# 
   524  0187                     	;# 
   525  0188                     	;# 
   526  0189                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529                           
   530                           	psect	idataBANK0
   531  049D                     __pidataBANK0:
   532                           
   533                           ;initializer for _J0
   534  049D  3401               	retlw	1
   535                           
   536                           ;initializer for _var
   537  049E  3401               	retlw	1
   538  0001                     _TMR0	set	1
   539  0018                     _RCSTAbits	set	24
   540  0009                     _PORTE	set	9
   541  0007                     _PORTC	set	7
   542  0005                     _PORTA	set	5
   543  0006                     _PORTB	set	6
   544  001A                     _RCREG	set	26
   545  000C                     _PIR1bits	set	12
   546  0019                     _TXREG	set	25
   547  000B                     _INTCONbits	set	11
   548  0008                     _PORTDbits	set	8
   549  0005                     _PORTAbits	set	5
   550  0013                     _SSPBUF	set	19
   551  0014                     _SSPCON	set	20
   552  0008                     _PORTD	set	8
   553  001F                     _ADCON0bits	set	31
   554  0064                     _TXIF	set	100
   555  0049                     _RE1	set	73
   556  0048                     _RE0	set	72
   557  0081                     _OPTION_REGbits	set	129
   558  009A                     _SPBRGH	set	154
   559  0099                     _SPBRG	set	153
   560  0098                     _TXSTAbits	set	152
   561  0089                     _TRISE	set	137
   562  0088                     _TRISD	set	136
   563  0087                     _TRISC	set	135
   564  0086                     _TRISB	set	134
   565  0085                     _TRISA	set	133
   566  008F                     _OSCCONbits	set	143
   567  0094                     _SSPSTATbits	set	148
   568  0094                     _SSPSTAT	set	148
   569  009F                     _ADCON1bits	set	159
   570  0428                     _TRISA0	set	1064
   571  0464                     _TXIE	set	1124
   572  043B                     _TRISC3	set	1083
   573  043D                     _TRISC5	set	1085
   574  0187                     _BAUDCTLbits	set	391
   575  0188                     _ANSEL	set	392
   576  0189                     _ANSELH	set	393
   577                           
   578                           	psect	cinit
   579  0011                     start_initialization:	
   580                           ; #config settings
   581                           
   582  0011                     __initialization:
   583                           
   584                           ; Initialize objects allocated to BANK0
   585  0011  120A  118A  249D  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   586  0016  00C7               	movwf	__pdataBANK0& (0+127)
   587  0017  120A  118A  249E  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   588  001C  00C8               	movwf	(__pdataBANK0+1)& (0+127)
   589                           
   590                           ; Clear objects allocated to BANK0
   591  001D  01B9               	clrf	__pbssBANK0& (0+127)
   592  001E  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   593  001F  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   594  0020  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   595  0021  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   596  0022  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   597  0023  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   598  0024  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   599  0025  01C1               	clrf	(__pbssBANK0+8)& (0+127)
   600  0026  01C2               	clrf	(__pbssBANK0+9)& (0+127)
   601  0027  01C3               	clrf	(__pbssBANK0+10)& (0+127)
   602  0028  01C4               	clrf	(__pbssBANK0+11)& (0+127)
   603  0029  01C5               	clrf	(__pbssBANK0+12)& (0+127)
   604  002A  01C6               	clrf	(__pbssBANK0+13)& (0+127)
   605                           
   606                           ; Clear objects allocated to COMMON
   607  002B  01FB               	clrf	__pbssCOMMON& (0+127)
   608  002C  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   609  002D  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   610  002E                     end_of_initialization:	
   611                           ;End of C runtime variable initialization code
   612                           
   613  002E                     __end_of__initialization:
   614  002E  0183               	clrf	3
   615  002F  120A  118A  2832   	ljmp	_main	;jump to C main() function
   616                           
   617                           	psect	bssCOMMON
   618  007B                     __pbssCOMMON:
   619  007B                     _HUGO:
   620  007B                     	ds	1
   621  007C                     _temp_read:
   622  007C                     	ds	1
   623  007D                     _unidad:
   624  007D                     	ds	1
   625                           
   626                           	psect	bssBANK0
   627  0039                     __pbssBANK0:
   628  0039                     _FZERO:
   629  0039                     	ds	1
   630  003A                     _dozen_1:
   631  003A                     	ds	1
   632  003B                     _dozen:
   633  003B                     	ds	1
   634  003C                     _k1:
   635  003C                     	ds	1
   636  003D                     _k0:
   637  003D                     	ds	1
   638  003E                     _unit_1_change:
   639  003E                     	ds	1
   640  003F                     _unit:
   641  003F                     	ds	1
   642  0040                     _var0:
   643  0040                     	ds	1
   644  0041                     _var1:
   645  0041                     	ds	1
   646  0042                     _c:
   647  0042                     	ds	1
   648  0043                     _counter:
   649  0043                     	ds	1
   650  0044                     _decathlon:
   651  0044                     	ds	1
   652  0045                     _J_2_dontpayenough:
   653  0045                     	ds	1
   654  0046                     _J_1:
   655  0046                     	ds	1
   656                           
   657                           	psect	dataBANK0
   658  0047                     __pdataBANK0:
   659  0047                     _J0:
   660  0047                     	ds	1
   661  0048                     _var:
   662  0048                     	ds	1
   663                           
   664                           	psect	cstackCOMMON
   665  0070                     __pcstackCOMMON:
   666  0070                     ?_initCONFIG:
   667  0070                     ?_initTMR0:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_spiReceiveWait:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ?_spiWrite:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_spiRead:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_main:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ?_isr:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?i1___bmul:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     i1___bmul@multiplicand:	
   689                           ; 1 bytes @ 0x0
   690                           
   691                           
   692                           ; 1 bytes @ 0x0
   693  0070                     	ds	1
   694  0071                     ??i1___bmul:
   695                           
   696                           ; 1 bytes @ 0x1
   697  0071                     	ds	1
   698  0072                     i1___bmul@product:
   699                           
   700                           ; 1 bytes @ 0x2
   701  0072                     	ds	1
   702  0073                     i1___bmul@multiplier:
   703                           
   704                           ; 1 bytes @ 0x3
   705  0073                     	ds	1
   706  0074                     ??_isr:
   707                           
   708                           ; 1 bytes @ 0x4
   709  0074                     	ds	7
   710                           
   711                           	psect	cstackBANK0
   712  0020                     __pcstackBANK0:
   713  0020                     ??_initTMR0:
   714  0020                     ?_spiInit:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0020                     ??_spiReceiveWait:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0020                     ??_spiWrite:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0020                     ??_spiRead:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0020                     ?___bmul:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0020                     ?___wmul:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0020                     spiInit@sDataSample:	
   733                           ; 2 bytes @ 0x0
   734                           
   735  0020                     spiWrite@dat:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0020                     ___bmul@multiplicand:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0020                     ___wmul@multiplier:	
   742                           ; 1 bytes @ 0x0
   743                           
   744                           
   745                           ; 2 bytes @ 0x0
   746  0020                     	ds	1
   747  0021                     ??___bmul:
   748  0021                     spiInit@sClockIdle:	
   749                           ; 1 bytes @ 0x1
   750                           
   751                           
   752                           ; 1 bytes @ 0x1
   753  0021                     	ds	1
   754  0022                     spiInit@sTransmitEdge:
   755  0022                     ___bmul@product:	
   756                           ; 1 bytes @ 0x2
   757                           
   758  0022                     ___wmul@multiplicand:	
   759                           ; 1 bytes @ 0x2
   760                           
   761                           
   762                           ; 2 bytes @ 0x2
   763  0022                     	ds	1
   764  0023                     ??_spiInit:
   765  0023                     spiInit@sType:	
   766                           ; 1 bytes @ 0x3
   767                           
   768  0023                     ___bmul@multiplier:	
   769                           ; 1 bytes @ 0x3
   770                           
   771                           
   772                           ; 1 bytes @ 0x3
   773  0023                     	ds	1
   774  0024                     ??_initCONFIG:
   775  0024                     ??___wmul:	
   776                           ; 1 bytes @ 0x4
   777                           
   778  0024                     ___wmul@product:	
   779                           ; 1 bytes @ 0x4
   780                           
   781                           
   782                           ; 2 bytes @ 0x4
   783  0024                     	ds	2
   784  0026                     ?___awdiv:
   785  0026                     ___awdiv@divisor:	
   786                           ; 2 bytes @ 0x6
   787                           
   788                           
   789                           ; 2 bytes @ 0x6
   790  0026                     	ds	2
   791  0028                     ___awdiv@dividend:
   792                           
   793                           ; 2 bytes @ 0x8
   794  0028                     	ds	2
   795  002A                     ??___awdiv:
   796                           
   797                           ; 1 bytes @ 0xA
   798  002A                     	ds	1
   799  002B                     ___awdiv@counter:
   800                           
   801                           ; 1 bytes @ 0xB
   802  002B                     	ds	1
   803  002C                     ___awdiv@sign:
   804                           
   805                           ; 1 bytes @ 0xC
   806  002C                     	ds	1
   807  002D                     ___awdiv@quotient:
   808                           
   809                           ; 2 bytes @ 0xD
   810  002D                     	ds	2
   811  002F                     ??_main:
   812                           
   813                           ; 1 bytes @ 0xF
   814  002F                     	ds	8
   815  0037                     _main$1341:
   816                           
   817                           ; 2 bytes @ 0x17
   818  0037                     	ds	2
   819                           
   820                           	psect	maintext
   821  0032                     __pmaintext:	
   822 ;;
   823 ;;Main: autosize = 0, tempsize = 8, incstack = 0, save=0
   824 ;;
   825 ;; *************** function _main *****************
   826 ;; Defined at:
   827 ;;		line 62 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;		None
   830 ;; Auto vars:     Size  Location     Type
   831 ;;		None
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, status,2, status,0, pclath, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : B00/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   841 ;;      Params:         0       0       0       0       0
   842 ;;      Locals:         0       2       0       0       0
   843 ;;      Temps:          0       8       0       0       0
   844 ;;      Totals:         0      10       0       0       0
   845 ;;Total ram usage:       10 bytes
   846 ;; Hardware stack levels required when called: 4
   847 ;; This function calls:
   848 ;;		___awdiv
   849 ;;		___bmul
   850 ;;		___wmul
   851 ;;		_initCONFIG
   852 ;;		_initTMR0
   853 ;;		_spiRead
   854 ;;		_spiWrite
   855 ;; This function is called by:
   856 ;;		Startup code after reset
   857 ;; This function uses a non-reentrant model
   858 ;;
   859                           
   860                           
   861                           ;psect for function _main
   862  0032                     _main:
   863  0032                     l1455:	
   864                           ;incstack = 0
   865                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   866                           
   867                           
   868                           ;main.c: 63:     initCONFIG();
   869  0032  120A  118A  23CC  120A  118A  	fcall	_initCONFIG
   870                           
   871                           ;main.c: 64:     initTMR0();
   872  0037  120A  118A  247B  120A  118A  	fcall	_initTMR0
   873  003C                     l1457:
   874                           
   875                           ;main.c: 66:        PORTAbits.RA0 = 0;
   876  003C  1283               	bcf	3,5	;RP0=0, select bank0
   877  003D  1303               	bcf	3,6	;RP1=0, select bank0
   878  003E  1005               	bcf	5,0	;volatile
   879  003F                     l1459:
   880                           
   881                           ;main.c: 67:        _delay((unsigned long)((1)*(8000000/4000.0)));
   882  003F  3003               	movlw	3
   883  0040  1283               	bcf	3,5	;RP0=0, select bank0
   884  0041  1303               	bcf	3,6	;RP1=0, select bank0
   885  0042  00B0               	movwf	??_main+1
   886  0043  3097               	movlw	151
   887  0044  00AF               	movwf	??_main
   888  0045                     u887:
   889  0045  0BAF               	decfsz	??_main,f
   890  0046  2845               	goto	u887
   891  0047  0BB0               	decfsz	??_main+1,f
   892  0048  2845               	goto	u887
   893  0049                     l1461:
   894                           
   895                           ;main.c: 69:        spiWrite(var);
   896  0049  1283               	bcf	3,5	;RP0=0, select bank0
   897  004A  1303               	bcf	3,6	;RP1=0, select bank0
   898  004B  0848               	movf	_var,w
   899  004C  120A  118A  2497  120A  118A  	fcall	_spiWrite
   900  0051                     l1463:
   901                           
   902                           ;main.c: 70:        if (var == 1) {
   903  0051  1283               	bcf	3,5	;RP0=0, select bank0
   904  0052  1303               	bcf	3,6	;RP1=0, select bank0
   905  0053  0348               	decf	_var,w
   906  0054  1D03               	btfss	3,2
   907  0055  2857               	goto	u661
   908  0056  2858               	goto	u660
   909  0057                     u661:
   910  0057  2867               	goto	l1469
   911  0058                     u660:
   912  0058                     l1465:
   913                           
   914                           ;main.c: 71:        var0 = spiRead();
   915  0058  120A  118A  2487  120A  118A  	fcall	_spiRead
   916  005D  1283               	bcf	3,5	;RP0=0, select bank0
   917  005E  1303               	bcf	3,6	;RP1=0, select bank0
   918  005F  00AF               	movwf	??_main
   919  0060  082F               	movf	??_main,w
   920  0061  00C0               	movwf	_var0
   921  0062                     l1467:
   922                           
   923                           ;main.c: 72:        var = 2;
   924  0062  3002               	movlw	2
   925  0063  00AF               	movwf	??_main
   926  0064  082F               	movf	??_main,w
   927  0065  00C8               	movwf	_var
   928                           
   929                           ;main.c: 73:        }
   930  0066  2879               	goto	l1475
   931  0067                     l1469:
   932  0067  3002               	movlw	2
   933  0068  0648               	xorwf	_var,w
   934  0069  1D03               	btfss	3,2
   935  006A  286C               	goto	u671
   936  006B  286D               	goto	u670
   937  006C                     u671:
   938  006C  2879               	goto	l1475
   939  006D                     u670:
   940  006D                     l1471:
   941                           
   942                           ;main.c: 75:        var1 = spiRead();
   943  006D  120A  118A  2487  120A  118A  	fcall	_spiRead
   944  0072  1283               	bcf	3,5	;RP0=0, select bank0
   945  0073  1303               	bcf	3,6	;RP1=0, select bank0
   946  0074  00AF               	movwf	??_main
   947  0075  082F               	movf	??_main,w
   948  0076  00C1               	movwf	_var1
   949  0077                     l1473:
   950                           
   951                           ;main.c: 76:        var = 1;
   952  0077  01C8               	clrf	_var
   953  0078  0AC8               	incf	_var,f
   954  0079                     l1475:
   955                           
   956                           ;main.c: 78:        _delay((unsigned long)((1)*(8000000/4000.0)));
   957  0079  3003               	movlw	3
   958  007A  1283               	bcf	3,5	;RP0=0, select bank0
   959  007B  1303               	bcf	3,6	;RP1=0, select bank0
   960  007C  00B0               	movwf	??_main+1
   961  007D  3097               	movlw	151
   962  007E  00AF               	movwf	??_main
   963  007F                     u897:
   964  007F  0BAF               	decfsz	??_main,f
   965  0080  287F               	goto	u897
   966  0081  0BB0               	decfsz	??_main+1,f
   967  0082  287F               	goto	u897
   968  0083                     l1477:
   969                           
   970                           ;main.c: 79:        PORTAbits.RA0 = 1;
   971  0083  1283               	bcf	3,5	;RP0=0, select bank0
   972  0084  1303               	bcf	3,6	;RP1=0, select bank0
   973  0085  1405               	bsf	5,0	;volatile
   974  0086                     l1479:
   975                           
   976                           ;main.c: 80:        _delay((unsigned long)((250)*(8000000/4000.0)));
   977  0086  3003               	movlw	3
   978  0087  1283               	bcf	3,5	;RP0=0, select bank0
   979  0088  1303               	bcf	3,6	;RP1=0, select bank0
   980  0089  00B1               	movwf	??_main+2
   981  008A  308A               	movlw	138
   982  008B  00B0               	movwf	??_main+1
   983  008C  3055               	movlw	85
   984  008D  00AF               	movwf	??_main
   985  008E                     u907:
   986  008E  0BAF               	decfsz	??_main,f
   987  008F  288E               	goto	u907
   988  0090  0BB0               	decfsz	??_main+1,f
   989  0091  288E               	goto	u907
   990  0092  0BB1               	decfsz	??_main+2,f
   991  0093  288E               	goto	u907
   992                           
   993                           ;main.c: 81:     unit = var1 / 51;
   994  0094  3033               	movlw	51
   995  0095  1283               	bcf	3,5	;RP0=0, select bank0
   996  0096  1303               	bcf	3,6	;RP1=0, select bank0
   997  0097  00A6               	movwf	___awdiv@divisor
   998  0098  3000               	movlw	0
   999  0099  00A7               	movwf	___awdiv@divisor+1
  1000  009A  0841               	movf	_var1,w
  1001  009B  00AF               	movwf	??_main
  1002  009C  01B0               	clrf	??_main+1
  1003  009D  082F               	movf	??_main,w
  1004  009E  00A8               	movwf	___awdiv@dividend
  1005  009F  0830               	movf	??_main+1,w
  1006  00A0  00A9               	movwf	___awdiv@dividend+1
  1007  00A1  120A  118A  2363  120A  118A  	fcall	___awdiv
  1008  00A6  1283               	bcf	3,5	;RP0=0, select bank0
  1009  00A7  1303               	bcf	3,6	;RP1=0, select bank0
  1010  00A8  0826               	movf	?___awdiv,w
  1011  00A9  00B1               	movwf	??_main+2
  1012  00AA  0831               	movf	??_main+2,w
  1013  00AB  00BF               	movwf	_unit
  1014                           
  1015                           ;main.c: 82:     dozen = ((var1 * 100 / 51) - (unit*100))/10;
  1016  00AC  3033               	movlw	51
  1017  00AD  00A6               	movwf	___awdiv@divisor
  1018  00AE  3000               	movlw	0
  1019  00AF  00A7               	movwf	___awdiv@divisor+1
  1020  00B0  0841               	movf	_var1,w
  1021  00B1  00AF               	movwf	??_main
  1022  00B2  01B0               	clrf	??_main+1
  1023  00B3  082F               	movf	??_main,w
  1024  00B4  00A0               	movwf	___wmul@multiplier
  1025  00B5  0830               	movf	??_main+1,w
  1026  00B6  00A1               	movwf	___wmul@multiplier+1
  1027  00B7  3064               	movlw	100
  1028  00B8  00A2               	movwf	___wmul@multiplicand
  1029  00B9  3000               	movlw	0
  1030  00BA  00A3               	movwf	___wmul@multiplicand+1
  1031  00BB  120A  118A  240A  120A  118A  	fcall	___wmul
  1032  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1033  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1034  00C2  0821               	movf	?___wmul+1,w
  1035  00C3  00A9               	movwf	___awdiv@dividend+1
  1036  00C4  0820               	movf	?___wmul,w
  1037  00C5  00A8               	movwf	___awdiv@dividend
  1038  00C6  120A  118A  2363  120A  118A  	fcall	___awdiv
  1039  00CB  1283               	bcf	3,5	;RP0=0, select bank0
  1040  00CC  1303               	bcf	3,6	;RP1=0, select bank0
  1041  00CD  0826               	movf	?___awdiv,w
  1042  00CE  00B1               	movwf	??_main+2
  1043  00CF  0827               	movf	?___awdiv+1,w
  1044  00D0  00B2               	movwf	??_main+3
  1045  00D1  083F               	movf	_unit,w
  1046  00D2  00B3               	movwf	??_main+4
  1047  00D3  01B4               	clrf	??_main+5
  1048  00D4  0833               	movf	??_main+4,w
  1049  00D5  00A0               	movwf	___wmul@multiplier
  1050  00D6  0834               	movf	??_main+5,w
  1051  00D7  00A1               	movwf	___wmul@multiplier+1
  1052  00D8  309C               	movlw	156
  1053  00D9  00A2               	movwf	___wmul@multiplicand
  1054  00DA  30FF               	movlw	255
  1055  00DB  00A3               	movwf	___wmul@multiplicand+1
  1056  00DC  120A  118A  240A  120A  118A  	fcall	___wmul
  1057  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1058  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1059  00E3  0820               	movf	?___wmul,w
  1060  00E4  0731               	addwf	??_main+2,w
  1061  00E5  00B7               	movwf	_main$1341
  1062  00E6  0821               	movf	?___wmul+1,w
  1063  00E7  1803               	skipnc
  1064  00E8  0A21               	incf	?___wmul+1,w
  1065  00E9  0732               	addwf	??_main+3,w
  1066  00EA  00B8               	movwf	_main$1341+1
  1067                           
  1068                           ;main.c: 82:     dozen = ((var1 * 100 / 51) - (unit*100))/10;
  1069  00EB  300A               	movlw	10
  1070  00EC  00A6               	movwf	___awdiv@divisor
  1071  00ED  3000               	movlw	0
  1072  00EE  00A7               	movwf	___awdiv@divisor+1
  1073  00EF  0838               	movf	_main$1341+1,w
  1074  00F0  00A9               	movwf	___awdiv@dividend+1
  1075  00F1  0837               	movf	_main$1341,w
  1076  00F2  00A8               	movwf	___awdiv@dividend
  1077  00F3  120A  118A  2363  120A  118A  	fcall	___awdiv
  1078  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1079  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1080  00FA  0826               	movf	?___awdiv,w
  1081  00FB  00AF               	movwf	??_main
  1082  00FC  082F               	movf	??_main,w
  1083  00FD  00BB               	movwf	_dozen
  1084                           
  1085                           ;main.c: 83:     dozen_1 = ((var1 * 100 / 51) - (unit*100) - (dozen*10));
  1086  00FE  3033               	movlw	51
  1087  00FF  00A6               	movwf	___awdiv@divisor
  1088  0100  3000               	movlw	0
  1089  0101  00A7               	movwf	___awdiv@divisor+1
  1090  0102  0841               	movf	_var1,w
  1091  0103  00AF               	movwf	??_main
  1092  0104  01B0               	clrf	??_main+1
  1093  0105  082F               	movf	??_main,w
  1094  0106  00A0               	movwf	___wmul@multiplier
  1095  0107  0830               	movf	??_main+1,w
  1096  0108  00A1               	movwf	___wmul@multiplier+1
  1097  0109  3064               	movlw	100
  1098  010A  00A2               	movwf	___wmul@multiplicand
  1099  010B  3000               	movlw	0
  1100  010C  00A3               	movwf	___wmul@multiplicand+1
  1101  010D  120A  118A  240A  120A  118A  	fcall	___wmul
  1102  0112  1283               	bcf	3,5	;RP0=0, select bank0
  1103  0113  1303               	bcf	3,6	;RP1=0, select bank0
  1104  0114  0821               	movf	?___wmul+1,w
  1105  0115  00A9               	movwf	___awdiv@dividend+1
  1106  0116  0820               	movf	?___wmul,w
  1107  0117  00A8               	movwf	___awdiv@dividend
  1108  0118  120A  118A  2363  120A  118A  	fcall	___awdiv
  1109  011D  1283               	bcf	3,5	;RP0=0, select bank0
  1110  011E  1303               	bcf	3,6	;RP1=0, select bank0
  1111  011F  0826               	movf	?___awdiv,w
  1112  0120  00B1               	movwf	??_main+2
  1113  0121  0827               	movf	?___awdiv+1,w
  1114  0122  00B2               	movwf	??_main+3
  1115  0123  309C               	movlw	156
  1116  0124  00B3               	movwf	??_main+4
  1117  0125  0833               	movf	??_main+4,w
  1118  0126  00A0               	movwf	___bmul@multiplicand
  1119  0127  083F               	movf	_unit,w
  1120  0128  120A  118A  244F  120A  118A  	fcall	___bmul
  1121  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1122  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1123  012F  00B4               	movwf	??_main+5
  1124  0130  30F6               	movlw	246
  1125  0131  00B5               	movwf	??_main+6
  1126  0132  0835               	movf	??_main+6,w
  1127  0133  00A0               	movwf	___bmul@multiplicand
  1128  0134  083B               	movf	_dozen,w
  1129  0135  120A  118A  244F  120A  118A  	fcall	___bmul
  1130  013A  1283               	bcf	3,5	;RP0=0, select bank0
  1131  013B  1303               	bcf	3,6	;RP1=0, select bank0
  1132  013C  0734               	addwf	??_main+5,w
  1133  013D  0731               	addwf	??_main+2,w
  1134  013E  00B6               	movwf	??_main+7
  1135  013F  0836               	movf	??_main+7,w
  1136  0140  00BA               	movwf	_dozen_1
  1137                           
  1138                           ;main.c: 84:     unit_1_change = var0 / 51;
  1139  0141  3033               	movlw	51
  1140  0142  00A6               	movwf	___awdiv@divisor
  1141  0143  3000               	movlw	0
  1142  0144  00A7               	movwf	___awdiv@divisor+1
  1143  0145  0840               	movf	_var0,w
  1144  0146  00AF               	movwf	??_main
  1145  0147  01B0               	clrf	??_main+1
  1146  0148  082F               	movf	??_main,w
  1147  0149  00A8               	movwf	___awdiv@dividend
  1148  014A  0830               	movf	??_main+1,w
  1149  014B  00A9               	movwf	___awdiv@dividend+1
  1150  014C  120A  118A  2363  120A  118A  	fcall	___awdiv
  1151  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0153  0826               	movf	?___awdiv,w
  1154  0154  00B1               	movwf	??_main+2
  1155  0155  0831               	movf	??_main+2,w
  1156  0156  00BE               	movwf	_unit_1_change
  1157                           
  1158                           ;main.c: 85:     k0 = (((var0 * 100) / 51) - (unit_1_change*100))/10;
  1159  0157  3033               	movlw	51
  1160  0158  00A6               	movwf	___awdiv@divisor
  1161  0159  3000               	movlw	0
  1162  015A  00A7               	movwf	___awdiv@divisor+1
  1163  015B  0840               	movf	_var0,w
  1164  015C  00AF               	movwf	??_main
  1165  015D  01B0               	clrf	??_main+1
  1166  015E  082F               	movf	??_main,w
  1167  015F  00A0               	movwf	___wmul@multiplier
  1168  0160  0830               	movf	??_main+1,w
  1169  0161  00A1               	movwf	___wmul@multiplier+1
  1170  0162  3064               	movlw	100
  1171  0163  00A2               	movwf	___wmul@multiplicand
  1172  0164  3000               	movlw	0
  1173  0165  00A3               	movwf	___wmul@multiplicand+1
  1174  0166  120A  118A  240A  120A  118A  	fcall	___wmul
  1175  016B  1283               	bcf	3,5	;RP0=0, select bank0
  1176  016C  1303               	bcf	3,6	;RP1=0, select bank0
  1177  016D  0821               	movf	?___wmul+1,w
  1178  016E  00A9               	movwf	___awdiv@dividend+1
  1179  016F  0820               	movf	?___wmul,w
  1180  0170  00A8               	movwf	___awdiv@dividend
  1181  0171  120A  118A  2363  120A  118A  	fcall	___awdiv
  1182  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1183  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1184  0178  0826               	movf	?___awdiv,w
  1185  0179  00B1               	movwf	??_main+2
  1186  017A  0827               	movf	?___awdiv+1,w
  1187  017B  00B2               	movwf	??_main+3
  1188  017C  083E               	movf	_unit_1_change,w
  1189  017D  00B3               	movwf	??_main+4
  1190  017E  01B4               	clrf	??_main+5
  1191  017F  0833               	movf	??_main+4,w
  1192  0180  00A0               	movwf	___wmul@multiplier
  1193  0181  0834               	movf	??_main+5,w
  1194  0182  00A1               	movwf	___wmul@multiplier+1
  1195  0183  309C               	movlw	156
  1196  0184  00A2               	movwf	___wmul@multiplicand
  1197  0185  30FF               	movlw	255
  1198  0186  00A3               	movwf	___wmul@multiplicand+1
  1199  0187  120A  118A  240A  120A  118A  	fcall	___wmul
  1200  018C  1283               	bcf	3,5	;RP0=0, select bank0
  1201  018D  1303               	bcf	3,6	;RP1=0, select bank0
  1202  018E  0820               	movf	?___wmul,w
  1203  018F  0731               	addwf	??_main+2,w
  1204  0190  00B7               	movwf	_main$1341
  1205  0191  0821               	movf	?___wmul+1,w
  1206  0192  1803               	skipnc
  1207  0193  0A21               	incf	?___wmul+1,w
  1208  0194  0732               	addwf	??_main+3,w
  1209  0195  00B8               	movwf	_main$1341+1
  1210                           
  1211                           ;main.c: 85:     k0 = (((var0 * 100) / 51) - (unit_1_change*100))/10;
  1212  0196  300A               	movlw	10
  1213  0197  00A6               	movwf	___awdiv@divisor
  1214  0198  3000               	movlw	0
  1215  0199  00A7               	movwf	___awdiv@divisor+1
  1216  019A  0838               	movf	_main$1341+1,w
  1217  019B  00A9               	movwf	___awdiv@dividend+1
  1218  019C  0837               	movf	_main$1341,w
  1219  019D  00A8               	movwf	___awdiv@dividend
  1220  019E  120A  118A  2363  120A  118A  	fcall	___awdiv
  1221  01A3  1283               	bcf	3,5	;RP0=0, select bank0
  1222  01A4  1303               	bcf	3,6	;RP1=0, select bank0
  1223  01A5  0826               	movf	?___awdiv,w
  1224  01A6  00AF               	movwf	??_main
  1225  01A7  082F               	movf	??_main,w
  1226  01A8  00BD               	movwf	_k0
  1227                           
  1228                           ;main.c: 86:     k1 = (((var0 * 100) / 51) - (unit_1_change*100) - (k0*10));
  1229  01A9  3033               	movlw	51
  1230  01AA  00A6               	movwf	___awdiv@divisor
  1231  01AB  3000               	movlw	0
  1232  01AC  00A7               	movwf	___awdiv@divisor+1
  1233  01AD  0840               	movf	_var0,w
  1234  01AE  00AF               	movwf	??_main
  1235  01AF  01B0               	clrf	??_main+1
  1236  01B0  082F               	movf	??_main,w
  1237  01B1  00A0               	movwf	___wmul@multiplier
  1238  01B2  0830               	movf	??_main+1,w
  1239  01B3  00A1               	movwf	___wmul@multiplier+1
  1240  01B4  3064               	movlw	100
  1241  01B5  00A2               	movwf	___wmul@multiplicand
  1242  01B6  3000               	movlw	0
  1243  01B7  00A3               	movwf	___wmul@multiplicand+1
  1244  01B8  120A  118A  240A  120A  118A  	fcall	___wmul
  1245  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1246  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1247  01BF  0821               	movf	?___wmul+1,w
  1248  01C0  00A9               	movwf	___awdiv@dividend+1
  1249  01C1  0820               	movf	?___wmul,w
  1250  01C2  00A8               	movwf	___awdiv@dividend
  1251  01C3  120A  118A  2363  120A  118A  	fcall	___awdiv
  1252  01C8  1283               	bcf	3,5	;RP0=0, select bank0
  1253  01C9  1303               	bcf	3,6	;RP1=0, select bank0
  1254  01CA  0826               	movf	?___awdiv,w
  1255  01CB  00B1               	movwf	??_main+2
  1256  01CC  0827               	movf	?___awdiv+1,w
  1257  01CD  00B2               	movwf	??_main+3
  1258  01CE  309C               	movlw	156
  1259  01CF  00B3               	movwf	??_main+4
  1260  01D0  0833               	movf	??_main+4,w
  1261  01D1  00A0               	movwf	___bmul@multiplicand
  1262  01D2  083E               	movf	_unit_1_change,w
  1263  01D3  120A  118A  244F  120A  118A  	fcall	___bmul
  1264  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1265  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1266  01DA  00B4               	movwf	??_main+5
  1267  01DB  30F6               	movlw	246
  1268  01DC  00B5               	movwf	??_main+6
  1269  01DD  0835               	movf	??_main+6,w
  1270  01DE  00A0               	movwf	___bmul@multiplicand
  1271  01DF  083D               	movf	_k0,w
  1272  01E0  120A  118A  244F  120A  118A  	fcall	___bmul
  1273  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  1274  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  1275  01E7  0734               	addwf	??_main+5,w
  1276  01E8  0731               	addwf	??_main+2,w
  1277  01E9  00B6               	movwf	??_main+7
  1278  01EA  0836               	movf	??_main+7,w
  1279  01EB  00BC               	movwf	_k1
  1280  01EC                     l1481:
  1281                           
  1282                           ;main.c: 88:     if (PORTDbits.RD1 == 1){
  1283  01EC  1C88               	btfss	8,1	;volatile
  1284  01ED  29EF               	goto	u681
  1285  01EE  29F0               	goto	u680
  1286  01EF                     u681:
  1287  01EF  29F7               	goto	l1487
  1288  01F0                     u680:
  1289  01F0                     l1483:
  1290                           
  1291                           ;main.c: 89:         HUGO = 0;
  1292  01F0  01FB               	clrf	_HUGO
  1293                           
  1294                           ;main.c: 90:         counter = 0;
  1295  01F1  01C3               	clrf	_counter
  1296                           
  1297                           ;main.c: 91:         PORTD = 0;
  1298  01F2  0188               	clrf	8	;volatile
  1299  01F3                     l1485:
  1300                           
  1301                           ;main.c: 92:         J0 = 1;
  1302  01F3  01C7               	clrf	_J0
  1303  01F4  0AC7               	incf	_J0,f
  1304                           
  1305                           ;main.c: 93:         J_1 = 0;
  1306  01F5  01C6               	clrf	_J_1
  1307                           
  1308                           ;main.c: 94:         J_2_dontpayenough = 0;
  1309  01F6  01C5               	clrf	_J_2_dontpayenough
  1310  01F7                     l1487:
  1311                           
  1312                           ;main.c: 96:     if(c > 20){
  1313  01F7  3015               	movlw	21
  1314  01F8  0242               	subwf	_c,w
  1315  01F9  1C03               	skipc
  1316  01FA  29FC               	goto	u691
  1317  01FB  29FD               	goto	u690
  1318  01FC                     u691:
  1319  01FC  283C               	goto	l1457
  1320  01FD                     u690:
  1321  01FD                     l1489:
  1322                           
  1323                           ;main.c: 97:          c = 0;
  1324  01FD  01C2               	clrf	_c
  1325  01FE                     l1491:
  1326                           
  1327                           ;main.c: 98:          TXIE = 1;
  1328  01FE  1683               	bsf	3,5	;RP0=1, select bank1
  1329  01FF  1303               	bcf	3,6	;RP1=0, select bank1
  1330  0200  160C               	bsf	12,4	;volatile
  1331  0201  283C               	goto	l1457
  1332  0202  120A  118A  280E   	ljmp	start
  1333  0205                     __end_of_main:
  1334                           
  1335                           	psect	text1
  1336  0497                     __ptext1:	
  1337 ;; *************** function _spiWrite *****************
  1338 ;; Defined at:
  1339 ;;		line 31 in file "SPI.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  dat             1    wreg     unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  dat             1    0[BANK0 ] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       1       0       0       0
  1355 ;;      Temps:          0       0       0       0       0
  1356 ;;      Totals:         0       1       0       0       0
  1357 ;;Total ram usage:        1 bytes
  1358 ;; Hardware stack levels used: 1
  1359 ;; Hardware stack levels required when called: 2
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _spiWrite
  1369  0497                     _spiWrite:
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _spiWrite: [wreg]
  1373                           ;spiWrite@dat stored from wreg
  1374  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0499  00A0               	movwf	spiWrite@dat
  1377  049A                     l1309:
  1378                           
  1379                           ;SPI.c: 31: void spiWrite(char dat);SPI.c: 32: {;SPI.c: 33:     SSPBUF = dat;
  1380  049A  0820               	movf	spiWrite@dat,w
  1381  049B  0093               	movwf	19	;volatile
  1382  049C                     l71:
  1383  049C  0008               	return
  1384  049D                     __end_of_spiWrite:
  1385                           
  1386                           	psect	text2
  1387  0487                     __ptext2:	
  1388 ;; *************** function _spiRead *****************
  1389 ;; Defined at:
  1390 ;;		line 44 in file "SPI.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      unsigned char 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 3
  1411 ;; This function calls:
  1412 ;;		_spiReceiveWait
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418                           
  1419                           ;psect for function _spiRead
  1420  0487                     _spiRead:
  1421  0487                     l1311:	
  1422                           ;incstack = 0
  1423                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1424                           
  1425                           
  1426                           ;SPI.c: 46:     spiReceiveWait();
  1427  0487  120A  118A  2490  120A  118A  	fcall	_spiReceiveWait
  1428  048C                     l1313:
  1429                           
  1430                           ;SPI.c: 47:     return(SSPBUF);
  1431  048C  1283               	bcf	3,5	;RP0=0, select bank0
  1432  048D  1303               	bcf	3,6	;RP1=0, select bank0
  1433  048E  0813               	movf	19,w	;volatile
  1434  048F                     l79:
  1435  048F  0008               	return
  1436  0490                     __end_of_spiRead:
  1437                           
  1438                           	psect	text3
  1439  0490                     __ptext3:	
  1440 ;; *************** function _spiReceiveWait *****************
  1441 ;; Defined at:
  1442 ;;		line 26 in file "SPI.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		None
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; Hardware stack levels required when called: 2
  1463 ;; This function calls:
  1464 ;;		Nothing
  1465 ;; This function is called by:
  1466 ;;		_spiRead
  1467 ;; This function uses a non-reentrant model
  1468 ;;
  1469                           
  1470                           
  1471                           ;psect for function _spiReceiveWait
  1472  0490                     _spiReceiveWait:
  1473  0490                     l1307:	
  1474                           ;incstack = 0
  1475                           ; Regs used in _spiReceiveWait: []
  1476                           
  1477  0490                     l65:	
  1478                           ;SPI.c: 28:     while ( !SSPSTATbits.BF );
  1479                           
  1480  0490  1683               	bsf	3,5	;RP0=1, select bank1
  1481  0491  1303               	bcf	3,6	;RP1=0, select bank1
  1482  0492  1C14               	btfss	20,0	;volatile
  1483  0493  2C95               	goto	u471
  1484  0494  2C96               	goto	u470
  1485  0495                     u471:
  1486  0495  2C90               	goto	l65
  1487  0496                     u470:
  1488  0496                     l68:
  1489  0496  0008               	return
  1490  0497                     __end_of_spiReceiveWait:
  1491                           
  1492                           	psect	text4
  1493  047B                     __ptext4:	
  1494 ;; *************** function _initTMR0 *****************
  1495 ;; Defined at:
  1496 ;;		line 237 in file "main.c"
  1497 ;; Parameters:    Size  Location     Type
  1498 ;;		None
  1499 ;; Auto vars:     Size  Location     Type
  1500 ;;		None
  1501 ;; Return value:  Size  Location     Type
  1502 ;;                  1    wreg      void 
  1503 ;; Registers used:
  1504 ;;		wreg
  1505 ;; Tracked objects:
  1506 ;;		On entry : 0/0
  1507 ;;		On exit  : 0/0
  1508 ;;		Unchanged: 0/0
  1509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1510 ;;      Params:         0       0       0       0       0
  1511 ;;      Locals:         0       0       0       0       0
  1512 ;;      Temps:          0       0       0       0       0
  1513 ;;      Totals:         0       0       0       0       0
  1514 ;;Total ram usage:        0 bytes
  1515 ;; Hardware stack levels used: 1
  1516 ;; Hardware stack levels required when called: 2
  1517 ;; This function calls:
  1518 ;;		Nothing
  1519 ;; This function is called by:
  1520 ;;		_main
  1521 ;; This function uses a non-reentrant model
  1522 ;;
  1523                           
  1524                           
  1525                           ;psect for function _initTMR0
  1526  047B                     _initTMR0:
  1527  047B                     l1365:	
  1528                           ;incstack = 0
  1529                           ; Regs used in _initTMR0: [wreg]
  1530                           
  1531                           
  1532                           ;main.c: 238:     OPTION_REGbits.T0CS = 0;
  1533  047B  1683               	bsf	3,5	;RP0=1, select bank1
  1534  047C  1303               	bcf	3,6	;RP1=0, select bank1
  1535  047D  1281               	bcf	1,5	;volatile
  1536                           
  1537                           ;main.c: 239:     OPTION_REGbits.PSA = 0;
  1538  047E  1181               	bcf	1,3	;volatile
  1539                           
  1540                           ;main.c: 240:     OPTION_REGbits.PS2 = 1;
  1541  047F  1501               	bsf	1,2	;volatile
  1542                           
  1543                           ;main.c: 241:     OPTION_REGbits.PS1 = 1;
  1544  0480  1481               	bsf	1,1	;volatile
  1545                           
  1546                           ;main.c: 242:     OPTION_REGbits.PS0 = 1;
  1547  0481  1401               	bsf	1,0	;volatile
  1548  0482                     l1367:
  1549                           
  1550                           ;main.c: 243:     TMR0 = 217;
  1551  0482  30D9               	movlw	217
  1552  0483  1283               	bcf	3,5	;RP0=0, select bank0
  1553  0484  1303               	bcf	3,6	;RP1=0, select bank0
  1554  0485  0081               	movwf	1	;volatile
  1555  0486                     l252:
  1556  0486  0008               	return
  1557  0487                     __end_of_initTMR0:
  1558                           
  1559                           	psect	text5
  1560  03CC                     __ptext5:	
  1561 ;; *************** function _initCONFIG *****************
  1562 ;; Defined at:
  1563 ;;		line 204 in file "main.c"
  1564 ;; Parameters:    Size  Location     Type
  1565 ;;		None
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;		None
  1568 ;; Return value:  Size  Location     Type
  1569 ;;                  1    wreg      void 
  1570 ;; Registers used:
  1571 ;;		wreg, status,2, status,0, pclath, cstack
  1572 ;; Tracked objects:
  1573 ;;		On entry : 0/0
  1574 ;;		On exit  : 0/0
  1575 ;;		Unchanged: 0/0
  1576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1577 ;;      Params:         0       0       0       0       0
  1578 ;;      Locals:         0       0       0       0       0
  1579 ;;      Temps:          0       0       0       0       0
  1580 ;;      Totals:         0       0       0       0       0
  1581 ;;Total ram usage:        0 bytes
  1582 ;; Hardware stack levels used: 1
  1583 ;; Hardware stack levels required when called: 3
  1584 ;; This function calls:
  1585 ;;		_spiInit
  1586 ;; This function is called by:
  1587 ;;		_main
  1588 ;; This function uses a non-reentrant model
  1589 ;;
  1590                           
  1591                           
  1592                           ;psect for function _initCONFIG
  1593  03CC                     _initCONFIG:
  1594  03CC                     l1317:	
  1595                           ;incstack = 0
  1596                           ; Regs used in _initCONFIG: [wreg+status,2+status,0+pclath+cstack]
  1597                           
  1598                           
  1599                           ;main.c: 205:     OSCCONbits.IRCF2 = 1;
  1600  03CC  1683               	bsf	3,5	;RP0=1, select bank1
  1601  03CD  1303               	bcf	3,6	;RP1=0, select bank1
  1602  03CE  170F               	bsf	15,6	;volatile
  1603                           
  1604                           ;main.c: 206:     OSCCONbits.IRCF1 = 1;
  1605  03CF  168F               	bsf	15,5	;volatile
  1606                           
  1607                           ;main.c: 207:     OSCCONbits.IRCF0 = 1;
  1608  03D0  160F               	bsf	15,4	;volatile
  1609                           
  1610                           ;main.c: 208:     OSCCONbits.SCS = 1;
  1611  03D1  140F               	bsf	15,0	;volatile
  1612  03D2                     l1319:
  1613                           
  1614                           ;main.c: 209:     ANSELH = 0;
  1615  03D2  1683               	bsf	3,5	;RP0=1, select bank3
  1616  03D3  1703               	bsf	3,6	;RP1=1, select bank3
  1617  03D4  0189               	clrf	9	;volatile
  1618                           
  1619                           ;main.c: 210:     ANSEL = 0b00000000;
  1620  03D5  0188               	clrf	8	;volatile
  1621                           
  1622                           ;main.c: 211:     TRISA = 0b00000000;
  1623  03D6  1683               	bsf	3,5	;RP0=1, select bank1
  1624  03D7  1303               	bcf	3,6	;RP1=0, select bank1
  1625  03D8  0185               	clrf	5	;volatile
  1626                           
  1627                           ;main.c: 212:     TRISB = 0b00000000;
  1628  03D9  0186               	clrf	6	;volatile
  1629  03DA                     l1321:
  1630                           
  1631                           ;main.c: 213:     TRISC = 0b10010000;
  1632  03DA  3090               	movlw	144
  1633  03DB  0087               	movwf	7	;volatile
  1634  03DC                     l1323:
  1635                           
  1636                           ;main.c: 214:     TRISD = 0;
  1637  03DC  0188               	clrf	8	;volatile
  1638  03DD                     l1325:
  1639                           
  1640                           ;main.c: 215:     TRISE = 0;
  1641  03DD  0189               	clrf	9	;volatile
  1642  03DE                     l1327:
  1643                           
  1644                           ;main.c: 216:     PORTA = 0;
  1645  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  1646  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  1647  03E0  0185               	clrf	5	;volatile
  1648  03E1                     l1329:
  1649                           
  1650                           ;main.c: 217:     PORTB = 0;
  1651  03E1  0186               	clrf	6	;volatile
  1652  03E2                     l1331:
  1653                           
  1654                           ;main.c: 218:     PORTC = 0;
  1655  03E2  0187               	clrf	7	;volatile
  1656  03E3                     l1333:
  1657                           
  1658                           ;main.c: 219:     PORTD = 0;
  1659  03E3  0188               	clrf	8	;volatile
  1660  03E4                     l1335:
  1661                           
  1662                           ;main.c: 220:     PORTE = 0;
  1663  03E4  0189               	clrf	9	;volatile
  1664  03E5                     l1337:
  1665                           
  1666                           ;main.c: 221:     INTCONbits.GIE = 1;
  1667  03E5  178B               	bsf	11,7	;volatile
  1668  03E6                     l1339:
  1669                           
  1670                           ;main.c: 222:     INTCONbits.T0IE = 1;
  1671  03E6  168B               	bsf	11,5	;volatile
  1672  03E7                     l1341:
  1673                           
  1674                           ;main.c: 223:     INTCONbits.T0IF = 0;
  1675  03E7  110B               	bcf	11,2	;volatile
  1676  03E8                     l1343:
  1677                           
  1678                           ;main.c: 224:     TXSTAbits.SYNC = 0;
  1679  03E8  1683               	bsf	3,5	;RP0=1, select bank1
  1680  03E9  1303               	bcf	3,6	;RP1=0, select bank1
  1681  03EA  1218               	bcf	24,4	;volatile
  1682  03EB                     l1345:
  1683                           
  1684                           ;main.c: 225:     TXSTAbits.BRGH = 1;
  1685  03EB  1518               	bsf	24,2	;volatile
  1686  03EC                     l1347:
  1687                           
  1688                           ;main.c: 226:     BAUDCTLbits.BRG16 = 1;
  1689  03EC  1683               	bsf	3,5	;RP0=1, select bank3
  1690  03ED  1703               	bsf	3,6	;RP1=1, select bank3
  1691  03EE  1587               	bsf	7,3	;volatile
  1692                           
  1693                           ;main.c: 227:     SPBRG = 207;
  1694  03EF  30CF               	movlw	207
  1695  03F0  1683               	bsf	3,5	;RP0=1, select bank1
  1696  03F1  1303               	bcf	3,6	;RP1=0, select bank1
  1697  03F2  0099               	movwf	25	;volatile
  1698  03F3                     l1349:
  1699                           
  1700                           ;main.c: 228:     SPBRGH = 0;
  1701  03F3  019A               	clrf	26	;volatile
  1702  03F4                     l1351:
  1703                           
  1704                           ;main.c: 229:     RCSTAbits.SPEN = 1;
  1705  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1706  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1707  03F6  1798               	bsf	24,7	;volatile
  1708  03F7                     l1353:
  1709                           
  1710                           ;main.c: 230:     RCSTAbits.RX9 = 0;
  1711  03F7  1318               	bcf	24,6	;volatile
  1712  03F8                     l1355:
  1713                           
  1714                           ;main.c: 231:     RCSTAbits.CREN = 1;
  1715  03F8  1618               	bsf	24,4	;volatile
  1716  03F9                     l1357:
  1717                           
  1718                           ;main.c: 232:     TXSTAbits.TXEN = 1;
  1719  03F9  1683               	bsf	3,5	;RP0=1, select bank1
  1720  03FA  1303               	bcf	3,6	;RP1=0, select bank1
  1721  03FB  1698               	bsf	24,5	;volatile
  1722  03FC                     l1359:
  1723                           
  1724                           ;main.c: 233:     TRISA0 = 0;
  1725  03FC  1005               	bcf	5,0	;volatile
  1726  03FD                     l1361:
  1727                           
  1728                           ;main.c: 234:     PORTAbits.RA0 = 1;
  1729  03FD  1283               	bcf	3,5	;RP0=0, select bank0
  1730  03FE  1303               	bcf	3,6	;RP1=0, select bank0
  1731  03FF  1405               	bsf	5,0	;volatile
  1732  0400                     l1363:
  1733                           
  1734                           ;main.c: 235:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1735  0400  01A0               	clrf	spiInit@sDataSample
  1736  0401  01A1               	clrf	spiInit@sClockIdle
  1737  0402  01A2               	clrf	spiInit@sTransmitEdge
  1738  0403  3020               	movlw	32
  1739  0404  120A  118A  2431  120A  118A  	fcall	_spiInit
  1740  0409                     l249:
  1741  0409  0008               	return
  1742  040A                     __end_of_initCONFIG:
  1743                           
  1744                           	psect	text6
  1745  0431                     __ptext6:	
  1746 ;; *************** function _spiInit *****************
  1747 ;; Defined at:
  1748 ;;		line 9 in file "SPI.c"
  1749 ;; Parameters:    Size  Location     Type
  1750 ;;  sType           1    wreg     enum E1264
  1751 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1752 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1753 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1754 ;; Auto vars:     Size  Location     Type
  1755 ;;  sType           1    3[BANK0 ] enum E1264
  1756 ;; Return value:  Size  Location     Type
  1757 ;;                  1    wreg      void 
  1758 ;; Registers used:
  1759 ;;		wreg, status,2, status,0
  1760 ;; Tracked objects:
  1761 ;;		On entry : 0/0
  1762 ;;		On exit  : 0/0
  1763 ;;		Unchanged: 0/0
  1764 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1765 ;;      Params:         0       3       0       0       0
  1766 ;;      Locals:         0       1       0       0       0
  1767 ;;      Temps:          0       0       0       0       0
  1768 ;;      Totals:         0       4       0       0       0
  1769 ;;Total ram usage:        4 bytes
  1770 ;; Hardware stack levels used: 1
  1771 ;; Hardware stack levels required when called: 2
  1772 ;; This function calls:
  1773 ;;		Nothing
  1774 ;; This function is called by:
  1775 ;;		_initCONFIG
  1776 ;; This function uses a non-reentrant model
  1777 ;;
  1778                           
  1779                           
  1780                           ;psect for function _spiInit
  1781  0431                     _spiInit:
  1782                           
  1783                           ;incstack = 0
  1784                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1785                           ;spiInit@sType stored from wreg
  1786  0431  1283               	bcf	3,5	;RP0=0, select bank0
  1787  0432  1303               	bcf	3,6	;RP1=0, select bank0
  1788  0433  00A3               	movwf	spiInit@sType
  1789  0434                     l1297:
  1790                           
  1791                           ;SPI.c: 9: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 10: {;SPI.c: 11:     TRISC5 = 0;
  1792  0434  1683               	bsf	3,5	;RP0=1, select bank1
  1793  0435  1303               	bcf	3,6	;RP1=0, select bank1
  1794  0436  1287               	bcf	7,5	;volatile
  1795                           
  1796                           ;SPI.c: 12:     if(sType & 0b00000100)
  1797  0437  1283               	bcf	3,5	;RP0=0, select bank0
  1798  0438  1303               	bcf	3,6	;RP1=0, select bank0
  1799  0439  1D23               	btfss	spiInit@sType,2
  1800  043A  2C3C               	goto	u461
  1801  043B  2C3D               	goto	u460
  1802  043C                     u461:
  1803  043C  2C43               	goto	l1303
  1804  043D                     u460:
  1805  043D                     l1299:
  1806                           
  1807                           ;SPI.c: 13:     {;SPI.c: 14:         SSPSTAT = sTransmitEdge;
  1808  043D  0822               	movf	spiInit@sTransmitEdge,w
  1809  043E  1683               	bsf	3,5	;RP0=1, select bank1
  1810  043F  1303               	bcf	3,6	;RP1=0, select bank1
  1811  0440  0094               	movwf	20	;volatile
  1812  0441                     l1301:
  1813                           
  1814                           ;SPI.c: 15:         TRISC3 = 1;
  1815  0441  1587               	bsf	7,3	;volatile
  1816                           
  1817                           ;SPI.c: 16:     }
  1818  0442  2C49               	goto	l61
  1819  0443                     l1303:
  1820                           
  1821                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sDataSample | sTransmitEdge;
  1822  0443  0820               	movf	spiInit@sDataSample,w
  1823  0444  0422               	iorwf	spiInit@sTransmitEdge,w
  1824  0445  1683               	bsf	3,5	;RP0=1, select bank1
  1825  0446  1303               	bcf	3,6	;RP1=0, select bank1
  1826  0447  0094               	movwf	20	;volatile
  1827  0448                     l1305:
  1828                           
  1829                           ;SPI.c: 20:         TRISC3 = 0;
  1830  0448  1187               	bcf	7,3	;volatile
  1831  0449                     l61:	
  1832                           ;SPI.c: 21:     }
  1833                           
  1834                           
  1835                           ;SPI.c: 23:     SSPCON = sType | sClockIdle;
  1836  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1837  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1838  044B  0823               	movf	spiInit@sType,w
  1839  044C  0421               	iorwf	spiInit@sClockIdle,w
  1840  044D  0094               	movwf	20	;volatile
  1841  044E                     l62:
  1842  044E  0008               	return
  1843  044F                     __end_of_spiInit:
  1844                           
  1845                           	psect	text7
  1846  040A                     __ptext7:	
  1847 ;; *************** function ___wmul *****************
  1848 ;; Defined at:
  1849 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul16.c"
  1850 ;; Parameters:    Size  Location     Type
  1851 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1852 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1853 ;; Auto vars:     Size  Location     Type
  1854 ;;  product         2    4[BANK0 ] unsigned int 
  1855 ;; Return value:  Size  Location     Type
  1856 ;;                  2    0[BANK0 ] unsigned int 
  1857 ;; Registers used:
  1858 ;;		wreg, status,2, status,0
  1859 ;; Tracked objects:
  1860 ;;		On entry : 0/0
  1861 ;;		On exit  : 0/0
  1862 ;;		Unchanged: 0/0
  1863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1864 ;;      Params:         0       4       0       0       0
  1865 ;;      Locals:         0       2       0       0       0
  1866 ;;      Temps:          0       0       0       0       0
  1867 ;;      Totals:         0       6       0       0       0
  1868 ;;Total ram usage:        6 bytes
  1869 ;; Hardware stack levels used: 1
  1870 ;; Hardware stack levels required when called: 2
  1871 ;; This function calls:
  1872 ;;		Nothing
  1873 ;; This function is called by:
  1874 ;;		_main
  1875 ;; This function uses a non-reentrant model
  1876 ;;
  1877                           
  1878                           
  1879                           ;psect for function ___wmul
  1880  040A                     ___wmul:
  1881  040A                     l1369:	
  1882                           ;incstack = 0
  1883                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1884                           
  1885  040A  1283               	bcf	3,5	;RP0=0, select bank0
  1886  040B  1303               	bcf	3,6	;RP1=0, select bank0
  1887  040C  01A4               	clrf	___wmul@product
  1888  040D  01A5               	clrf	___wmul@product+1
  1889  040E                     l1371:
  1890  040E  1C20               	btfss	___wmul@multiplier,0
  1891  040F  2C11               	goto	u481
  1892  0410  2C12               	goto	u480
  1893  0411                     u481:
  1894  0411  2C18               	goto	l351
  1895  0412                     u480:
  1896  0412                     l1373:
  1897  0412  0822               	movf	___wmul@multiplicand,w
  1898  0413  07A4               	addwf	___wmul@product,f
  1899  0414  1803               	skipnc
  1900  0415  0AA5               	incf	___wmul@product+1,f
  1901  0416  0823               	movf	___wmul@multiplicand+1,w
  1902  0417  07A5               	addwf	___wmul@product+1,f
  1903  0418                     l351:
  1904  0418  3001               	movlw	1
  1905  0419                     u495:
  1906  0419  1003               	clrc
  1907  041A  0DA2               	rlf	___wmul@multiplicand,f
  1908  041B  0DA3               	rlf	___wmul@multiplicand+1,f
  1909  041C  3EFF               	addlw	-1
  1910  041D  1D03               	skipz
  1911  041E  2C19               	goto	u495
  1912  041F                     l1375:
  1913  041F  3001               	movlw	1
  1914  0420                     u505:
  1915  0420  1003               	clrc
  1916  0421  0CA1               	rrf	___wmul@multiplier+1,f
  1917  0422  0CA0               	rrf	___wmul@multiplier,f
  1918  0423  3EFF               	addlw	-1
  1919  0424  1D03               	skipz
  1920  0425  2C20               	goto	u505
  1921  0426                     l1377:
  1922  0426  0820               	movf	___wmul@multiplier,w
  1923  0427  0421               	iorwf	___wmul@multiplier+1,w
  1924  0428  1D03               	btfss	3,2
  1925  0429  2C2B               	goto	u511
  1926  042A  2C2C               	goto	u510
  1927  042B                     u511:
  1928  042B  2C0E               	goto	l1371
  1929  042C                     u510:
  1930  042C                     l1379:
  1931  042C  0825               	movf	___wmul@product+1,w
  1932  042D  00A1               	movwf	?___wmul+1
  1933  042E  0824               	movf	___wmul@product,w
  1934  042F  00A0               	movwf	?___wmul
  1935  0430                     l353:
  1936  0430  0008               	return
  1937  0431                     __end_of___wmul:
  1938                           
  1939                           	psect	text8
  1940  044F                     __ptext8:	
  1941 ;; *************** function ___bmul *****************
  1942 ;; Defined at:
  1943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1944 ;; Parameters:    Size  Location     Type
  1945 ;;  multiplier      1    wreg     unsigned char 
  1946 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  1947 ;; Auto vars:     Size  Location     Type
  1948 ;;  multiplier      1    3[BANK0 ] unsigned char 
  1949 ;;  product         1    2[BANK0 ] unsigned char 
  1950 ;; Return value:  Size  Location     Type
  1951 ;;                  1    wreg      unsigned char 
  1952 ;; Registers used:
  1953 ;;		wreg, status,2, status,0
  1954 ;; Tracked objects:
  1955 ;;		On entry : 0/0
  1956 ;;		On exit  : 0/0
  1957 ;;		Unchanged: 0/0
  1958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1959 ;;      Params:         0       1       0       0       0
  1960 ;;      Locals:         0       2       0       0       0
  1961 ;;      Temps:          0       1       0       0       0
  1962 ;;      Totals:         0       4       0       0       0
  1963 ;;Total ram usage:        4 bytes
  1964 ;; Hardware stack levels used: 1
  1965 ;; Hardware stack levels required when called: 2
  1966 ;; This function calls:
  1967 ;;		Nothing
  1968 ;; This function is called by:
  1969 ;;		_main
  1970 ;; This function uses a non-reentrant model
  1971 ;;
  1972                           
  1973                           
  1974                           ;psect for function ___bmul
  1975  044F                     ___bmul:
  1976                           
  1977                           ;incstack = 0
  1978                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1979                           ;___bmul@multiplier stored from wreg
  1980  044F  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0450  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0451  00A3               	movwf	___bmul@multiplier
  1983  0452                     l1383:
  1984  0452  01A2               	clrf	___bmul@product
  1985  0453                     l1385:
  1986  0453  1C23               	btfss	___bmul@multiplier,0
  1987  0454  2C56               	goto	u521
  1988  0455  2C57               	goto	u520
  1989  0456                     u521:
  1990  0456  2C5B               	goto	l1389
  1991  0457                     u520:
  1992  0457                     l1387:
  1993  0457  0820               	movf	___bmul@multiplicand,w
  1994  0458  00A1               	movwf	??___bmul
  1995  0459  0821               	movf	??___bmul,w
  1996  045A  07A2               	addwf	___bmul@product,f
  1997  045B                     l1389:
  1998  045B  1003               	clrc
  1999  045C  0DA0               	rlf	___bmul@multiplicand,f
  2000  045D                     l1391:
  2001  045D  1003               	clrc
  2002  045E  0CA3               	rrf	___bmul@multiplier,f
  2003  045F  0823               	movf	___bmul@multiplier,w
  2004  0460  1D03               	btfss	3,2
  2005  0461  2C63               	goto	u531
  2006  0462  2C64               	goto	u530
  2007  0463                     u531:
  2008  0463  2C53               	goto	l1385
  2009  0464                     u530:
  2010  0464                     l1393:
  2011  0464  0822               	movf	___bmul@product,w
  2012  0465                     l377:
  2013  0465  0008               	return
  2014  0466                     __end_of___bmul:
  2015                           
  2016                           	psect	text9
  2017  0363                     __ptext9:	
  2018 ;; *************** function ___awdiv *****************
  2019 ;; Defined at:
  2020 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\awdiv.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;  divisor         2    6[BANK0 ] int 
  2023 ;;  dividend        2    8[BANK0 ] int 
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  quotient        2   13[BANK0 ] int 
  2026 ;;  sign            1   12[BANK0 ] unsigned char 
  2027 ;;  counter         1   11[BANK0 ] unsigned char 
  2028 ;; Return value:  Size  Location     Type
  2029 ;;                  2    6[BANK0 ] int 
  2030 ;; Registers used:
  2031 ;;		wreg, status,2, status,0
  2032 ;; Tracked objects:
  2033 ;;		On entry : 0/0
  2034 ;;		On exit  : 0/0
  2035 ;;		Unchanged: 0/0
  2036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2037 ;;      Params:         0       4       0       0       0
  2038 ;;      Locals:         0       4       0       0       0
  2039 ;;      Temps:          0       1       0       0       0
  2040 ;;      Totals:         0       9       0       0       0
  2041 ;;Total ram usage:        9 bytes
  2042 ;; Hardware stack levels used: 1
  2043 ;; Hardware stack levels required when called: 2
  2044 ;; This function calls:
  2045 ;;		Nothing
  2046 ;; This function is called by:
  2047 ;;		_main
  2048 ;; This function uses a non-reentrant model
  2049 ;;
  2050                           
  2051                           
  2052                           ;psect for function ___awdiv
  2053  0363                     ___awdiv:
  2054  0363                     l1397:	
  2055                           ;incstack = 0
  2056                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2057                           
  2058  0363  1283               	bcf	3,5	;RP0=0, select bank0
  2059  0364  1303               	bcf	3,6	;RP1=0, select bank0
  2060  0365  01AC               	clrf	___awdiv@sign
  2061  0366                     l1399:
  2062  0366  1FA7               	btfss	___awdiv@divisor+1,7
  2063  0367  2B69               	goto	u541
  2064  0368  2B6A               	goto	u540
  2065  0369                     u541:
  2066  0369  2B71               	goto	l1405
  2067  036A                     u540:
  2068  036A                     l1401:
  2069  036A  09A6               	comf	___awdiv@divisor,f
  2070  036B  09A7               	comf	___awdiv@divisor+1,f
  2071  036C  0AA6               	incf	___awdiv@divisor,f
  2072  036D  1903               	skipnz
  2073  036E  0AA7               	incf	___awdiv@divisor+1,f
  2074  036F                     l1403:
  2075  036F  01AC               	clrf	___awdiv@sign
  2076  0370  0AAC               	incf	___awdiv@sign,f
  2077  0371                     l1405:
  2078  0371  1FA9               	btfss	___awdiv@dividend+1,7
  2079  0372  2B74               	goto	u551
  2080  0373  2B75               	goto	u550
  2081  0374                     u551:
  2082  0374  2B7E               	goto	l1411
  2083  0375                     u550:
  2084  0375                     l1407:
  2085  0375  09A8               	comf	___awdiv@dividend,f
  2086  0376  09A9               	comf	___awdiv@dividend+1,f
  2087  0377  0AA8               	incf	___awdiv@dividend,f
  2088  0378  1903               	skipnz
  2089  0379  0AA9               	incf	___awdiv@dividend+1,f
  2090  037A                     l1409:
  2091  037A  3001               	movlw	1
  2092  037B  00AA               	movwf	??___awdiv
  2093  037C  082A               	movf	??___awdiv,w
  2094  037D  06AC               	xorwf	___awdiv@sign,f
  2095  037E                     l1411:
  2096  037E  01AD               	clrf	___awdiv@quotient
  2097  037F  01AE               	clrf	___awdiv@quotient+1
  2098  0380                     l1413:
  2099  0380  0826               	movf	___awdiv@divisor,w
  2100  0381  0427               	iorwf	___awdiv@divisor+1,w
  2101  0382  1903               	btfsc	3,2
  2102  0383  2B85               	goto	u561
  2103  0384  2B86               	goto	u560
  2104  0385                     u561:
  2105  0385  2BBD               	goto	l1433
  2106  0386                     u560:
  2107  0386                     l1415:
  2108  0386  01AB               	clrf	___awdiv@counter
  2109  0387  0AAB               	incf	___awdiv@counter,f
  2110  0388  2B94               	goto	l1421
  2111  0389                     l1417:
  2112  0389  3001               	movlw	1
  2113  038A                     u575:
  2114  038A  1003               	clrc
  2115  038B  0DA6               	rlf	___awdiv@divisor,f
  2116  038C  0DA7               	rlf	___awdiv@divisor+1,f
  2117  038D  3EFF               	addlw	-1
  2118  038E  1D03               	skipz
  2119  038F  2B8A               	goto	u575
  2120  0390                     l1419:
  2121  0390  3001               	movlw	1
  2122  0391  00AA               	movwf	??___awdiv
  2123  0392  082A               	movf	??___awdiv,w
  2124  0393  07AB               	addwf	___awdiv@counter,f
  2125  0394                     l1421:
  2126  0394  1FA7               	btfss	___awdiv@divisor+1,7
  2127  0395  2B97               	goto	u581
  2128  0396  2B98               	goto	u580
  2129  0397                     u581:
  2130  0397  2B89               	goto	l1417
  2131  0398                     u580:
  2132  0398                     l1423:
  2133  0398  3001               	movlw	1
  2134  0399                     u595:
  2135  0399  1003               	clrc
  2136  039A  0DAD               	rlf	___awdiv@quotient,f
  2137  039B  0DAE               	rlf	___awdiv@quotient+1,f
  2138  039C  3EFF               	addlw	-1
  2139  039D  1D03               	skipz
  2140  039E  2B99               	goto	u595
  2141  039F  0827               	movf	___awdiv@divisor+1,w
  2142  03A0  0229               	subwf	___awdiv@dividend+1,w
  2143  03A1  1D03               	skipz
  2144  03A2  2BA5               	goto	u605
  2145  03A3  0826               	movf	___awdiv@divisor,w
  2146  03A4  0228               	subwf	___awdiv@dividend,w
  2147  03A5                     u605:
  2148  03A5  1C03               	skipc
  2149  03A6  2BA8               	goto	u601
  2150  03A7  2BA9               	goto	u600
  2151  03A8                     u601:
  2152  03A8  2BB0               	goto	l1429
  2153  03A9                     u600:
  2154  03A9                     l1425:
  2155  03A9  0826               	movf	___awdiv@divisor,w
  2156  03AA  02A8               	subwf	___awdiv@dividend,f
  2157  03AB  0827               	movf	___awdiv@divisor+1,w
  2158  03AC  1C03               	skipc
  2159  03AD  03A9               	decf	___awdiv@dividend+1,f
  2160  03AE  02A9               	subwf	___awdiv@dividend+1,f
  2161  03AF                     l1427:
  2162  03AF  142D               	bsf	___awdiv@quotient,0
  2163  03B0                     l1429:
  2164  03B0  3001               	movlw	1
  2165  03B1                     u615:
  2166  03B1  1003               	clrc
  2167  03B2  0CA7               	rrf	___awdiv@divisor+1,f
  2168  03B3  0CA6               	rrf	___awdiv@divisor,f
  2169  03B4  3EFF               	addlw	-1
  2170  03B5  1D03               	skipz
  2171  03B6  2BB1               	goto	u615
  2172  03B7                     l1431:
  2173  03B7  3001               	movlw	1
  2174  03B8  02AB               	subwf	___awdiv@counter,f
  2175  03B9  1D03               	btfss	3,2
  2176  03BA  2BBC               	goto	u621
  2177  03BB  2BBD               	goto	u620
  2178  03BC                     u621:
  2179  03BC  2B98               	goto	l1423
  2180  03BD                     u620:
  2181  03BD                     l1433:
  2182  03BD  082C               	movf	___awdiv@sign,w
  2183  03BE  1903               	btfsc	3,2
  2184  03BF  2BC1               	goto	u631
  2185  03C0  2BC2               	goto	u630
  2186  03C1                     u631:
  2187  03C1  2BC7               	goto	l1437
  2188  03C2                     u630:
  2189  03C2                     l1435:
  2190  03C2  09AD               	comf	___awdiv@quotient,f
  2191  03C3  09AE               	comf	___awdiv@quotient+1,f
  2192  03C4  0AAD               	incf	___awdiv@quotient,f
  2193  03C5  1903               	skipnz
  2194  03C6  0AAE               	incf	___awdiv@quotient+1,f
  2195  03C7                     l1437:
  2196  03C7  082E               	movf	___awdiv@quotient+1,w
  2197  03C8  00A7               	movwf	?___awdiv+1
  2198  03C9  082D               	movf	___awdiv@quotient,w
  2199  03CA  00A6               	movwf	?___awdiv
  2200  03CB                     l504:
  2201  03CB  0008               	return
  2202  03CC                     __end_of___awdiv:
  2203                           
  2204                           	psect	text10
  2205  0205                     __ptext10:	
  2206 ;; *************** function _isr *****************
  2207 ;; Defined at:
  2208 ;;		line 106 in file "main.c"
  2209 ;; Parameters:    Size  Location     Type
  2210 ;;		None
  2211 ;; Auto vars:     Size  Location     Type
  2212 ;;		None
  2213 ;; Return value:  Size  Location     Type
  2214 ;;                  1    wreg      void 
  2215 ;; Registers used:
  2216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2217 ;; Tracked objects:
  2218 ;;		On entry : 0/0
  2219 ;;		On exit  : 0/0
  2220 ;;		Unchanged: 0/0
  2221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2222 ;;      Params:         0       0       0       0       0
  2223 ;;      Locals:         0       0       0       0       0
  2224 ;;      Temps:          7       0       0       0       0
  2225 ;;      Totals:         7       0       0       0       0
  2226 ;;Total ram usage:        7 bytes
  2227 ;; Hardware stack levels used: 1
  2228 ;; Hardware stack levels required when called: 1
  2229 ;; This function calls:
  2230 ;;		i1___bmul
  2231 ;; This function is called by:
  2232 ;;		Interrupt level 1
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function _isr
  2238  0205                     _isr:
  2239  0205                     i1l1493:
  2240                           
  2241                           ;main.c: 107:     if (INTCONbits.T0IF){
  2242  0205  1D0B               	btfss	11,2	;volatile
  2243  0206  2A08               	goto	u70_21
  2244  0207  2A09               	goto	u70_20
  2245  0208                     u70_21:
  2246  0208  2A10               	goto	i1l1499
  2247  0209                     u70_20:
  2248  0209                     i1l1495:
  2249                           
  2250                           ;main.c: 108:         c++;
  2251  0209  3001               	movlw	1
  2252  020A  00F4               	movwf	??_isr
  2253  020B  0874               	movf	??_isr,w
  2254  020C  1283               	bcf	3,5	;RP0=0, select bank0
  2255  020D  1303               	bcf	3,6	;RP1=0, select bank0
  2256  020E  07C2               	addwf	_c,f
  2257  020F                     i1l1497:
  2258                           
  2259                           ;main.c: 109:         INTCONbits.T0IF = 0;
  2260  020F  110B               	bcf	11,2	;volatile
  2261  0210                     i1l1499:
  2262                           
  2263                           ;main.c: 111:     if (TXIF == 1){
  2264  0210  1283               	bcf	3,5	;RP0=0, select bank0
  2265  0211  1303               	bcf	3,6	;RP1=0, select bank0
  2266  0212  1E0C               	btfss	12,4	;volatile
  2267  0213  2A15               	goto	u71_21
  2268  0214  2A16               	goto	u71_20
  2269  0215                     u71_21:
  2270  0215  2A89               	goto	i1l206
  2271  0216                     u71_20:
  2272  0216  2A5E               	goto	i1l1539
  2273  0217                     i1l1503:
  2274                           
  2275                           ;main.c: 114:                 TXREG = unit + 48;
  2276  0217  083F               	movf	_unit,w
  2277  0218  3E30               	addlw	48
  2278  0219  0099               	movwf	25	;volatile
  2279  021A                     i1l1505:
  2280                           
  2281                           ;main.c: 115:                 FZERO = 1;
  2282  021A  01B9               	clrf	_FZERO
  2283  021B  0AB9               	incf	_FZERO,f
  2284                           
  2285                           ;main.c: 116:                 break;
  2286  021C  2A88               	goto	i1l209
  2287  021D                     i1l1507:
  2288                           
  2289                           ;main.c: 118:                 TXREG = 0b101110;
  2290  021D  302E               	movlw	46
  2291  021E  0099               	movwf	25	;volatile
  2292                           
  2293                           ;main.c: 119:                 FZERO = 2;
  2294  021F  3002               	movlw	2
  2295  0220  00F4               	movwf	??_isr
  2296  0221  0874               	movf	??_isr,w
  2297  0222  00B9               	movwf	_FZERO
  2298                           
  2299                           ;main.c: 120:                 break;
  2300  0223  2A88               	goto	i1l209
  2301  0224                     i1l1509:
  2302                           
  2303                           ;main.c: 122:                 TXREG = dozen + 48;
  2304  0224  083B               	movf	_dozen,w
  2305  0225  3E30               	addlw	48
  2306  0226  0099               	movwf	25	;volatile
  2307  0227                     i1l1511:
  2308                           
  2309                           ;main.c: 123:                 FZERO = 3;
  2310  0227  3003               	movlw	3
  2311  0228  00F4               	movwf	??_isr
  2312  0229  0874               	movf	??_isr,w
  2313  022A  00B9               	movwf	_FZERO
  2314                           
  2315                           ;main.c: 124:                 break;
  2316  022B  2A88               	goto	i1l209
  2317  022C                     i1l1513:
  2318                           
  2319                           ;main.c: 126:                 TXREG = dozen_1 + 48;
  2320  022C  083A               	movf	_dozen_1,w
  2321  022D  3E30               	addlw	48
  2322  022E  0099               	movwf	25	;volatile
  2323  022F                     i1l1515:
  2324                           
  2325                           ;main.c: 127:                 FZERO = 4;
  2326  022F  3004               	movlw	4
  2327  0230  00F4               	movwf	??_isr
  2328  0231  0874               	movf	??_isr,w
  2329  0232  00B9               	movwf	_FZERO
  2330                           
  2331                           ;main.c: 128:                 break;
  2332  0233  2A88               	goto	i1l209
  2333  0234                     i1l1517:
  2334                           
  2335                           ;main.c: 130:                 TXREG = 0b101101;
  2336  0234  302D               	movlw	45
  2337  0235  0099               	movwf	25	;volatile
  2338                           
  2339                           ;main.c: 131:                 FZERO = 5;
  2340  0236  3005               	movlw	5
  2341  0237  00F4               	movwf	??_isr
  2342  0238  0874               	movf	??_isr,w
  2343  0239  00B9               	movwf	_FZERO
  2344                           
  2345                           ;main.c: 132:                 break;
  2346  023A  2A88               	goto	i1l209
  2347  023B                     i1l1519:
  2348                           
  2349                           ;main.c: 134:                 TXREG = unit_1_change + 48;
  2350  023B  083E               	movf	_unit_1_change,w
  2351  023C  3E30               	addlw	48
  2352  023D  0099               	movwf	25	;volatile
  2353  023E                     i1l1521:
  2354                           
  2355                           ;main.c: 135:                 FZERO = 6;
  2356  023E  3006               	movlw	6
  2357  023F  00F4               	movwf	??_isr
  2358  0240  0874               	movf	??_isr,w
  2359  0241  00B9               	movwf	_FZERO
  2360                           
  2361                           ;main.c: 136:                 break;
  2362  0242  2A88               	goto	i1l209
  2363  0243                     i1l1523:
  2364                           
  2365                           ;main.c: 138:                 TXREG = 0b101110;
  2366  0243  302E               	movlw	46
  2367  0244  0099               	movwf	25	;volatile
  2368                           
  2369                           ;main.c: 139:                 FZERO = 7;
  2370  0245  3007               	movlw	7
  2371  0246  00F4               	movwf	??_isr
  2372  0247  0874               	movf	??_isr,w
  2373  0248  00B9               	movwf	_FZERO
  2374                           
  2375                           ;main.c: 140:                 break;
  2376  0249  2A88               	goto	i1l209
  2377  024A                     i1l1525:
  2378                           
  2379                           ;main.c: 142:                 TXREG = k0 + 48;
  2380  024A  083D               	movf	_k0,w
  2381  024B  3E30               	addlw	48
  2382  024C  0099               	movwf	25	;volatile
  2383  024D                     i1l1527:
  2384                           
  2385                           ;main.c: 143:                 FZERO = 8;
  2386  024D  3008               	movlw	8
  2387  024E  00F4               	movwf	??_isr
  2388  024F  0874               	movf	??_isr,w
  2389  0250  00B9               	movwf	_FZERO
  2390                           
  2391                           ;main.c: 144:                 break;
  2392  0251  2A88               	goto	i1l209
  2393  0252                     i1l1529:
  2394                           
  2395                           ;main.c: 146:                 TXREG = k1 + 48;
  2396  0252  083C               	movf	_k1,w
  2397  0253  3E30               	addlw	48
  2398  0254  0099               	movwf	25	;volatile
  2399  0255                     i1l1531:
  2400                           
  2401                           ;main.c: 147:                 FZERO = 9;
  2402  0255  3009               	movlw	9
  2403  0256  00F4               	movwf	??_isr
  2404  0257  0874               	movf	??_isr,w
  2405  0258  00B9               	movwf	_FZERO
  2406                           
  2407                           ;main.c: 148:                 break;
  2408  0259  2A88               	goto	i1l209
  2409  025A                     i1l1533:
  2410                           
  2411                           ;main.c: 150:                 TXREG = 0b1101;
  2412  025A  300D               	movlw	13
  2413  025B  0099               	movwf	25	;volatile
  2414  025C                     i1l1535:
  2415                           
  2416                           ;main.c: 151:                 FZERO = 0;
  2417  025C  01B9               	clrf	_FZERO
  2418                           
  2419                           ;main.c: 152:                 break;
  2420  025D  2A88               	goto	i1l209
  2421  025E                     i1l1539:
  2422  025E  0839               	movf	_FZERO,w
  2423  025F  00F4               	movwf	??_isr
  2424  0260  01F5               	clrf	??_isr+1
  2425  0261  1BF4               	btfsc	??_isr,7
  2426  0262  03F5               	decf	??_isr+1,f
  2427                           
  2428                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2429                           ; Switch size 1, requested type "simple"
  2430                           ; Number of cases is 1, Range of values is 0 to 0
  2431                           ; switch strategies available:
  2432                           ; Name         Instructions Cycles
  2433                           ; simple_byte            4     3 (average)
  2434                           ; direct_byte           11     8 (fixed)
  2435                           ; jumptable            260     6 (fixed)
  2436                           ;	Chosen strategy is simple_byte
  2437  0263  0875               	movf	??_isr+1,w
  2438  0264  3A00               	xorlw	0	; case 0
  2439  0265  1903               	skipnz
  2440  0266  2A68               	goto	i1l1639
  2441  0267  2A88               	goto	i1l209
  2442  0268                     i1l1639:
  2443                           
  2444                           ; Switch size 1, requested type "simple"
  2445                           ; Number of cases is 10, Range of values is 0 to 9
  2446                           ; switch strategies available:
  2447                           ; Name         Instructions Cycles
  2448                           ; simple_byte           31    16 (average)
  2449                           ; direct_byte           38     8 (fixed)
  2450                           ; jumptable            260     6 (fixed)
  2451                           ;	Chosen strategy is simple_byte
  2452  0268  0874               	movf	??_isr,w
  2453  0269  3A00               	xorlw	0	; case 0
  2454  026A  1903               	skipnz
  2455  026B  2A17               	goto	i1l1503
  2456  026C  3A01               	xorlw	1	; case 1
  2457  026D  1903               	skipnz
  2458  026E  2A1D               	goto	i1l1507
  2459  026F  3A03               	xorlw	3	; case 2
  2460  0270  1903               	skipnz
  2461  0271  2A24               	goto	i1l1509
  2462  0272  3A01               	xorlw	1	; case 3
  2463  0273  1903               	skipnz
  2464  0274  2A2C               	goto	i1l1513
  2465  0275  3A07               	xorlw	7	; case 4
  2466  0276  1903               	skipnz
  2467  0277  2A34               	goto	i1l1517
  2468  0278  3A01               	xorlw	1	; case 5
  2469  0279  1903               	skipnz
  2470  027A  2A3B               	goto	i1l1519
  2471  027B  3A03               	xorlw	3	; case 6
  2472  027C  1903               	skipnz
  2473  027D  2A43               	goto	i1l1523
  2474  027E  3A01               	xorlw	1	; case 7
  2475  027F  1903               	skipnz
  2476  0280  2A4A               	goto	i1l1525
  2477  0281  3A0F               	xorlw	15	; case 8
  2478  0282  1903               	skipnz
  2479  0283  2A52               	goto	i1l1529
  2480  0284  3A01               	xorlw	1	; case 9
  2481  0285  1903               	skipnz
  2482  0286  2A5A               	goto	i1l1533
  2483  0287  2A88               	goto	i1l209
  2484  0288                     i1l209:
  2485                           
  2486                           ;main.c: 154:     TXIF = 0;
  2487  0288  120C               	bcf	12,4	;volatile
  2488  0289                     i1l206:	
  2489                           ;main.c: 155:     }
  2490                           
  2491                           
  2492                           ;main.c: 156:     if(PIR1bits.RCIF == 1){
  2493  0289  1E8C               	btfss	12,5	;volatile
  2494  028A  2A8C               	goto	u72_21
  2495  028B  2A8D               	goto	u72_20
  2496  028C                     u72_21:
  2497  028C  2B5A               	goto	i1l246
  2498  028D                     u72_20:
  2499  028D                     i1l1541:
  2500                           
  2501                           ;main.c: 157:         if (RCREG == 0x0D){
  2502  028D  300D               	movlw	13
  2503  028E  061A               	xorwf	26,w	;volatile
  2504  028F  1D03               	btfss	3,2
  2505  0290  2A92               	goto	u73_21
  2506  0291  2A93               	goto	u73_20
  2507  0292                     u73_21:
  2508  0292  2A97               	goto	i1l1545
  2509  0293                     u73_20:
  2510  0293                     i1l1543:
  2511                           
  2512                           ;main.c: 158:         PORTB = counter;
  2513  0293  0843               	movf	_counter,w
  2514  0294  0086               	movwf	6	;volatile
  2515                           
  2516                           ;main.c: 159:         PORTD =2;
  2517  0295  3002               	movlw	2
  2518  0296  0088               	movwf	8	;volatile
  2519  0297                     i1l1545:
  2520                           
  2521                           ;main.c: 161:         if (RCREG != 0x0D){
  2522  0297  300D               	movlw	13
  2523  0298  061A               	xorwf	26,w	;volatile
  2524  0299  1903               	btfsc	3,2
  2525  029A  2A9C               	goto	u74_21
  2526  029B  2A9D               	goto	u74_20
  2527  029C                     u74_21:
  2528  029C  2B5A               	goto	i1l246
  2529  029D                     u74_20:
  2530  029D                     i1l1547:
  2531                           
  2532                           ;main.c: 162:         temp_read = RCREG;
  2533  029D  081A               	movf	26,w	;volatile
  2534  029E  00F4               	movwf	??_isr
  2535  029F  0874               	movf	??_isr,w
  2536  02A0  00FC               	movwf	_temp_read
  2537  02A1                     i1l1549:
  2538                           
  2539                           ;main.c: 163:             if(temp_read==48){
  2540  02A1  3030               	movlw	48
  2541  02A2  067C               	xorwf	_temp_read,w
  2542  02A3  1D03               	btfss	3,2
  2543  02A4  2AA6               	goto	u75_21
  2544  02A5  2AA7               	goto	u75_20
  2545  02A6                     u75_21:
  2546  02A6  2AA9               	goto	i1l1553
  2547  02A7                     u75_20:
  2548  02A7                     i1l1551:
  2549                           
  2550                           ;main.c: 164:                 HUGO = 0;
  2551  02A7  01FB               	clrf	_HUGO
  2552                           
  2553                           ;main.c: 165:             }else if(temp_read==49){
  2554  02A8  2B0A               	goto	i1l1589
  2555  02A9                     i1l1553:
  2556  02A9  3031               	movlw	49
  2557  02AA  067C               	xorwf	_temp_read,w
  2558  02AB  1D03               	btfss	3,2
  2559  02AC  2AAE               	goto	u76_21
  2560  02AD  2AAF               	goto	u76_20
  2561  02AE                     u76_21:
  2562  02AE  2AB2               	goto	i1l1557
  2563  02AF                     u76_20:
  2564  02AF                     i1l1555:
  2565                           
  2566                           ;main.c: 166:                 HUGO = 1;
  2567  02AF  01FB               	clrf	_HUGO
  2568  02B0  0AFB               	incf	_HUGO,f
  2569                           
  2570                           ;main.c: 167:             }else if(temp_read==50){
  2571  02B1  2B0A               	goto	i1l1589
  2572  02B2                     i1l1557:
  2573  02B2  3032               	movlw	50
  2574  02B3  067C               	xorwf	_temp_read,w
  2575  02B4  1D03               	btfss	3,2
  2576  02B5  2AB7               	goto	u77_21
  2577  02B6  2AB8               	goto	u77_20
  2578  02B7                     u77_21:
  2579  02B7  2ABD               	goto	i1l1561
  2580  02B8                     u77_20:
  2581  02B8                     i1l1559:
  2582                           
  2583                           ;main.c: 168:                 HUGO = 2;
  2584  02B8  3002               	movlw	2
  2585  02B9  00F4               	movwf	??_isr
  2586  02BA  0874               	movf	??_isr,w
  2587  02BB  00FB               	movwf	_HUGO
  2588                           
  2589                           ;main.c: 169:             }else if(temp_read==51){
  2590  02BC  2B0A               	goto	i1l1589
  2591  02BD                     i1l1561:
  2592  02BD  3033               	movlw	51
  2593  02BE  067C               	xorwf	_temp_read,w
  2594  02BF  1D03               	btfss	3,2
  2595  02C0  2AC2               	goto	u78_21
  2596  02C1  2AC3               	goto	u78_20
  2597  02C2                     u78_21:
  2598  02C2  2AC8               	goto	i1l1565
  2599  02C3                     u78_20:
  2600  02C3                     i1l1563:
  2601                           
  2602                           ;main.c: 170:                 HUGO = 3;
  2603  02C3  3003               	movlw	3
  2604  02C4  00F4               	movwf	??_isr
  2605  02C5  0874               	movf	??_isr,w
  2606  02C6  00FB               	movwf	_HUGO
  2607                           
  2608                           ;main.c: 171:             }else if(temp_read==52){
  2609  02C7  2B0A               	goto	i1l1589
  2610  02C8                     i1l1565:
  2611  02C8  3034               	movlw	52
  2612  02C9  067C               	xorwf	_temp_read,w
  2613  02CA  1D03               	btfss	3,2
  2614  02CB  2ACD               	goto	u79_21
  2615  02CC  2ACE               	goto	u79_20
  2616  02CD                     u79_21:
  2617  02CD  2AD3               	goto	i1l1569
  2618  02CE                     u79_20:
  2619  02CE                     i1l1567:
  2620                           
  2621                           ;main.c: 172:                 HUGO = 4;
  2622  02CE  3004               	movlw	4
  2623  02CF  00F4               	movwf	??_isr
  2624  02D0  0874               	movf	??_isr,w
  2625  02D1  00FB               	movwf	_HUGO
  2626                           
  2627                           ;main.c: 173:             }else if(temp_read==53){
  2628  02D2  2B0A               	goto	i1l1589
  2629  02D3                     i1l1569:
  2630  02D3  3035               	movlw	53
  2631  02D4  067C               	xorwf	_temp_read,w
  2632  02D5  1D03               	btfss	3,2
  2633  02D6  2AD8               	goto	u80_21
  2634  02D7  2AD9               	goto	u80_20
  2635  02D8                     u80_21:
  2636  02D8  2ADE               	goto	i1l1573
  2637  02D9                     u80_20:
  2638  02D9                     i1l1571:
  2639                           
  2640                           ;main.c: 174:                 HUGO = 5;
  2641  02D9  3005               	movlw	5
  2642  02DA  00F4               	movwf	??_isr
  2643  02DB  0874               	movf	??_isr,w
  2644  02DC  00FB               	movwf	_HUGO
  2645                           
  2646                           ;main.c: 175:             }else if(temp_read==54){
  2647  02DD  2B0A               	goto	i1l1589
  2648  02DE                     i1l1573:
  2649  02DE  3036               	movlw	54
  2650  02DF  067C               	xorwf	_temp_read,w
  2651  02E0  1D03               	btfss	3,2
  2652  02E1  2AE3               	goto	u81_21
  2653  02E2  2AE4               	goto	u81_20
  2654  02E3                     u81_21:
  2655  02E3  2AE9               	goto	i1l1577
  2656  02E4                     u81_20:
  2657  02E4                     i1l1575:
  2658                           
  2659                           ;main.c: 176:                 HUGO = 6;
  2660  02E4  3006               	movlw	6
  2661  02E5  00F4               	movwf	??_isr
  2662  02E6  0874               	movf	??_isr,w
  2663  02E7  00FB               	movwf	_HUGO
  2664                           
  2665                           ;main.c: 177:             }else if(temp_read==55){
  2666  02E8  2B0A               	goto	i1l1589
  2667  02E9                     i1l1577:
  2668  02E9  3037               	movlw	55
  2669  02EA  067C               	xorwf	_temp_read,w
  2670  02EB  1D03               	btfss	3,2
  2671  02EC  2AEE               	goto	u82_21
  2672  02ED  2AEF               	goto	u82_20
  2673  02EE                     u82_21:
  2674  02EE  2AF4               	goto	i1l1581
  2675  02EF                     u82_20:
  2676  02EF                     i1l1579:
  2677                           
  2678                           ;main.c: 178:                 HUGO = 7;
  2679  02EF  3007               	movlw	7
  2680  02F0  00F4               	movwf	??_isr
  2681  02F1  0874               	movf	??_isr,w
  2682  02F2  00FB               	movwf	_HUGO
  2683                           
  2684                           ;main.c: 179:             }else if(temp_read==56){
  2685  02F3  2B0A               	goto	i1l1589
  2686  02F4                     i1l1581:
  2687  02F4  3038               	movlw	56
  2688  02F5  067C               	xorwf	_temp_read,w
  2689  02F6  1D03               	btfss	3,2
  2690  02F7  2AF9               	goto	u83_21
  2691  02F8  2AFA               	goto	u83_20
  2692  02F9                     u83_21:
  2693  02F9  2AFF               	goto	i1l1585
  2694  02FA                     u83_20:
  2695  02FA                     i1l1583:
  2696                           
  2697                           ;main.c: 180:                 HUGO = 8;
  2698  02FA  3008               	movlw	8
  2699  02FB  00F4               	movwf	??_isr
  2700  02FC  0874               	movf	??_isr,w
  2701  02FD  00FB               	movwf	_HUGO
  2702                           
  2703                           ;main.c: 181:             }else if(temp_read==57){
  2704  02FE  2B0A               	goto	i1l1589
  2705  02FF                     i1l1585:
  2706  02FF  3039               	movlw	57
  2707  0300  067C               	xorwf	_temp_read,w
  2708  0301  1D03               	btfss	3,2
  2709  0302  2B04               	goto	u84_21
  2710  0303  2B05               	goto	u84_20
  2711  0304                     u84_21:
  2712  0304  2B0A               	goto	i1l235
  2713  0305                     u84_20:
  2714  0305                     i1l1587:
  2715                           
  2716                           ;main.c: 182:                 HUGO = 9;
  2717  0305  3009               	movlw	9
  2718  0306  00F4               	movwf	??_isr
  2719  0307  0874               	movf	??_isr,w
  2720  0308  00FB               	movwf	_HUGO
  2721  0309  2B0A               	goto	i1l1589
  2722  030A                     i1l235:
  2723  030A                     i1l1589:
  2724                           
  2725                           ;main.c: 184:         if (J0 == 1){
  2726  030A  0347               	decf	_J0,w
  2727  030B  1D03               	btfss	3,2
  2728  030C  2B0E               	goto	u85_21
  2729  030D  2B0F               	goto	u85_20
  2730  030E                     u85_21:
  2731  030E  2B1B               	goto	i1l1597
  2732  030F                     u85_20:
  2733  030F                     i1l1591:
  2734                           
  2735                           ;main.c: 185:             counter = HUGO;
  2736  030F  087B               	movf	_HUGO,w
  2737  0310  00F4               	movwf	??_isr
  2738  0311  0874               	movf	??_isr,w
  2739  0312  00C3               	movwf	_counter
  2740                           
  2741                           ;main.c: 186:             unidad = HUGO;
  2742  0313  087B               	movf	_HUGO,w
  2743  0314  00F4               	movwf	??_isr
  2744  0315  0874               	movf	??_isr,w
  2745  0316  00FD               	movwf	_unidad
  2746  0317                     i1l1593:
  2747                           
  2748                           ;main.c: 187:             J0 = 0;
  2749  0317  01C7               	clrf	_J0
  2750  0318                     i1l1595:
  2751                           
  2752                           ;main.c: 188:             J_1 = 1;
  2753  0318  01C6               	clrf	_J_1
  2754  0319  0AC6               	incf	_J_1,f
  2755                           
  2756                           ;main.c: 189:         }
  2757  031A  2B5A               	goto	i1l246
  2758  031B                     i1l1597:
  2759  031B  0346               	decf	_J_1,w
  2760  031C  1D03               	btfss	3,2
  2761  031D  2B1F               	goto	u86_21
  2762  031E  2B20               	goto	u86_20
  2763  031F                     u86_21:
  2764  031F  2B38               	goto	i1l1607
  2765  0320                     u86_20:
  2766  0320                     i1l1599:
  2767                           
  2768                           ;main.c: 191:             counter = (unidad*10)+HUGO;
  2769  0320  300A               	movlw	10
  2770  0321  00F4               	movwf	??_isr
  2771  0322  0874               	movf	??_isr,w
  2772  0323  00F0               	movwf	i1___bmul@multiplicand
  2773  0324  087D               	movf	_unidad,w
  2774  0325  120A  118A  2466  120A  118A  	fcall	i1___bmul
  2775  032A  077B               	addwf	_HUGO,w
  2776  032B  00F5               	movwf	??_isr+1
  2777  032C  0875               	movf	??_isr+1,w
  2778  032D  1283               	bcf	3,5	;RP0=0, select bank0
  2779  032E  1303               	bcf	3,6	;RP1=0, select bank0
  2780  032F  00C3               	movwf	_counter
  2781  0330                     i1l1601:
  2782                           
  2783                           ;main.c: 192:             decathlon = HUGO;
  2784  0330  087B               	movf	_HUGO,w
  2785  0331  00F4               	movwf	??_isr
  2786  0332  0874               	movf	??_isr,w
  2787  0333  00C4               	movwf	_decathlon
  2788  0334                     i1l1603:
  2789                           
  2790                           ;main.c: 193:             J_1 = 0;
  2791  0334  01C6               	clrf	_J_1
  2792  0335                     i1l1605:
  2793                           
  2794                           ;main.c: 194:             J_2_dontpayenough = 1;
  2795  0335  01C5               	clrf	_J_2_dontpayenough
  2796  0336  0AC5               	incf	_J_2_dontpayenough,f
  2797                           
  2798                           ;main.c: 195:         }
  2799  0337  2B5A               	goto	i1l246
  2800  0338                     i1l1607:
  2801  0338  0345               	decf	_J_2_dontpayenough,w
  2802  0339  1D03               	btfss	3,2
  2803  033A  2B3C               	goto	u87_21
  2804  033B  2B3D               	goto	u87_20
  2805  033C                     u87_21:
  2806  033C  2B5A               	goto	i1l221
  2807  033D                     u87_20:
  2808  033D                     i1l1609:
  2809                           
  2810                           ;main.c: 197:             counter = (unidad*100)+(decathlon*10)+HUGO;
  2811  033D  300A               	movlw	10
  2812  033E  00F4               	movwf	??_isr
  2813  033F  0874               	movf	??_isr,w
  2814  0340  00F0               	movwf	i1___bmul@multiplicand
  2815  0341  0844               	movf	_decathlon,w
  2816  0342  120A  118A  2466  120A  118A  	fcall	i1___bmul
  2817  0347  00F5               	movwf	??_isr+1
  2818  0348  3064               	movlw	100
  2819  0349  00F6               	movwf	??_isr+2
  2820  034A  0876               	movf	??_isr+2,w
  2821  034B  00F0               	movwf	i1___bmul@multiplicand
  2822  034C  087D               	movf	_unidad,w
  2823  034D  120A  118A  2466  120A  118A  	fcall	i1___bmul
  2824  0352  0775               	addwf	??_isr+1,w
  2825  0353  077B               	addwf	_HUGO,w
  2826  0354  00F7               	movwf	??_isr+3
  2827  0355  0877               	movf	??_isr+3,w
  2828  0356  1283               	bcf	3,5	;RP0=0, select bank0
  2829  0357  1303               	bcf	3,6	;RP1=0, select bank0
  2830  0358  00C3               	movwf	_counter
  2831  0359  2B34               	goto	i1l1603
  2832  035A                     i1l221:	
  2833                           ;main.c: 201:         }}
  2834                           
  2835  035A                     i1l246:
  2836  035A  087A               	movf	??_isr+6,w
  2837  035B  008A               	movwf	10
  2838  035C  0879               	movf	??_isr+5,w
  2839  035D  0084               	movwf	4
  2840  035E  0E78               	swapf	??_isr+4,w
  2841  035F  0083               	movwf	3
  2842  0360  0EFE               	swapf	btemp,f
  2843  0361  0E7E               	swapf	btemp,w
  2844  0362  0009               	retfie
  2845  0363                     __end_of_isr:
  2846                           
  2847                           	psect	intentry
  2848  0004                     __pintentry:	
  2849                           ;incstack = 0
  2850                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2851                           
  2852  0004                     interrupt_function:
  2853  007E                     saved_w	set	btemp
  2854  0004  00FE               	movwf	btemp
  2855  0005  0E03               	swapf	3,w
  2856  0006  00F8               	movwf	??_isr+4
  2857  0007  0804               	movf	4,w
  2858  0008  00F9               	movwf	??_isr+5
  2859  0009  080A               	movf	10,w
  2860  000A  00FA               	movwf	??_isr+6
  2861  000B  120A  118A  2A05   	ljmp	_isr
  2862                           
  2863                           	psect	text11
  2864  0466                     __ptext11:	
  2865 ;; *************** function i1___bmul *****************
  2866 ;; Defined at:
  2867 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  multiplier      1    wreg     unsigned char 
  2870 ;;  multiplicand    1    0[COMMON] unsigned char 
  2871 ;; Auto vars:     Size  Location     Type
  2872 ;;  multiplier      1    3[COMMON] unsigned char 
  2873 ;;  product         1    2[COMMON] unsigned char 
  2874 ;; Return value:  Size  Location     Type
  2875 ;;                  1    wreg      unsigned char 
  2876 ;; Registers used:
  2877 ;;		wreg, status,2, status,0
  2878 ;; Tracked objects:
  2879 ;;		On entry : 0/0
  2880 ;;		On exit  : 0/0
  2881 ;;		Unchanged: 0/0
  2882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2883 ;;      Params:         1       0       0       0       0
  2884 ;;      Locals:         2       0       0       0       0
  2885 ;;      Temps:          1       0       0       0       0
  2886 ;;      Totals:         4       0       0       0       0
  2887 ;;Total ram usage:        4 bytes
  2888 ;; Hardware stack levels used: 1
  2889 ;; This function calls:
  2890 ;;		Nothing
  2891 ;; This function is called by:
  2892 ;;		_isr
  2893 ;; This function uses a non-reentrant model
  2894 ;;
  2895                           
  2896                           
  2897                           ;psect for function i1___bmul
  2898  0466                     i1___bmul:
  2899                           
  2900                           ;incstack = 0
  2901                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  2902                           ;i1___bmul@multiplier stored from wreg
  2903  0466  00F3               	movwf	i1___bmul@multiplier
  2904  0467                     i1l1441:
  2905  0467  01F2               	clrf	i1___bmul@product
  2906  0468                     i1l1443:
  2907  0468  1C73               	btfss	i1___bmul@multiplier,0
  2908  0469  2C6B               	goto	u64_21
  2909  046A  2C6C               	goto	u64_20
  2910  046B                     u64_21:
  2911  046B  2C70               	goto	i1l1447
  2912  046C                     u64_20:
  2913  046C                     i1l1445:
  2914  046C  0870               	movf	i1___bmul@multiplicand,w
  2915  046D  00F1               	movwf	??i1___bmul
  2916  046E  0871               	movf	??i1___bmul,w
  2917  046F  07F2               	addwf	i1___bmul@product,f
  2918  0470                     i1l1447:
  2919  0470  1003               	clrc
  2920  0471  0DF0               	rlf	i1___bmul@multiplicand,f
  2921  0472                     i1l1449:
  2922  0472  1003               	clrc
  2923  0473  0CF3               	rrf	i1___bmul@multiplier,f
  2924  0474  0873               	movf	i1___bmul@multiplier,w
  2925  0475  1D03               	btfss	3,2
  2926  0476  2C78               	goto	u65_21
  2927  0477  2C79               	goto	u65_20
  2928  0478                     u65_21:
  2929  0478  2C68               	goto	i1l1443
  2930  0479                     u65_20:
  2931  0479                     i1l1451:
  2932  0479  0872               	movf	i1___bmul@product,w
  2933  047A                     i1l377:
  2934  047A  0008               	return
  2935  047B                     __end_ofi1___bmul:
  2936  007E                     btemp	set	126	;btemp
  2937  007E                     wtemp0	set	126
  2938                           
  2939                           	psect	config
  2940                           
  2941                           ;Config register CONFIG1 @ 0x2007
  2942                           ;	Oscillator Selection bits
  2943                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2944                           ;	Watchdog Timer Enable bit
  2945                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2946                           ;	Power-up Timer Enable bit
  2947                           ;	PWRTE = OFF, PWRT disabled
  2948                           ;	RE3/MCLR pin function select bit
  2949                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2950                           ;	Code Protection bit
  2951                           ;	CP = OFF, Program memory code protection is disabled
  2952                           ;	Data Code Protection bit
  2953                           ;	CPD = OFF, Data memory code protection is disabled
  2954                           ;	Brown Out Reset Selection bits
  2955                           ;	BOREN = OFF, BOR disabled
  2956                           ;	Internal External Switchover bit
  2957                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2958                           ;	Fail-Safe Clock Monitor Enabled bit
  2959                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2960                           ;	Low Voltage Programming Enable bit
  2961                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2962                           ;	In-Circuit Debugger Mode bit
  2963                           ;	DEBUG = 0x1, unprogrammed default
  2964  2007                     	org	8199
  2965  2007  20D4               	dw	8404
  2966                           
  2967                           ;Config register CONFIG2 @ 0x2008
  2968                           ;	Brown-out Reset Selection bit
  2969                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2970                           ;	Flash Program Memory Self Write Enable bits
  2971                           ;	WRT = OFF, Write protection off
  2972  2008                     	org	8200
  2973  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         17
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     25      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1___bmul

Critical Paths under _main in BANK0

    _main->___awdiv
    _initCONFIG->_spiInit
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0    3494
                                             15 BANK0     10    10      0
                            ___awdiv
                             ___bmul
                             ___wmul
                         _initCONFIG
                           _initTMR0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTMR0                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initCONFIG                                           0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    1004
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___bmul                                               4     3      1     546
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1516
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  7     7      0     170
                                              4 COMMON     7     7      0
                           i1___bmul
 ---------------------------------------------------------------------------------
 (4) i1___bmul                                             4     3      1     170
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___wmul (ARG)
   ___bmul
   ___wmul
   _initCONFIG
     _spiInit
   _initTMR0
   _spiRead
     _spiReceiveWait
   _spiWrite

 _isr (ROOT)
   i1___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      29       5       51.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 04 11:58:24 2021

                      _c 0042           ___bmul@product 0022              _SSPSTATbits 0094  
                     _J0 0047                       l61 0449                       l62 044E  
                     l71 049C                       l65 0490                       l68 0496  
                     l79 048F                       _k0 003D                       _k1 003C  
           ___awdiv@sign 002C      ___wmul@multiplicand 0022                      l252 0486  
                    l351 0418                      l504 03CB                      l353 0430  
                    l249 0409                      l377 0465                      _RE0 0048  
                    _RE1 0049                      u510 042C                      u511 042B  
                    _J_1 0046                      u600 03A9                      u520 0457  
                    u601 03A8                      u521 0456                      u505 0420  
                    u530 0464                      u531 0463                      u620 03BD  
                    u540 036A                      u460 043D                      u621 03BC  
                    u605 03A5                      u541 0369                      u461 043C  
                    u630 03C2                      u550 0375                      u470 0496  
                    u631 03C1                      u615 03B1                      u551 0374  
                    u471 0495                      u560 0386                      u480 0412  
                    u561 0385                      u481 0411                      u580 0398  
                    u660 0058                      u581 0397                      u661 0057  
                    u670 006D                      u575 038A                      u495 0419  
                    u671 006C                      u680 01F0                      u681 01EF  
                    u690 01FD                      u595 0399                      u691 01FC  
                    u907 008E                      u887 0045                      u897 007F  
                    _isr 0205                      _var 0048                      fsr0 0004  
                   l1301 0441                     l1303 0443                     l1311 0487  
                   l1401 036A                     l1305 0448                     l1321 03DA  
                   l1313 048C                     l1411 037E                     l1403 036F  
                   l1331 03E2                     l1323 03DC                     l1307 0490  
                   l1421 0394                     l1413 0380                     l1405 0371  
                   l1341 03E7                     l1333 03E3                     l1325 03DD  
                   l1317 03CC                     l1309 049A                     l1431 03B7  
                   l1423 0398                     l1415 0386                     l1407 0375  
                   l1351 03F4                     l1343 03E8                     l1335 03E4  
                   l1327 03DE                     l1319 03D2                     l1425 03A9  
                   l1417 0389                     l1433 03BD                     l1409 037A  
                   l1361 03FD                     l1353 03F7                     l1345 03EB  
                   l1337 03E5                     l1329 03E1                     l1435 03C2  
                   l1427 03AF                     l1419 0390                     l1371 040E  
                   l1363 0400                     l1355 03F8                     l1347 03EC  
                   l1339 03E6                     l1437 03C7                     l1429 03B0  
                   l1373 0412                     l1357 03F9                     l1349 03F3  
                   l1365 047B                     l1461 0049                     l1391 045D  
                   l1383 0452                     l1375 041F                     l1359 03FC  
                   l1367 0482                     l1471 006D                     l1463 0051  
                   l1455 0032                     l1393 0464                     l1385 0453  
                   l1377 0426                     l1369 040A                     l1297 0434  
                   l1481 01EC                     l1473 0077                     l1465 0058  
                   l1457 003C                     l1387 0457                     l1379 042C  
                   l1299 043D                     l1491 01FE                     l1483 01F0  
                   l1475 0079                     l1467 0062                     l1459 003F  
                   l1397 0363                     l1389 045B                     l1485 01F3  
                   l1477 0083                     l1469 0067                     l1399 0366  
                   l1487 01F7                     l1479 0086                     l1489 01FD  
                   ?_isr 0070                     _HUGO 007B                     _TMR0 0001  
                   _TXIE 0464                     _TXIF 0064                     _main 0032  
                   _var0 0040                     _var1 0041                     _unit 003F  
                   btemp 007E                     start 000E        ___bmul@multiplier 0023  
                  ??_isr 0074                    ?_main 0070          __end_of___awdiv 03CC  
                  _ANSEL 0188          ___awdiv@divisor 0026                    i1l221 035A  
                  i1l206 0289                    i1l209 0288                    i1l235 030A  
                  i1l246 035A                    i1l377 047A                    _FZERO 0039  
        ___awdiv@counter 002B                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u70_20 0209  
                  u70_21 0208                    u71_20 0216                    u71_21 0215  
                  u64_20 046C                    u80_20 02D9                    u72_20 028D  
                  u64_21 046B                    u80_21 02D8                    u72_21 028C  
                  u65_20 0479                    u81_20 02E4                    u73_20 0293  
                  u65_21 0478                    u81_21 02E3                    u73_21 0292  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    u82_20 02EF  
                  u74_20 029D                    u82_21 02EE                    u74_21 029C  
                  u83_20 02FA                    u75_20 02A7                    u83_21 02F9  
                  u75_21 02A6                    u84_20 0305                    u76_20 02AF  
                  u84_21 0304                    u76_21 02AE                    u85_20 030F  
                  u77_20 02B8                    u85_21 030E                    u77_21 02B7  
                  u86_20 0320                    u78_20 02C3                    u86_21 031F  
                  u78_21 02C2                    u87_20 033D                    u79_20 02CE  
                  u87_21 033C                    u79_21 02CD                    _TXREG 0019  
                  _dozen 003B         __end_ofi1___bmul 047B                    pclath 000A  
        __end_of_spiInit 044F          __end_of_spiRead 0490                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 0205  
                 ??_main 002F        _J_2_dontpayenough 0045         ___awdiv@dividend 0028  
                 _ANSELH 0189                   i1l1511 0227                   i1l1503 0217  
                 i1l1441 0467                   i1l1601 0330                   i1l1521 023E  
                 i1l1513 022C                   i1l1505 021A                   i1l1451 0479  
                 i1l1443 0468                   i1l1603 0334                   i1l1531 0255  
                 i1l1523 0243                   i1l1515 022F                   i1l1507 021D  
                 i1l1445 046C                   i1l1605 0335                   i1l1541 028D  
                 i1l1533 025A                   i1l1525 024A                   i1l1517 0234  
                 i1l1509 0224                   i1l1447 0470                   i1l1607 0338  
                 i1l1551 02A7                   i1l1543 0293                   i1l1535 025C  
                 i1l1527 024D                   i1l1519 023B                   i1l1449 0472  
                 i1l1609 033D                   i1l1561 02BD                   i1l1553 02A9  
                 i1l1545 0297                   i1l1529 0252                   i1l1571 02D9  
                 i1l1563 02C3                   i1l1555 02AF                   i1l1547 029D  
                 i1l1539 025E                   i1l1581 02F4                   i1l1573 02DE  
                 i1l1565 02C8                   i1l1557 02B2                   i1l1549 02A1  
                 i1l1493 0205                   i1l1591 030F                   i1l1583 02FA  
                 i1l1575 02E4                   i1l1567 02CE                   i1l1559 02B8  
                 i1l1639 0268                   i1l1495 0209                   i1l1593 0317  
                 i1l1585 02FF                   i1l1577 02E9                   i1l1569 02D3  
                 i1l1497 020F                   i1l1595 0318                   i1l1587 0305  
                 i1l1579 02EF                   i1l1499 0210                   i1l1597 031B  
                 i1l1589 030A                   i1l1599 0320                   _SPBRGH 009A  
                 _TRISA0 0428                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013                   ___bmul 044F  
                 ___wmul 040A                ??___awdiv 002A         __end_of_initTMR0 0487  
       ___awdiv@quotient 002D                   _unidad 007D                   saved_w 007E  
       __end_of_spiWrite 049D                ??_spiInit 0023                ??_spiRead 0020  
__end_of__initialization 002E      ___bmul@multiplicand 0020           __pcstackCOMMON 0070  
           __pidataBANK0 049D                ?i1___bmul 0070           _OPTION_REGbits 0081  
       i1___bmul@product 0072               __pbssBANK0 0039               __pmaintext 0032  
                ?___bmul 0020                  ?___wmul 0020               __pintentry 0004  
__size_of_spiReceiveWait 0007               ??i1___bmul 0071                  _SSPSTAT 0094  
              ?_initTMR0 0070               _initCONFIG 03CC                ?_spiWrite 0070  
        __size_of___bmul 0017                  ___awdiv 0363          __size_of___wmul 0027  
                __ptext1 0497                  __ptext2 0487                  __ptext3 0490  
                __ptext4 047B                  __ptext5 03CC                  __ptext6 0431  
                __ptext7 040A                  __ptext8 044F                  __ptext9 0363  
                _dozen_1 003A                  _counter 0043             __size_of_isr 015E  
    i1___bmul@multiplier 0073                  _spiInit 0431                  _spiRead 0487  
   end_of_initialization 002E               ??_initTMR0 0020                _RCSTAbits 0018  
             ??_spiWrite 0020                _PORTAbits 0005                _PORTDbits 0008  
            spiWrite@dat 0020              ?_initCONFIG 0070                _TXSTAbits 0098  
         _spiReceiveWait 0490           __end_of___bmul 0466           __end_of___wmul 0431  
            _BAUDCTLbits 0187        __size_ofi1___bmul 0015      start_initialization 0011  
            __end_of_isr 0363   __end_of_spiReceiveWait 0497                 ??___bmul 0021  
               ??___wmul 0024              __pdataBANK0 0047      __size_of_initCONFIG 003E  
            __pbssCOMMON 007B                ___latbits 0002            __pcstackBANK0 0020  
              _decathlon 0044        __size_of_initTMR0 000C                _main$1341 0037  
        ?_spiReceiveWait 0070                 ?___awdiv 0026        __size_of_spiWrite 0006  
               ?_spiInit 0020                 ?_spiRead 0070     spiInit@sTransmitEdge 0022  
      interrupt_function 0004           ___wmul@product 0024    i1___bmul@multiplicand 0070  
     spiInit@sDataSample 0020                 _PIR1bits 000C                _temp_read 007C  
               i1___bmul 0466               _ADCON0bits 001F               _ADCON1bits 009F  
      ___wmul@multiplier 0020             ??_initCONFIG 0024         __size_of___awdiv 0069  
     __end_of_initCONFIG 040A                 __ptext10 0205                 __ptext11 0466  
       __size_of_spiInit 001E         __size_of_spiRead 0009                 _initTMR0 047B  
          __size_of_main 01D3                 _spiWrite 0497             spiInit@sType 0023  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0020               _OSCCONbits 008F            _unit_1_change 003E  
