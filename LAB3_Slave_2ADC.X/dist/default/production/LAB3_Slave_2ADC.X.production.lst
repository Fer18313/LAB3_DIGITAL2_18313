

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 04 11:48:56 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  008F                     	;# 
   411  0090                     	;# 
   412  0091                     	;# 
   413  0092                     	;# 
   414  0093                     	;# 
   415  0093                     	;# 
   416  0093                     	;# 
   417  0094                     	;# 
   418  0095                     	;# 
   419  0096                     	;# 
   420  0097                     	;# 
   421  0098                     	;# 
   422  0099                     	;# 
   423  009A                     	;# 
   424  009B                     	;# 
   425  009C                     	;# 
   426  009D                     	;# 
   427  009E                     	;# 
   428  009F                     	;# 
   429  0105                     	;# 
   430  0107                     	;# 
   431  0108                     	;# 
   432  0109                     	;# 
   433  010C                     	;# 
   434  010C                     	;# 
   435  010D                     	;# 
   436  010E                     	;# 
   437  010F                     	;# 
   438  0185                     	;# 
   439  0187                     	;# 
   440  0188                     	;# 
   441  0189                     	;# 
   442  018C                     	;# 
   443  018D                     	;# 
   444  0000                     	;# 
   445  0001                     	;# 
   446  0002                     	;# 
   447  0003                     	;# 
   448  0004                     	;# 
   449  0005                     	;# 
   450  0006                     	;# 
   451  0007                     	;# 
   452  0008                     	;# 
   453  0009                     	;# 
   454  000A                     	;# 
   455  000B                     	;# 
   456  000C                     	;# 
   457  000D                     	;# 
   458  000E                     	;# 
   459  000E                     	;# 
   460  000F                     	;# 
   461  0010                     	;# 
   462  0011                     	;# 
   463  0012                     	;# 
   464  0013                     	;# 
   465  0014                     	;# 
   466  0015                     	;# 
   467  0015                     	;# 
   468  0016                     	;# 
   469  0017                     	;# 
   470  0018                     	;# 
   471  0019                     	;# 
   472  001A                     	;# 
   473  001B                     	;# 
   474  001B                     	;# 
   475  001C                     	;# 
   476  001D                     	;# 
   477  001E                     	;# 
   478  001F                     	;# 
   479  0081                     	;# 
   480  0085                     	;# 
   481  0086                     	;# 
   482  0087                     	;# 
   483  0088                     	;# 
   484  0089                     	;# 
   485  008C                     	;# 
   486  008D                     	;# 
   487  008E                     	;# 
   488  008F                     	;# 
   489  0090                     	;# 
   490  0091                     	;# 
   491  0092                     	;# 
   492  0093                     	;# 
   493  0093                     	;# 
   494  0093                     	;# 
   495  0094                     	;# 
   496  0095                     	;# 
   497  0096                     	;# 
   498  0097                     	;# 
   499  0098                     	;# 
   500  0099                     	;# 
   501  009A                     	;# 
   502  009B                     	;# 
   503  009C                     	;# 
   504  009D                     	;# 
   505  009E                     	;# 
   506  009F                     	;# 
   507  0105                     	;# 
   508  0107                     	;# 
   509  0108                     	;# 
   510  0109                     	;# 
   511  010C                     	;# 
   512  010C                     	;# 
   513  010D                     	;# 
   514  010E                     	;# 
   515  010F                     	;# 
   516  0185                     	;# 
   517  0187                     	;# 
   518  0188                     	;# 
   519  0189                     	;# 
   520  018C                     	;# 
   521  018D                     	;# 
   522  0018                     _RCSTAbits	set	24
   523  0013                     _SSPBUF	set	19
   524  0014                     _SSPCON	set	20
   525  000C                     _PIR1bits	set	12
   526  000B                     _INTCONbits	set	11
   527  0009                     _PORTE	set	9
   528  0008                     _PORTD	set	8
   529  0007                     _PORTC	set	7
   530  0005                     _PORTA	set	5
   531  001E                     _ADRESH	set	30
   532  001F                     _ADCON0bits	set	31
   533  0049                     _RE1	set	73
   534  0048                     _RE0	set	72
   535  0063                     _SSPIF	set	99
   536  0066                     _ADIF	set	102
   537  009A                     _SPBRGH	set	154
   538  0099                     _SPBRG	set	153
   539  0098                     _TXSTAbits	set	152
   540  0094                     _SSPSTATbits	set	148
   541  0094                     _SSPSTAT	set	148
   542  0086                     _TRISBbits	set	134
   543  008C                     _PIE1bits	set	140
   544  008F                     _OSCCONbits	set	143
   545  0089                     _TRISE	set	137
   546  0088                     _TRISD	set	136
   547  0087                     _TRISC	set	135
   548  0086                     _TRISB	set	134
   549  0085                     _TRISA	set	133
   550  009F                     _ADCON1bits	set	159
   551  043B                     _TRISC3	set	1083
   552  043D                     _TRISC5	set	1085
   553  0187                     _BAUDCTLbits	set	391
   554  0188                     _ANSEL	set	392
   555  0189                     _ANSELH	set	393
   556                           
   557                           	psect	cinit
   558  0011                     start_initialization:	
   559                           ; #config settings
   560                           
   561  0011                     __initialization:
   562                           
   563                           ; Clear objects allocated to COMMON
   564  0011  01F6               	clrf	__pbssCOMMON& (0+127)
   565  0012  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   566  0013  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   567  0014  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   568  0015                     end_of_initialization:	
   569                           ;End of C runtime variable initialization code
   570                           
   571  0015                     __end_of__initialization:
   572  0015  0183               	clrf	3
   573  0016  120A  118A  28E8   	ljmp	_main	;jump to C main() function
   574                           
   575                           	psect	bssCOMMON
   576  0076                     __pbssCOMMON:
   577  0076                     _F0:
   578  0076                     	ds	1
   579  0077                     _F1:
   580  0077                     	ds	1
   581  0078                     _var1:
   582  0078                     	ds	1
   583  0079                     _var0:
   584  0079                     	ds	1
   585                           
   586                           	psect	cstackCOMMON
   587  0070                     __pcstackCOMMON:
   588  0070                     ?_spiRead:
   589  0070                     ??_spiRead:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_spiWrite:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ??_spiWrite:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_initCONFIG:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_setupADC:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_isr:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_main:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_spiReceiveWait:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ??_spiReceiveWait:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     spiWrite@dat:	
   617                           ; 1 bytes @ 0x0
   618                           
   619                           
   620                           ; 1 bytes @ 0x0
   621  0070                     	ds	1
   622  0071                     ??_isr:
   623                           
   624                           ; 1 bytes @ 0x1
   625  0071                     	ds	5
   626                           
   627                           	psect	cstackBANK0
   628  0020                     __pcstackBANK0:
   629  0020                     ?_spiInit:
   630  0020                     ??_setupADC:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0020                     spiInit@sDataSample:	
   634                           ; 1 bytes @ 0x0
   635                           
   636                           
   637                           ; 1 bytes @ 0x0
   638  0020                     	ds	1
   639  0021                     spiInit@sClockIdle:
   640                           
   641                           ; 1 bytes @ 0x1
   642  0021                     	ds	1
   643  0022                     spiInit@sTransmitEdge:
   644                           
   645                           ; 1 bytes @ 0x2
   646  0022                     	ds	1
   647  0023                     ??_spiInit:
   648  0023                     spiInit@sType:	
   649                           ; 1 bytes @ 0x3
   650                           
   651                           
   652                           ; 1 bytes @ 0x3
   653  0023                     	ds	1
   654  0024                     ??_initCONFIG:
   655  0024                     ??_main:	
   656                           ; 1 bytes @ 0x4
   657                           
   658                           
   659                           	psect	maintext
   660  00E8                     __pmaintext:	
   661                           ; 1 bytes @ 0x4
   662 ;;
   663 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   664 ;;
   665 ;; *************** function _main *****************
   666 ;; Defined at:
   667 ;;		line 76 in file "slaveADC.c"
   668 ;; Parameters:    Size  Location     Type
   669 ;;		None
   670 ;; Auto vars:     Size  Location     Type
   671 ;;		None
   672 ;; Return value:  Size  Location     Type
   673 ;;                  1    wreg      void 
   674 ;; Registers used:
   675 ;;		wreg, status,2, status,0, pclath, cstack
   676 ;; Tracked objects:
   677 ;;		On entry : B00/0
   678 ;;		On exit  : 0/0
   679 ;;		Unchanged: 0/0
   680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   681 ;;      Params:         0       0       0       0       0
   682 ;;      Locals:         0       0       0       0       0
   683 ;;      Temps:          0       0       0       0       0
   684 ;;      Totals:         0       0       0       0       0
   685 ;;Total ram usage:        0 bytes
   686 ;; Hardware stack levels required when called: 5
   687 ;; This function calls:
   688 ;;		_initCONFIG
   689 ;; This function is called by:
   690 ;;		Startup code after reset
   691 ;; This function uses a non-reentrant model
   692 ;;
   693                           
   694                           
   695                           ;psect for function _main
   696  00E8                     _main:
   697  00E8                     l1125:	
   698                           ;incstack = 0
   699                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   700                           
   701                           
   702                           ;slaveADC.c: 77:     initCONFIG();
   703  00E8  120A  118A  2078  120A  118A  	fcall	_initCONFIG
   704  00ED                     l88:	
   705                           ;slaveADC.c: 78:     while(1){
   706                           
   707  00ED                     l89:	
   708                           ;slaveADC.c: 79:     }
   709                           
   710  00ED  28ED               	goto	l88
   711  00EE  120A  118A  280E   	ljmp	start
   712  00F1                     __end_of_main:
   713                           
   714                           	psect	text1
   715  0078                     __ptext1:	
   716 ;; *************** function _initCONFIG *****************
   717 ;; Defined at:
   718 ;;		line 83 in file "slaveADC.c"
   719 ;; Parameters:    Size  Location     Type
   720 ;;		None
   721 ;; Auto vars:     Size  Location     Type
   722 ;;		None
   723 ;; Return value:  Size  Location     Type
   724 ;;                  1    wreg      void 
   725 ;; Registers used:
   726 ;;		wreg, status,2, status,0, pclath, cstack
   727 ;; Tracked objects:
   728 ;;		On entry : 0/0
   729 ;;		On exit  : 0/0
   730 ;;		Unchanged: 0/0
   731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   732 ;;      Params:         0       0       0       0       0
   733 ;;      Locals:         0       0       0       0       0
   734 ;;      Temps:          0       0       0       0       0
   735 ;;      Totals:         0       0       0       0       0
   736 ;;Total ram usage:        0 bytes
   737 ;; Hardware stack levels used: 1
   738 ;; Hardware stack levels required when called: 4
   739 ;; This function calls:
   740 ;;		_setupADC
   741 ;;		_spiInit
   742 ;; This function is called by:
   743 ;;		_main
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           
   748                           ;psect for function _initCONFIG
   749  0078                     _initCONFIG:
   750  0078                     l1085:	
   751                           ;incstack = 0
   752                           ; Regs used in _initCONFIG: [wreg+status,2+status,0+pclath+cstack]
   753                           
   754                           
   755                           ;slaveADC.c: 84:     ANSELH = 0;
   756  0078  1683               	bsf	3,5	;RP0=1, select bank3
   757  0079  1703               	bsf	3,6	;RP1=1, select bank3
   758  007A  0189               	clrf	9	;volatile
   759  007B                     l1087:
   760                           
   761                           ;slaveADC.c: 85:     ANSEL = 0b00000011;
   762  007B  3003               	movlw	3
   763  007C  0088               	movwf	8	;volatile
   764  007D                     l1089:
   765                           
   766                           ;slaveADC.c: 86:     TRISA = 0b00001011;
   767  007D  300B               	movlw	11
   768  007E  1683               	bsf	3,5	;RP0=1, select bank1
   769  007F  1303               	bcf	3,6	;RP1=0, select bank1
   770  0080  0085               	movwf	5	;volatile
   771  0081                     l1091:
   772                           
   773                           ;slaveADC.c: 87:     TRISB = 0b00001000;
   774  0081  3008               	movlw	8
   775  0082  0086               	movwf	6	;volatile
   776  0083                     l1093:
   777                           
   778                           ;slaveADC.c: 88:     TRISC = 0b00011000;
   779  0083  3018               	movlw	24
   780  0084  0087               	movwf	7	;volatile
   781                           
   782                           ;slaveADC.c: 89:     TRISD = 0;
   783  0085  0188               	clrf	8	;volatile
   784                           
   785                           ;slaveADC.c: 90:     TRISE = 0;
   786  0086  0189               	clrf	9	;volatile
   787                           
   788                           ;slaveADC.c: 91:     PORTA = 0;
   789  0087  1283               	bcf	3,5	;RP0=0, select bank0
   790  0088  1303               	bcf	3,6	;RP1=0, select bank0
   791  0089  0185               	clrf	5	;volatile
   792                           
   793                           ;slaveADC.c: 92:     PORTC = 0;
   794  008A  0187               	clrf	7	;volatile
   795                           
   796                           ;slaveADC.c: 93:     PORTD = 0;
   797  008B  0188               	clrf	8	;volatile
   798                           
   799                           ;slaveADC.c: 94:     PORTE = 0;
   800  008C  0189               	clrf	9	;volatile
   801  008D                     l1095:
   802                           
   803                           ;slaveADC.c: 95:     OSCCONbits.IRCF2 = 1;
   804  008D  1683               	bsf	3,5	;RP0=1, select bank1
   805  008E  1303               	bcf	3,6	;RP1=0, select bank1
   806  008F  170F               	bsf	15,6	;volatile
   807  0090                     l1097:
   808                           
   809                           ;slaveADC.c: 96:     OSCCONbits.IRCF1 = 1;
   810  0090  168F               	bsf	15,5	;volatile
   811  0091                     l1099:
   812                           
   813                           ;slaveADC.c: 97:     OSCCONbits.IRCF0 = 1;
   814  0091  160F               	bsf	15,4	;volatile
   815  0092                     l1101:
   816                           
   817                           ;slaveADC.c: 98:     OSCCONbits.SCS = 1;
   818  0092  140F               	bsf	15,0	;volatile
   819  0093                     l1103:
   820                           
   821                           ;slaveADC.c: 99:     setupADC();
   822  0093  120A  118A  20CF  120A  118A  	fcall	_setupADC
   823  0098                     l1105:
   824                           
   825                           ;slaveADC.c: 100:     INTCONbits.GIE = 1;
   826  0098  178B               	bsf	11,7	;volatile
   827  0099                     l1107:
   828                           
   829                           ;slaveADC.c: 101:     INTCONbits.T0IE = 1;
   830  0099  168B               	bsf	11,5	;volatile
   831  009A                     l1109:
   832                           
   833                           ;slaveADC.c: 102:     INTCONbits.T0IF = 0;
   834  009A  110B               	bcf	11,2	;volatile
   835  009B                     l1111:
   836                           
   837                           ;slaveADC.c: 103:     INTCONbits.PEIE = 1;
   838  009B  170B               	bsf	11,6	;volatile
   839  009C                     l1113:
   840                           
   841                           ;slaveADC.c: 104:     PIR1bits.SSPIF = 0;
   842  009C  1283               	bcf	3,5	;RP0=0, select bank0
   843  009D  1303               	bcf	3,6	;RP1=0, select bank0
   844  009E  118C               	bcf	12,3	;volatile
   845  009F                     l1115:
   846                           
   847                           ;slaveADC.c: 105:     PIE1bits.SSPIE = 1;
   848  009F  1683               	bsf	3,5	;RP0=1, select bank1
   849  00A0  1303               	bcf	3,6	;RP1=0, select bank1
   850  00A1  158C               	bsf	12,3	;volatile
   851  00A2                     l1117:
   852                           
   853                           ;slaveADC.c: 106:     TRISBbits.TRISB3 = 1;
   854  00A2  1586               	bsf	6,3	;volatile
   855  00A3                     l1119:
   856                           
   857                           ;slaveADC.c: 107:     PIE1bits.ADIE = 1;
   858  00A3  170C               	bsf	12,6	;volatile
   859  00A4                     l1121:
   860                           
   861                           ;slaveADC.c: 108:     PIR1bits.ADIF = 0;
   862  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   863  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   864  00A6  130C               	bcf	12,6	;volatile
   865  00A7                     l1123:
   866                           
   867                           ;slaveADC.c: 109:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
   868  00A7  01A0               	clrf	spiInit@sDataSample
   869  00A8  01A1               	clrf	spiInit@sClockIdle
   870  00A9  01A2               	clrf	spiInit@sTransmitEdge
   871  00AA  3024               	movlw	36
   872  00AB  120A  118A  20B1  120A  118A  	fcall	_spiInit
   873  00B0                     l94:
   874  00B0  0008               	return
   875  00B1                     __end_of_initCONFIG:
   876                           
   877                           	psect	text2
   878  00B1                     __ptext2:	
   879 ;; *************** function _spiInit *****************
   880 ;; Defined at:
   881 ;;		line 9 in file "SPI.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;  sType           1    wreg     enum E1264
   884 ;;  sDataSample     1    0[BANK0 ] enum E1272
   885 ;;  sClockIdle      1    1[BANK0 ] enum E1276
   886 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
   887 ;; Auto vars:     Size  Location     Type
   888 ;;  sType           1    3[BANK0 ] enum E1264
   889 ;; Return value:  Size  Location     Type
   890 ;;                  1    wreg      void 
   891 ;; Registers used:
   892 ;;		wreg, status,2, status,0
   893 ;; Tracked objects:
   894 ;;		On entry : 0/0
   895 ;;		On exit  : 0/0
   896 ;;		Unchanged: 0/0
   897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   898 ;;      Params:         0       3       0       0       0
   899 ;;      Locals:         0       1       0       0       0
   900 ;;      Temps:          0       0       0       0       0
   901 ;;      Totals:         0       4       0       0       0
   902 ;;Total ram usage:        4 bytes
   903 ;; Hardware stack levels used: 1
   904 ;; Hardware stack levels required when called: 3
   905 ;; This function calls:
   906 ;;		Nothing
   907 ;; This function is called by:
   908 ;;		_initCONFIG
   909 ;; This function uses a non-reentrant model
   910 ;;
   911                           
   912                           
   913                           ;psect for function _spiInit
   914  00B1                     _spiInit:
   915                           
   916                           ;incstack = 0
   917                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   918                           ;spiInit@sType stored from wreg
   919  00B1  1283               	bcf	3,5	;RP0=0, select bank0
   920  00B2  1303               	bcf	3,6	;RP1=0, select bank0
   921  00B3  00A3               	movwf	spiInit@sType
   922  00B4                     l1075:
   923                           
   924                           ;SPI.c: 9: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sClo
      +                          ckIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 10: {;SPI.c: 11:     TRISC5 = 0;
   925  00B4  1683               	bsf	3,5	;RP0=1, select bank1
   926  00B5  1303               	bcf	3,6	;RP1=0, select bank1
   927  00B6  1287               	bcf	7,5	;volatile
   928                           
   929                           ;SPI.c: 12:     if(sType & 0b00000100)
   930  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   931  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   932  00B9  1D23               	btfss	spiInit@sType,2
   933  00BA  28BC               	goto	u111
   934  00BB  28BD               	goto	u110
   935  00BC                     u111:
   936  00BC  28C3               	goto	l1081
   937  00BD                     u110:
   938  00BD                     l1077:
   939                           
   940                           ;SPI.c: 13:     {;SPI.c: 14:         SSPSTAT = sTransmitEdge;
   941  00BD  0822               	movf	spiInit@sTransmitEdge,w
   942  00BE  1683               	bsf	3,5	;RP0=1, select bank1
   943  00BF  1303               	bcf	3,6	;RP1=0, select bank1
   944  00C0  0094               	movwf	20	;volatile
   945  00C1                     l1079:
   946                           
   947                           ;SPI.c: 15:         TRISC3 = 1;
   948  00C1  1587               	bsf	7,3	;volatile
   949                           
   950                           ;SPI.c: 16:     }
   951  00C2  28C9               	goto	l110
   952  00C3                     l1081:
   953                           
   954                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sDataSample | sTransmitEdge;
   955  00C3  0820               	movf	spiInit@sDataSample,w
   956  00C4  0422               	iorwf	spiInit@sTransmitEdge,w
   957  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   958  00C6  1303               	bcf	3,6	;RP1=0, select bank1
   959  00C7  0094               	movwf	20	;volatile
   960  00C8                     l1083:
   961                           
   962                           ;SPI.c: 20:         TRISC3 = 0;
   963  00C8  1187               	bcf	7,3	;volatile
   964  00C9                     l110:	
   965                           ;SPI.c: 21:     }
   966                           
   967                           
   968                           ;SPI.c: 23:     SSPCON = sType | sClockIdle;
   969  00C9  1283               	bcf	3,5	;RP0=0, select bank0
   970  00CA  1303               	bcf	3,6	;RP1=0, select bank0
   971  00CB  0823               	movf	spiInit@sType,w
   972  00CC  0421               	iorwf	spiInit@sClockIdle,w
   973  00CD  0094               	movwf	20	;volatile
   974  00CE                     l111:
   975  00CE  0008               	return
   976  00CF                     __end_of_spiInit:
   977                           
   978                           	psect	text3
   979  00CF                     __ptext3:	
   980 ;; *************** function _setupADC *****************
   981 ;; Defined at:
   982 ;;		line 15 in file "ADC.c"
   983 ;; Parameters:    Size  Location     Type
   984 ;;		None
   985 ;; Auto vars:     Size  Location     Type
   986 ;;		None
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         0       0       0       0       0
   997 ;;      Locals:         0       0       0       0       0
   998 ;;      Temps:          0       1       0       0       0
   999 ;;      Totals:         0       1       0       0       0
  1000 ;;Total ram usage:        1 bytes
  1001 ;; Hardware stack levels used: 1
  1002 ;; Hardware stack levels required when called: 3
  1003 ;; This function calls:
  1004 ;;		Nothing
  1005 ;; This function is called by:
  1006 ;;		_initCONFIG
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _setupADC
  1012  00CF                     _setupADC:
  1013  00CF                     l1063:	
  1014                           ;incstack = 0
  1015                           ; Regs used in _setupADC: [wreg+status,2+status,0]
  1016                           
  1017                           
  1018                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
  1019  00CF  1683               	bsf	3,5	;RP0=1, select bank1
  1020  00D0  1303               	bcf	3,6	;RP1=0, select bank1
  1021  00D1  139F               	bcf	31,7	;volatile
  1022                           
  1023                           ;ADC.c: 17:     ADCON1bits.VCFG0 = 0;
  1024  00D2  121F               	bcf	31,4	;volatile
  1025                           
  1026                           ;ADC.c: 18:     ADCON1bits.VCFG1 = 0;
  1027  00D3  129F               	bcf	31,5	;volatile
  1028  00D4                     l1065:
  1029                           
  1030                           ;ADC.c: 19:     ADCON0bits.ADCS = 0b10;
  1031  00D4  1283               	bcf	3,5	;RP0=0, select bank0
  1032  00D5  1303               	bcf	3,6	;RP1=0, select bank0
  1033  00D6  081F               	movf	31,w	;volatile
  1034  00D7  393F               	andlw	-193
  1035  00D8  3880               	iorlw	128
  1036  00D9  009F               	movwf	31	;volatile
  1037                           
  1038                           ;ADC.c: 20:     ADCON0bits.CHS = 0;
  1039  00DA  30C3               	movlw	-61
  1040  00DB  059F               	andwf	31,f	;volatile
  1041  00DC                     l1067:
  1042                           
  1043                           ;ADC.c: 21:     ADCON0bits.ADON = 1;
  1044  00DC  141F               	bsf	31,0	;volatile
  1045  00DD                     l1069:
  1046                           
  1047                           ;ADC.c: 22:     _delay((unsigned long)((100)*(8000000/4000000.0)));
  1048  00DD  3041               	movlw	65
  1049  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1050  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1051  00E0  00A0               	movwf	??_setupADC
  1052  00E1                     u127:
  1053  00E1  0BA0               	decfsz	??_setupADC,f
  1054  00E2  28E1               	goto	u127
  1055  00E3  28E4               	nop2
  1056  00E4                     l1071:
  1057                           
  1058                           ;ADC.c: 23:     ADCON0bits.GO = 1;
  1059  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1060  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1061  00E6  149F               	bsf	31,1	;volatile
  1062  00E7                     l9:
  1063  00E7  0008               	return
  1064  00E8                     __end_of_setupADC:
  1065                           
  1066                           	psect	text4
  1067  0019                     __ptext4:	
  1068 ;; *************** function _isr *****************
  1069 ;; Defined at:
  1070 ;;		line 45 in file "slaveADC.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          5       0       0       0       0
  1087 ;;      Totals:         5       0       0       0       0
  1088 ;;Total ram usage:        5 bytes
  1089 ;; Hardware stack levels used: 1
  1090 ;; Hardware stack levels required when called: 2
  1091 ;; This function calls:
  1092 ;;		_spiRead
  1093 ;;		_spiWrite
  1094 ;; This function is called by:
  1095 ;;		Interrupt level 1
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _isr
  1101  0019                     _isr:
  1102  0019                     i1l863:
  1103                           
  1104                           ;slaveADC.c: 46:     if(ADIF == 1){
  1105  0019  1283               	bcf	3,5	;RP0=0, select bank0
  1106  001A  1303               	bcf	3,6	;RP1=0, select bank0
  1107  001B  1F0C               	btfss	12,6	;volatile
  1108  001C  281E               	goto	u3_21
  1109  001D  281F               	goto	u3_20
  1110  001E                     u3_21:
  1111  001E  2848               	goto	i1l887
  1112  001F                     u3_20:
  1113  001F  282F               	goto	i1l881
  1114  0020                     i1l867:
  1115                           
  1116                           ;slaveADC.c: 49:                 var0 = ADRESH;
  1117  0020  081E               	movf	30,w	;volatile
  1118  0021  00F1               	movwf	??_isr
  1119  0022  0871               	movf	??_isr,w
  1120  0023  00F9               	movwf	_var0
  1121  0024                     i1l869:
  1122                           
  1123                           ;slaveADC.c: 50:                 ADCON0bits.CHS0 = 1;
  1124  0024  151F               	bsf	31,2	;volatile
  1125  0025                     i1l871:
  1126                           
  1127                           ;slaveADC.c: 51:                 F0 = 0;
  1128  0025  01F6               	clrf	_F0
  1129                           
  1130                           ;slaveADC.c: 52:                 break;
  1131  0026  283F               	goto	i1l77
  1132  0027                     i1l873:
  1133                           
  1134                           ;slaveADC.c: 54:                 var1 = ADRESH;
  1135  0027  081E               	movf	30,w	;volatile
  1136  0028  00F1               	movwf	??_isr
  1137  0029  0871               	movf	??_isr,w
  1138  002A  00F8               	movwf	_var1
  1139  002B                     i1l875:
  1140                           
  1141                           ;slaveADC.c: 55:                 ADCON0bits.CHS0 = 0;
  1142  002B  111F               	bcf	31,2	;volatile
  1143  002C                     i1l877:
  1144                           
  1145                           ;slaveADC.c: 56:                 F0 = 1;
  1146  002C  01F6               	clrf	_F0
  1147  002D  0AF6               	incf	_F0,f
  1148                           
  1149                           ;slaveADC.c: 57:                 break;
  1150  002E  283F               	goto	i1l77
  1151  002F                     i1l881:
  1152  002F  0876               	movf	_F0,w
  1153  0030  00F1               	movwf	??_isr
  1154  0031  01F2               	clrf	??_isr+1
  1155                           
  1156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1157                           ; Switch size 1, requested type "simple"
  1158                           ; Number of cases is 1, Range of values is 0 to 0
  1159                           ; switch strategies available:
  1160                           ; Name         Instructions Cycles
  1161                           ; simple_byte            4     3 (average)
  1162                           ; direct_byte           11     8 (fixed)
  1163                           ; jumptable            260     6 (fixed)
  1164                           ;	Chosen strategy is simple_byte
  1165  0032  0872               	movf	??_isr+1,w
  1166  0033  3A00               	xorlw	0	; case 0
  1167  0034  1903               	skipnz
  1168  0035  2837               	goto	i1l1147
  1169  0036  283F               	goto	i1l77
  1170  0037                     i1l1147:
  1171                           
  1172                           ; Switch size 1, requested type "simple"
  1173                           ; Number of cases is 2, Range of values is 0 to 1
  1174                           ; switch strategies available:
  1175                           ; Name         Instructions Cycles
  1176                           ; simple_byte            7     4 (average)
  1177                           ; direct_byte           14     8 (fixed)
  1178                           ; jumptable            260     6 (fixed)
  1179                           ;	Chosen strategy is simple_byte
  1180  0037  0871               	movf	??_isr,w
  1181  0038  3A00               	xorlw	0	; case 0
  1182  0039  1903               	skipnz
  1183  003A  2827               	goto	i1l873
  1184  003B  3A01               	xorlw	1	; case 1
  1185  003C  1903               	skipnz
  1186  003D  2820               	goto	i1l867
  1187  003E  283F               	goto	i1l77
  1188  003F                     i1l77:
  1189                           
  1190                           ;slaveADC.c: 59:                 ADIF = 0;
  1191  003F  130C               	bcf	12,6	;volatile
  1192  0040                     i1l883:
  1193                           
  1194                           ;slaveADC.c: 60:                 _delay((unsigned long)((60)*(8000000/4000000.0)));
  1195  0040  3027               	movlw	39
  1196  0041  00F1               	movwf	??_isr
  1197  0042                     u13_27:
  1198  0042  0BF1               	decfsz	??_isr,f
  1199  0043  2842               	goto	u13_27
  1200  0044  2845               	nop2
  1201  0045                     i1l885:
  1202                           
  1203                           ;slaveADC.c: 61:                 ADCON0bits.GO = 1;
  1204  0045  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0046  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0047  149F               	bsf	31,1	;volatile
  1207  0048                     i1l887:
  1208                           
  1209                           ;slaveADC.c: 63:     if(SSPIF == 1){
  1210  0048  1D8C               	btfss	12,3	;volatile
  1211  0049  284B               	goto	u4_21
  1212  004A  284C               	goto	u4_20
  1213  004B                     u4_21:
  1214  004B  286F               	goto	i1l83
  1215  004C                     u4_20:
  1216  004C                     i1l889:
  1217                           
  1218                           ;slaveADC.c: 64:         F1 = spiRead();
  1219  004C  120A  118A  20F1  120A  118A  	fcall	_spiRead
  1220  0051  00F1               	movwf	??_isr
  1221  0052  0871               	movf	??_isr,w
  1222  0053  00F7               	movwf	_F1
  1223  0054                     i1l891:
  1224                           
  1225                           ;slaveADC.c: 65:         if (F1 == 1){
  1226  0054  0377               	decf	_F1,w
  1227  0055  1D03               	btfss	3,2
  1228  0056  2858               	goto	u5_21
  1229  0057  2859               	goto	u5_20
  1230  0058                     u5_21:
  1231  0058  2860               	goto	i1l895
  1232  0059                     u5_20:
  1233  0059                     i1l893:
  1234                           
  1235                           ;slaveADC.c: 66:             spiWrite(var0);
  1236  0059  0879               	movf	_var0,w
  1237  005A  120A  118A  2101  120A  118A  	fcall	_spiWrite
  1238                           
  1239                           ;slaveADC.c: 67:         }
  1240  005F  286C               	goto	i1l899
  1241  0060                     i1l895:
  1242  0060  3002               	movlw	2
  1243  0061  0677               	xorwf	_F1,w
  1244  0062  1D03               	btfss	3,2
  1245  0063  2865               	goto	u6_21
  1246  0064  2866               	goto	u6_20
  1247  0065                     u6_21:
  1248  0065  286C               	goto	i1l899
  1249  0066                     u6_20:
  1250  0066                     i1l897:
  1251                           
  1252                           ;slaveADC.c: 69:             spiWrite(var1);
  1253  0066  0878               	movf	_var1,w
  1254  0067  120A  118A  2101  120A  118A  	fcall	_spiWrite
  1255  006C                     i1l899:
  1256                           
  1257                           ;slaveADC.c: 71:         SSPIF = 0;
  1258  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1259  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1260  006E  118C               	bcf	12,3	;volatile
  1261  006F                     i1l83:
  1262  006F  0875               	movf	??_isr+4,w
  1263  0070  008A               	movwf	10
  1264  0071  0874               	movf	??_isr+3,w
  1265  0072  0084               	movwf	4
  1266  0073  0E73               	swapf	??_isr+2,w
  1267  0074  0083               	movwf	3
  1268  0075  0EFE               	swapf	btemp,f
  1269  0076  0E7E               	swapf	btemp,w
  1270  0077  0009               	retfie
  1271  0078                     __end_of_isr:
  1272                           
  1273                           	psect	intentry
  1274  0004                     __pintentry:	
  1275                           ;incstack = 0
  1276                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1277                           
  1278  0004                     interrupt_function:
  1279  007E                     saved_w	set	btemp
  1280  0004  00FE               	movwf	btemp
  1281  0005  0E03               	swapf	3,w
  1282  0006  00F3               	movwf	??_isr+2
  1283  0007  0804               	movf	4,w
  1284  0008  00F4               	movwf	??_isr+3
  1285  0009  080A               	movf	10,w
  1286  000A  00F5               	movwf	??_isr+4
  1287  000B  120A  118A  2819   	ljmp	_isr
  1288                           
  1289                           	psect	text5
  1290  0101                     __ptext5:	
  1291 ;; *************** function _spiWrite *****************
  1292 ;; Defined at:
  1293 ;;		line 31 in file "SPI.c"
  1294 ;; Parameters:    Size  Location     Type
  1295 ;;  dat             1    wreg     unsigned char 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  dat             1    0[COMMON] unsigned char 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  1    wreg      void 
  1300 ;; Registers used:
  1301 ;;		wreg
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       0       0       0       0
  1308 ;;      Locals:         1       0       0       0       0
  1309 ;;      Temps:          0       0       0       0       0
  1310 ;;      Totals:         1       0       0       0       0
  1311 ;;Total ram usage:        1 bytes
  1312 ;; Hardware stack levels used: 1
  1313 ;; This function calls:
  1314 ;;		Nothing
  1315 ;; This function is called by:
  1316 ;;		_isr
  1317 ;; This function uses a non-reentrant model
  1318 ;;
  1319                           
  1320                           
  1321                           ;psect for function _spiWrite
  1322  0101                     _spiWrite:
  1323                           
  1324                           ;incstack = 0
  1325                           ; Regs used in _spiWrite: [wreg]
  1326                           ;spiWrite@dat stored from wreg
  1327  0101  00F0               	movwf	spiWrite@dat
  1328  0102                     i1l801:
  1329                           
  1330                           ;SPI.c: 31: void spiWrite(char dat);SPI.c: 32: {;SPI.c: 33:     SSPBUF = dat;
  1331  0102  0870               	movf	spiWrite@dat,w
  1332  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1333  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1334  0105  0093               	movwf	19	;volatile
  1335  0106                     i1l120:
  1336  0106  0008               	return
  1337  0107                     __end_of_spiWrite:
  1338                           
  1339                           	psect	text6
  1340  00F1                     __ptext6:	
  1341 ;; *************** function _spiRead *****************
  1342 ;; Defined at:
  1343 ;;		line 44 in file "SPI.c"
  1344 ;; Parameters:    Size  Location     Type
  1345 ;;		None
  1346 ;; Auto vars:     Size  Location     Type
  1347 ;;		None
  1348 ;; Return value:  Size  Location     Type
  1349 ;;                  1    wreg      unsigned char 
  1350 ;; Registers used:
  1351 ;;		wreg, status,2, status,0, pclath, cstack
  1352 ;; Tracked objects:
  1353 ;;		On entry : 0/0
  1354 ;;		On exit  : 0/0
  1355 ;;		Unchanged: 0/0
  1356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1357 ;;      Params:         0       0       0       0       0
  1358 ;;      Locals:         0       0       0       0       0
  1359 ;;      Temps:          0       0       0       0       0
  1360 ;;      Totals:         0       0       0       0       0
  1361 ;;Total ram usage:        0 bytes
  1362 ;; Hardware stack levels used: 1
  1363 ;; Hardware stack levels required when called: 1
  1364 ;; This function calls:
  1365 ;;		_spiReceiveWait
  1366 ;; This function is called by:
  1367 ;;		_isr
  1368 ;; This function uses a non-reentrant model
  1369 ;;
  1370                           
  1371                           
  1372                           ;psect for function _spiRead
  1373  00F1                     _spiRead:
  1374  00F1                     i1l795:	
  1375                           ;incstack = 0
  1376                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1377                           
  1378                           
  1379                           ;SPI.c: 46:     spiReceiveWait();
  1380  00F1  120A  118A  20FA  120A  118A  	fcall	_spiReceiveWait
  1381  00F6                     i1l797:
  1382                           
  1383                           ;SPI.c: 47:     return(SSPBUF);
  1384  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1385  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1386  00F8  0813               	movf	19,w	;volatile
  1387  00F9                     i1l128:
  1388  00F9  0008               	return
  1389  00FA                     __end_of_spiRead:
  1390                           
  1391                           	psect	text7
  1392  00FA                     __ptext7:	
  1393 ;; *************** function _spiReceiveWait *****************
  1394 ;; Defined at:
  1395 ;;		line 26 in file "SPI.c"
  1396 ;; Parameters:    Size  Location     Type
  1397 ;;		None
  1398 ;; Auto vars:     Size  Location     Type
  1399 ;;		None
  1400 ;; Return value:  Size  Location     Type
  1401 ;;                  1    wreg      void 
  1402 ;; Registers used:
  1403 ;;		None
  1404 ;; Tracked objects:
  1405 ;;		On entry : 0/0
  1406 ;;		On exit  : 0/0
  1407 ;;		Unchanged: 0/0
  1408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1409 ;;      Params:         0       0       0       0       0
  1410 ;;      Locals:         0       0       0       0       0
  1411 ;;      Temps:          0       0       0       0       0
  1412 ;;      Totals:         0       0       0       0       0
  1413 ;;Total ram usage:        0 bytes
  1414 ;; Hardware stack levels used: 1
  1415 ;; This function calls:
  1416 ;;		Nothing
  1417 ;; This function is called by:
  1418 ;;		_spiRead
  1419 ;; This function uses a non-reentrant model
  1420 ;;
  1421                           
  1422                           
  1423                           ;psect for function _spiReceiveWait
  1424  00FA                     _spiReceiveWait:
  1425  00FA                     i1l791:	
  1426                           ;incstack = 0
  1427                           ; Regs used in _spiReceiveWait: []
  1428                           
  1429  00FA                     i1l114:	
  1430                           ;SPI.c: 28:     while ( !SSPSTATbits.BF );
  1431                           
  1432  00FA  1683               	bsf	3,5	;RP0=1, select bank1
  1433  00FB  1303               	bcf	3,6	;RP1=0, select bank1
  1434  00FC  1C14               	btfss	20,0	;volatile
  1435  00FD  28FF               	goto	u2_21
  1436  00FE  2900               	goto	u2_20
  1437  00FF                     u2_21:
  1438  00FF  28FA               	goto	i1l114
  1439  0100                     u2_20:
  1440  0100                     i1l117:
  1441  0100  0008               	return
  1442  0101                     __end_of_spiReceiveWait:
  1443  007E                     btemp	set	126	;btemp
  1444  007E                     wtemp0	set	126
  1445                           
  1446                           	psect	config
  1447                           
  1448                           ;Config register CONFIG1 @ 0x2007
  1449                           ;	Oscillator Selection bits
  1450                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1451                           ;	Watchdog Timer Enable bit
  1452                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1453                           ;	Power-up Timer Enable bit
  1454                           ;	PWRTE = OFF, PWRT disabled
  1455                           ;	RE3/MCLR pin function select bit
  1456                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1457                           ;	Code Protection bit
  1458                           ;	CP = OFF, Program memory code protection is disabled
  1459                           ;	Data Code Protection bit
  1460                           ;	CPD = OFF, Data memory code protection is disabled
  1461                           ;	Brown Out Reset Selection bits
  1462                           ;	BOREN = OFF, BOR disabled
  1463                           ;	Internal External Switchover bit
  1464                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1465                           ;	Fail-Safe Clock Monitor Enabled bit
  1466                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1467                           ;	Low Voltage Programming Enable bit
  1468                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1469                           ;	In-Circuit Debugger Mode bit
  1470                           ;	DEBUG = 0x1, unprogrammed default
  1471  2007                     	org	8199
  1472  2007  20D4               	dw	8404
  1473                           
  1474                           ;Config register CONFIG2 @ 0x2008
  1475                           ;	Brown-out Reset Selection bit
  1476                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1477                           ;	Flash Program Memory Self Write Enable bits
  1478                           ;	WRT = OFF, Write protection off
  1479  2008                     	org	8200
  1480  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      4       4
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _initCONFIG->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     456
                         _initCONFIG
 ---------------------------------------------------------------------------------
 (1) _initCONFIG                                           0     0      0     456
                           _setupADC
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              0 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (2) _setupADC                                             1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0      15
                                              1 COMMON     5     5      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initCONFIG
     _setupADC
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      4       4       5        5.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       E      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 04 11:48:56 2021

                      l9 00E7              _SSPSTATbits 0094                       _F0 0076  
                     _F1 0077                       l94 00B0                       l88 00ED  
                     l89 00ED                      l110 00C9                      l111 00CE  
                    _RE0 0048                      _RE1 0049                      u110 00BD  
                    u111 00BC                      u127 00E1                      _isr 0019  
                    fsr0 0004                     l1101 0092                     l1111 009B  
                   l1103 0093                     l1121 00A4                     l1113 009C  
                   l1105 0098                     l1123 00A7                     l1115 009F  
                   l1107 0099                     l1117 00A2                     l1109 009A  
                   l1125 00E8                     l1071 00E4                     l1063 00CF  
                   l1119 00A3                     l1065 00D4                     l1081 00C3  
                   l1067 00DC                     l1083 00C8                     l1075 00B4  
                   l1091 0081                     l1069 00DD                     l1077 00BD  
                   l1093 0083                     l1085 0078                     l1079 00C1  
                   l1095 008D                     l1087 007B                     l1097 0090  
                   l1089 007D                     l1099 0091                     _ADIF 0066  
                   ?_isr 0070                     i1l83 006F                     i1l77 003F  
                   u2_20 0100                     u2_21 00FF                     u3_20 001F  
                   u3_21 001E                     u4_20 004C                     u4_21 004B  
                   u5_20 0059                     u5_21 0058                     u6_20 0066  
                   u6_21 0065                     _main 00E8                     _var0 0079  
                   _var1 0078                     btemp 007E                     start 000E  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l120 0106                    i1l114 00FA                    i1l117 0100  
                  i1l128 00F9                    i1l801 0102                    i1l791 00FA  
                  i1l871 0025                    i1l863 0019                    i1l873 0027  
                  i1l881 002F                    i1l795 00F1                    i1l891 0054  
                  i1l883 0040                    i1l875 002B                    i1l867 0020  
                  i1l797 00F6                    i1l893 0059                    i1l885 0045  
                  i1l877 002C                    i1l869 0024                    i1l895 0060  
                  i1l887 0048                    i1l897 0066                    i1l889 004C  
                  i1l899 006C                    u13_27 0042                    _SPBRG 0099  
                  _PORTA 0005                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    pclath 000A          __end_of_spiInit 00CF  
        __end_of_spiRead 00FA                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 00F1                   ??_main 0024  
                 _ADRESH 001E                   _ANSELH 0189                   i1l1147 0037  
                 _SPBRGH 009A                   _TRISC3 043B                   _TRISC5 043D  
                 _SSPCON 0014                   _SSPBUF 0013         __end_of_setupADC 00E8  
                 saved_w 007E         __end_of_spiWrite 0107                ??_spiInit 0023  
              ??_spiRead 0070  __end_of__initialization 0015           __pcstackCOMMON 0070  
             __pmaintext 00E8               __pintentry 0004  __size_of_spiReceiveWait 0007  
                _SSPSTAT 0094               _initCONFIG 0078                ?_setupADC 0070  
              ?_spiWrite 0070                  __ptext1 0078                  __ptext2 00B1  
                __ptext3 00CF                  __ptext4 0019                  __ptext5 0101  
                __ptext6 00F1                  __ptext7 00FA             __size_of_isr 005F  
                _spiInit 00B1                  _spiRead 00F1     end_of_initialization 0015  
             ??_setupADC 0020                _RCSTAbits 0018               ??_spiWrite 0070  
              _TRISBbits 0086              spiWrite@dat 0070              ?_initCONFIG 0070  
              _TXSTAbits 0098           _spiReceiveWait 00FA              _BAUDCTLbits 0187  
    start_initialization 0011              __end_of_isr 0078   __end_of_spiReceiveWait 0101  
    __size_of_initCONFIG 0039              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020          ?_spiReceiveWait 0070        __size_of_setupADC 0019  
      __size_of_spiWrite 0006                 ?_spiInit 0020                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0022        interrupt_function 0004                 _PIE1bits 008C  
     spiInit@sDataSample 0020                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F             ??_initCONFIG 0024       __end_of_initCONFIG 00B1  
       __size_of_spiInit 001E         __size_of_spiRead 0009            __size_of_main 0009  
               _setupADC 00CF                 _spiWrite 0101             spiInit@sType 0023  
      spiInit@sClockIdle 0021               _INTCONbits 000B                 intlevel1 0000  
       ??_spiReceiveWait 0070               _OSCCONbits 008F  
